<div id="mgsettings">



	
	
	<br>
	<ul class="nav nav-stacked" id="settingsAccordion">


		<li class="panel">
			<h3> <a data-toggle="collapse" data-parent="#settingsAccordion" href="#settingsAA">Support<i class="icon-chevron-down"></i> </a></h3>
			<hr />
			<ul id="settingsAA" class="collapse">





					<div class="form-horizontal">
						<div class="control-group">
							<label class="control-label">{{ _('Download Logs') }}</label>
							<div class="controls">
								This will collect the logs into a single .zip file and then download them.
								<br>
								<br>
									<button class="btn btn-primary"  data-bind="enable: loginState.isUser(), click: function() { $root.commandResponse(''), $root.adminAction('collectLogs'), $root.showCommandResponse() }">Collect Logs</button>

							</div>
						</div>
					</div>


					<div class="form-horizontal">
						<div class="control-group">
							<label class="control-label">{{ _('OctoPrint Version:') }}</label>
							<div class="controls">
								<span data-bind="text: $root.octoprintVersion()"></span>
							</div>
						</div>
					</div>

					<div class="form-horizontal">
						<div class="control-group">
							<label class="control-label">{{ _('Plugin Version:') }}</label>
							<div class="controls">
								<span data-bind="text: $root.mgsetupVersion()"></span>
								<span data-bind="text: settings.settings.plugins.softwareupdate.version"></span>
								<hr>
{# 								<span data-bind="text: settings.settings.plugins.mgsetup.version"></span>
								<hr> #}

							</div>
						</div>
					</div>

					<div class="form-horizontal" data-bind="visible: $root.rrf()">
						<div class="control-group">
							<label class="control-label">{{ _('Download Duet Configuration Files') }}</label>
							<div class="controls">
									This will download all of the normally present configuration files on the Duet.  The files will be in the "backup" subdirectory of the logs folder; use "Collect Logs" above to download to your computer.
									<br>
									<br>
								<button class="btn btn-primary" data-bind="enable: loginState.isUser(), click: function() { $root.commandResponse(''), $root.adminAction('downloadAllRrfConfig'), $root.showCommandResponse() }">Download Duet Configuration</button>
								

								
							</div>
						</div>
					</div>

					<div class="form-horizontal" data-bind="visible: !$root.rrf()">
						<div class="control-group">
							<label class="control-label">{{ _('Firmware installed on RAMBo:') }}</label>
							<div class="controls">
								<span data-bind="text: $root.firmwareline()"></span>

							</div>
						</div>
					</div>

					<div class="form-horizontal" data-bind="visible: !$root.rrf()">
						<div class="control-group">
							<label class="control-label">{{ _('Latest Firmware available:') }}</label>
							<div class="controls">
								<span data-bind="text: settings.settings.plugins.mgsetup.localFirmwareVersion"></span>

							</div>
						</div>
					</div>



	
				<br>
				
				
				<br>

			</ul>
		</li>




		<li class="panel">
			<h3> <a data-toggle="collapse" data-parent="#settingsAccordion" href="#settingsA">OctoPrint interface options <i class="icon-chevron-down"></i> </a></h3>
			<hr />

			<ul id="settingsA" class="collapse">
				<li>
					<div class="buttonRow">
						{# <div class="buttonColumn" "> #}
							<form class="form-horizontal">
								<div class="control-group">
									<label class="control-label">{{ _('MGSetup As First Tab') }}</label>
									<div class="controls">
										<input type="checkbox" data-bind="checked: settings.settings.plugins.mgsetup.firstTab " />  This will set either the MakerGear Setup or Temperature tab as the first, primary tab.  After changing this, please Restart OctoPrint and Refresh the page to show the change.
									</div>
								</div>
							</form>


							<form class="form-horizontal">
								<div class="control-group">
									<label class="control-label">{{ _('Hide Debug Options') }}</label>
									<div class="controls">
										<input type="checkbox" data-bind="checked: settings.settings.plugins.mgsetup.hideDebug" />
									</div>
								</div>
							</form>

							<div class="form-horizontal">
								<div class="control-group">
									<label class="control-label">{{ _('Webcam Controls') }}</label>
									<div class="controls">
										Enable/Disable webcam will show/hide the webcam feed in the control tab  NOTE: You will need to restart OctoPrint and reload the page after clicking the button below.

										<br />
										<button class="btn btn-primary" data-bind="enable: loginState.isUser(), click: function() { $root.settings.webcam_streamUrl('/webcam/?action=stream') }">Enable Webcam</button> &nbsp;&nbsp;&nbsp;<button class="btn btn-primary" data-bind="enable: loginState.isUser(), click: function() { $root.settings.webcam_streamUrl('') }">Disable Webcam</button>


									</div>
								</div>
							</div>







						{# </div> #}
					</div>
				</li>
			</ul>
		</li>

		<li class="panel">
			<h3> <a data-toggle="collapse" data-parent="#settingsAccordion" href="#settingsB">Printer Usage Information<i class="icon-chevron-down"></i> </a></h3>
			<hr />


			<ul id="settingsB" class="collapse">
				<p>
					This section shows the total time that your printer has printed*.  Format is Days, hh:mm:ss .
					<br />
					 "Success Time" includes all prints that reached 100% completion - this does not account for prints that physically failed.
					 <br />
					 "Unsuccessful Time" includes any prints that have not reached 100% completion, whether through manual cancellation of the print, or because of printer error.
				</p>
				<li>
					<div class="buttonRow">
						{# <div class="buttonColumn" "> #}





							<div class="form-horizontal">
								<div class="control-group">
									<label class="control-label">{{ _('Total Printer Print Success Time:') }}</label>
									<div class="controls">
										 <span data-bind="text: settings.settings.plugins.mgsetup.totalPrintSuccessTimeFriendly"></span>

									</div>
								</div>
							</div>

							<div class="form-horizontal">
								<div class="control-group">
									<label class="control-label">{{ _('Total Printer Print Unsuccessful Time:') }}</label>
									<div class="controls">
										  <span data-bind="text: (settings.settings.plugins.mgsetup.totalPrintFailTimeFriendly()).toString()"></span>

									</div>
								</div>
							</div>

							<div class="form-horizontal">
								<div class="control-group">
									<label class="control-label">{{ _('Total Printer Machine Unsuccessful Time: ') }}</label>
									<div class="controls">
										<span data-bind="text: (settings.settings.plugins.mgsetup.totalMachineFailTimeFriendly()).toString()"></span>

									</div>
								</div>
							</div>

							<hr />



							<div class="form-horizontal">
								<div class="control-group">
									<label class="control-label">{{ _('Project Print Name ') }}</label>
									<div class="controls">
										 <span data-bind="text: (settings.settings.plugins.mgsetup.currentProjectName()).toString()"></span>


									</div>
								</div>
							</div>


							<div class="form-horizontal">
								<div class="control-group">
									<label class="control-label">{{ _('Project Print Unsuccessful Time: ') }}</label>
									<div class="controls">
										<span data-bind="text: (settings.settings.plugins.mgsetup.currentProjectPrintSuccessTimeFriendly()).toString()"></span>
									</div>
								</div>
							</div>

							<div class="form-horizontal">
								<div class="control-group">
									<label class="control-label">{{ _('Project Machine Unsuccessful Time: ') }}</label>
									<div class="controls">
										<span data-bind="text: (settings.settings.plugins.mgsetup.currentProjectPrintFailTimeFriendly()).toString()"></span>
							<br>

									</div>
								</div>
							</div>

							<div class="form-horizontal">
								<div class="control-group">
									<label class="control-label">{{ _('Total Printer Machine Unsuccessful Time: ') }}</label>
									<div class="controls">
										<span data-bind="text: (settings.settings.plugins.mgsetup.currentProjectMachineFailTimeFriendly()).toString()"></span>

									</div>
								</div>
							</div>


							<hr>

							<br>

							New Project: <input data-bind="textInput: $root.newCurrentProjectName" />
							<button class="btn btn-primary" data-bind="click: function() { $root.adminAction('resetCurrentProject','newProjectName',$root.newCurrentProjectName()), $root.newCurrentProjectName('') }">Set New Project Name<br /> & Reset Current Project Time </button>
						

							<hr>
							*This time only reflects print time after MGsetup Plugin v 3.0.0.6. Print time before that version of the plugin was installed is not included. 

							<hr />
						{# </div> #}
					</div>
				</li>
			</ul>
		</li>
		<form class="form-horizontal">
			<div class="control-group">
				<label class="control-label">{{ _('Unlock Advanced Operations') }}</label>
				<div class="controls">
					<input type="checkbox" data-bind="checked: $root.unlockAdvanced " />  These should only be performed when instructed by Support, as these operations can significantly change printer configuration.
				</div>
			</div>
		</form>

		<li class="panel" data-bind="visible: $root.unlockAdvanced()">
			<h3> <a data-toggle="collapse" data-parent="#settingsAccordion" href="#settingsCC">Registration<i class="icon-chevron-down"></i> </a></h3>
			<hr />

			<ul id="settingsCC" class="collapse">
				<li>
					<div class="buttonRow">
						{# <div class="buttonColumn" "> #}



						


							<div class="form-horizontal">
								<div class="control-group">
									<label class="control-label">{{ _('Reset Registration') }}</label>
									<div class="controls">
											This will Reset the Registration on this printer.
											<br>
											<button class="btn btn-primary" data-bind="enable: loginState.isUser() && $root.unlockAdvanced(), click: function() { $root.commandResponse(''), $root.adminAction('resetRegistration'), $root.showCommandResponse() }">Reset Registration</button>
									</div>
								</div>
							</div>


							
						{# </div> #}
					</div>
				</li>
			</ul>
		</li>



		<li class="panel" data-bind="visible: $root.unlockAdvanced()">
			<h3> <a data-toggle="collapse" data-parent="#settingsAccordion" href="#settingsC">Networking<i class="icon-chevron-down"></i> </a></h3>
			<hr />

			<ul id="settingsC" class="collapse">
				<li>
					<div class="buttonRow">
						{# <div class="buttonColumn" "> #}


						
							<div class="form-horizontal">
								<div class="control-group">
									<label class="control-label">{{ _('Change Hostname') }}</label>
									<div class="controls">
											This will change the M3's Hostname - this is used for both your .local address and your Access Point SSID. Your M3 will automatically restart after changing the Hostname - Please use the new Hostname to connect again.
											<br>
												<input data-bind="textInput: $root.newHostname" />
							
												<button class="btn btn-primary" data-bind="enable: loginState.isUser() && $root.newHostname().length > 0, click: function() { $root.commandResponse(''), $root.changeHostname($root.newHostname()), $root.showCommandResponse() }">Change Hostname</button>
									</div>
								</div>
							</div>

						
							<div class="form-horizontal">
								<div class="control-group">
									<label class="control-label">{{ _('Change AP Password') }}</label>
									<div class="controls">
											This will change the  Access Point Password.  The Access Point will Restart to use the new Password.
											<br>
												<input data-bind="textInput: $root.newNetconnectdPassword" />
							<button class="btn btn-primary" data-bind="enable: loginState.isUser() && $root.newNetconnectdPassword().length > 7, click: function() { $root.commandResponse(''), $root.writeNetconnectdPassword($root.newNetconnectdPassword()), $root.showCommandResponse() }">
							Set Password</button><br><div data-bind="visible: loginState.isUser() && $root.newNetconnectdPassword().length < 8">The password must be at least 8 characters long.
							</div> 
									</div>
								</div>
							</div>



						
							<div class="form-horizontal">
								<div class="control-group">
									<label class="control-label">{{ _('Reset Networking Configuration / Restart AP Mode') }}</label>
									<div class="controls">
											This will disconnect the printer from your current network and enable the default printer Access Point, returning the printer to the original Networking state.
											<br>
												<button class="btn btn-primary" data-bind="enable: loginState.isUser() && $root.unlockAdvanced(), click: function() { $root.commandResponse(''), $root.adminAction('resetWifi'), $root.showCommandResponse() }">Reset Networking</button>

									</div>
								</div>
							</div>



							
						
							<div class="form-horizontal">
								<div class="control-group">
									<label class="control-label">{{ _('Disable Wifi') }}</label>
									<div class="controls">
											This will reboot the M3 and disable all Wifi Communication - you will only be able to connect via Ethernet.
											<br>
												<button class="btn btn-primary" data-bind="enable: loginState.isUser() && $root.unlockAdvanced(), click: function() { $root.commandResponse(''), $root.adminAction('disableRadios'), $root.showCommandResponse() }">Disable Wifi</button>

									</div>
								</div>
							</div>


						
							<div class="form-horizontal">
								<div class="control-group">
									<label class="control-label">{{ _('Enable Wifi') }}</label>
									<div class="controls">
											This will reboot the M3 and enable all Wifi Communication
											<br>
												<button class="btn btn-primary" data-bind="enable: loginState.isUser() && $root.unlockAdvanced(), click: function() { $root.commandResponse(''), $root.adminAction('enableRadios'), $root.showCommandResponse() }">Enable Wifi</button>

									</div>
								</div>
							</div>



							

						<hr>
						<h3>Samba</h3>

							<div class="form-horizontal">
								<div class="control-group">
									<label class="control-label">{{ _('Disable Samba') }}</label>
									<div class="controls">
											This will disable Samba file sharing.
											<br>
												<button class="btn btn-primary" data-bind="enable: loginState.isUser() && $root.unlockAdvanced(), click: function() { $root.commandResponse(''), $root.adminAction('disableSmb'), $root.showCommandResponse() }">Disable Samba</button>

									</div>
								</div>
							</div>

							<div class="form-horizontal">
								<div class="control-group">
									<label class="control-label">{{ _('Enable Samba') }}</label>
									<div class="controls">
											This will enable Samba file sharing.
											<br>
												<button class="btn btn-primary" data-bind="enable: loginState.isUser() && $root.unlockAdvanced(), click: function() { $root.commandResponse(''), $root.adminAction('enableSmb'), $root.showCommandResponse() }">Enable Samba</button>

									</div>
								</div>
							</div>



							<div class="form-horizontal">
								<div class="control-group">
									<label class="control-label">{{ _('Samba Patch Status:') }}</label>
									<div class="controls">
										<span data-bind="text: $root.smbpatchstring()"></span>

									</div>
								</div>
							</div>
						

						
							<div class="form-horizontal">
								<div class="control-group">
									<label class="control-label">{{ _('Patch Samba') }}</label>
									<div class="controls">
											This will manually patch the SMB server to disable anonymous login.
											<br>
												<button class="btn btn-primary" data-bind="enable: loginState.isUser() && $root.unlockAdvanced(), click: function() { $root.commandResponse(''), $root.adminAction('patchSmb'), $root.showCommandResponse() }">Patch Samba</button>

									</div>
								</div>
							</div>



						




						{# </div> #}
					</div>
				</li>
			</ul>
		</li>

		<li class="panel" data-bind="visible: $root.unlockAdvanced()">
			<h3> <a data-toggle="collapse" data-parent="#settingsAccordion" href="#settingsD">Firmware<i class="icon-chevron-down"></i> </a></h3>
			<hr />

			<ul id="settingsD" class="collapse">
				<li>
					<div class="buttonRow">


					<div class="form-horizontal">
						<div class="control-group">
							<label class="control-label">{{ _('Firmware installed on  RAMBo:') }}</label>
							<div class="controls">
								<span data-bind="text: $root.firmwareline()"></span>

							</div>
						</div>
					</div>

					<div class="form-horizontal">
						<div class="control-group">
							<label class="control-label">{{ _('Bundled Firmware ready for installation:') }}</label>
							<div class="controls">
								<span data-bind="text: settings.settings.plugins.mgsetup.localFirmwareVersion"></span>

							</div>
						</div>
					</div>

					<hr />

						<div class="form-horizontal">
							<div class="control-group">
								<label class="control-label">{{ _('Update and Install Firmware') }}</label>
								<div class="controls">
										This will Update the local copy of the firmware, and then Install the firmware to the printer.  Disconnect before Installing.
										<br>
											<button class="btn btn-primary" data-bind="enable: loginState.isUser() && $root.unlockAdvanced(), click: function() { $root.commandResponse(''), $root.adminAction('uploadAndFlashFirmware'), $root.showCommandResponse() }">
						Update and Install Firmware</button>

								</div>
							</div>
						</div>

						<h4>Advanced Firmware Options</h4>
						<div class="form-horizontal">
							<div class="control-group">
								<label class="control-label">{{ _('Install Bundled Firmware') }}</label>
								<div class="controls">
										This will Install the bundled firmware to the printer.  Disconnect before Installing.
										<br>
											<button class="btn btn-primary" data-bind="enable: loginState.isUser() && $root.unlockAdvanced(), click: function() { $root.commandResponse(''), $root.adminAction('uploadFirmware'), $root.showCommandResponse() }">
						Install Firmware</button>

								</div>
							</div>


						<div class="form-horizontal">
							<div class="control-group">
								<label class="control-label">{{ _('Update Bundled Firmware') }}</label>
								<div class="controls">
										This will update your bundled firmware to the latest version.  You will need to Upload Firmware after the update if desired.
										<br>
											<button class="btn btn-primary" data-bind="enable: loginState.isUser() && $root.unlockAdvanced(), click: function() { $root.commandResponse(''), $root.adminAction('updateFirmware'), $root.showCommandResponse() }">Update Bundled Firmware</button>

								</div>
							</div>
						</div>






					</div>
				</li>
			</ul>
		</li>
		<!--<li class="panel" data-bind="visible: $root.unlockAdvanced()">
			<h3> <a data-toggle="collapse" data-parent="#settingsAccordion" href="#settingsE">Networking<i class="icon-chevron-down"></i> </a></h3>
			<hr />

			<ul id="settingsE" class="collapse">
				<li>
					<div class="buttonRow">

						
					{# </div> #}
				</div>
			</li>
		</ul>
	</li>-->

	<li class="panel" data-bind="visible: $root.unlockAdvanced()">
		<h3> <a data-toggle="collapse" data-parent="#settingsAccordion" href="#settingsF">SSH Access<i class="icon-chevron-down"></i> </a></h3>
			<hr />

		<ul id="settingsF" class="collapse">
			<li>
				<div class="buttonRow">
					{# <div class="buttonColumn" "> #}

							<div class="form-horizontal">
								<div class="control-group">
									<label class="control-label">{{ _('SSH status') }}</label>
									<div class="controls">
											This will Show the Current response from "sudo service ssh status".
											<br>
										<button class="btn btn-primary" data-bind="enable: loginState.isUser() && $root.unlockAdvanced(), click: function() { $root.commandResponse(''), $root.adminAction('sshState'), $root.showCommandResponse() }">Show SSH status</button>
									</div>
								</div>
							</div>


							<div class="form-horizontal">
								<div class="control-group">
									<label class="control-label">{{ _('Turn SSH On') }}</label>
									<div class="controls">
											This will enable the SSH service on the M3.
											<br>
									<button class="btn btn-primary" data-bind="enable: loginState.isUser() && $root.unlockAdvanced(), click: function() { $root.commandResponse(''), $root.adminAction('turnSshOn'), $root.showCommandResponse() }">Turn SSH On</button>
									</div>
								</div>
							</div>


							<div class="form-horizontal">
								<div class="control-group">
									<label class="control-label">{{ _('Turn SSH Off') }}</label>
									<div class="controls">
											This will disable the SSH service on the M3.
											<br>
										
						<button class="btn btn-primary" data-bind="enable: loginState.isUser() && $root.unlockAdvanced(), click: function() { $root.commandResponse(''), $root.adminAction('turnSshOff'), $root.showCommandResponse() }">Turn SSH Off</button>
								</div>
							</div>




							<form class="form-horizontal">
								<div class="control-group">
									<label class="control-label">{{ _('Show SSH Enabled Warning') }}</label>
									<div class="controls">
										<input type="checkbox" data-bind="enable: loginState.isUser() && $root.unlockAdvanced(), checked: settings.settings.plugins.mgsetup.warnSsh" />
									</div>
								</div>
							</form>

	


					{# </div> #}
				</div>
			</li>
		</ul>
	</li>

	<li class="panel" data-bind="visible: $root.unlockAdvanced()">
		<h3> <a data-toggle="collapse" data-parent="#settingsAccordion" href="#settingsG">Diagnostics<i class="icon-chevron-down"></i> </a></h3>
			<hr />

		<ul id="settingsG" class="collapse">
			<li>
				<div class="buttonRow">
					{# <div class="buttonColumn" "> #}

							<div class="form-horizontal">
								<div class="control-group">
									<label class="control-label">{{ _('Show Network Info') }}</label>
									<div class="controls">
											This will Show the Current ifconfig and netconnect status.
											<br>
										<button class="btn btn-primary" data-bind="enable: loginState.isUser() && $root.unlockAdvanced(), click: function() { $root.commandResponse(''), $root.adminAction('showIfconfig'), $root.showCommandResponse() }">Show Network Info</button>
								</div>
							</div>
							<div class="form-horizontal">
								<div class="control-group">
									<label class="control-label">{{ _('Show ps') }}</label>
									<div class="controls">
											This will Show the Current running processes as reported by "ps -eF".
											<br>
										<button class="btn btn-primary" data-bind="enable: loginState.isUser() && $root.unlockAdvanced(), click: function() { $root.commandResponse(''), $root.adminAction('ps'), $root.showCommandResponse() }">Show ps</button>
								</div>
							</div>
							<div class="form-horizontal">
								<div class="control-group">
									<label class="control-label">{{ _('Show route') }}</label>
									<div class="controls">
											This will Show the Current route as reported by "route -n".
											<br>
										<button class="btn btn-primary" data-bind="enable: loginState.isUser() && $root.unlockAdvanced(), click: function() { $root.commandResponse(''), $root.adminAction('routen'), $root.showCommandResponse() }">Show route</button>
								</div>
							</div>
							<div class="form-horizontal">
								<div class="control-group">
									<label class="control-label">{{ _('Show w') }}</label>
									<div class="controls">
											This will Show the Current response from "w | head -n1".
											<br>
										<button class="btn btn-primary" data-bind="enable: loginState.isUser() && $root.unlockAdvanced(), click: function() { $root.commandResponse(''), $root.adminAction('whead'), $root.showCommandResponse() }">Show w</button>
								</div>
							</div>


					{# </div> #}
				</div>
			</li>
		</ul>
	</li>


	<li class="panel" data-bind="visible: $root.unlockAdvanced()">
		<h3> <a data-toggle="collapse" data-parent="#settingsAccordion" href="#settingsH">Misc. Operations<i class="icon-chevron-down"></i> </a></h3>
			<hr />

		<ul id="settingsH" class="collapse">
			<li>
				<div class="buttonRow">
					{# <div class="buttonColumn" "> #}
						<div class="form-horizontal" data-bind="visible: $root.rrf()">
							<div class="control-group">
								<label class="control-label">{{ _('Test LEDs') }}</label>
								<div class="controls">
										This will change the U1 LED strip color.
										<br>
										<center>
									<button class="btn btn-primary" data-bind="enable: loginState.isUser() && $root.unlockAdvanced(), click: function() { $root.commandResponse(''), $root.adminAction('setLedColor', 'color', 'red') }">Red</button>  <button class="btn btn-primary" data-bind="enable: loginState.isUser() && $root.unlockAdvanced(), click: function() { $root.commandResponse(''), $root.adminAction('setLedColor', 'color', 'green') }">Green</button>  <button class="btn btn-primary" data-bind="enable: loginState.isUser() && $root.unlockAdvanced(), click: function() { $root.commandResponse(''), $root.adminAction('setLedColor', 'color', 'blue') }">Blue</button>  <button class="btn btn-primary" data-bind="enable: loginState.isUser() && $root.unlockAdvanced(), click: function() { $root.commandResponse(''), $root.adminAction('setLedColor', 'color', 'white') }">White</button>
										</center>

									
								</div>
							</div>
						</div>

							<div class="form-horizontal">
								<div class="control-group">
									<label class="control-label">{{ _('Restore Log Symlinks') }}</label>
									<div class="controls">
											Patch to create system log symlinks allowing easy OctoPrint access.
											<br>
										<button class="btn btn-primary" data-bind="enable: loginState.isUser() && $root.unlockAdvanced(), click: function() { $root.commandResponse(''), $root.adminAction('logpatch'), $root.showCommandResponse() }">Log Patch</button>
									</div>
								</div>
							</div>




							<div class="form-horizontal">
								<div class="control-group">
									<label class="control-label">{{ _('Expand Filesystem') }}</label>
									<div class="controls">
											This will expand the root filesystem to allow access to the full storage capacity of the system disk.  This only needs to be run once, and almost never by the end user.  Your Raspberry Pi will automatically restart to finish the expansion.
											<br>
										<button class="btn btn-primary" data-bind="enable: loginState.isUser() && $root.unlockAdvanced(), click: function() { $root.commandResponse(''), $root.adminAction('expandFilesystem'), $root.showCommandResponse() }">Expand Root Filesystem</button>
									</div>
								</div>
							</div>
							
							
							<br><br>
							
							<hr />
							
							<div class="form-horizontal" data-bind="visible: $root.rrf()">
								<div class="control-group">
									<label class="control-label">{{ _('Reset T0 Probe Offset to 0') }}</label>
									<div class="controls">
											This will reset the T0 Probe Offset to 0.  This change will happen immediately and cannot be undone.  Perform a standard T0 Probe Offset calibration after running this.
											<br>
										<button class="btn btn-primary" data-bind="enable: loginState.isUser() && $root.unlockAdvanced(), click: function() { $root.commandResponse(''), $root.adminAction('changeRrfConfig','command', {'targetParameter':'probeOffset','newValue':'0'}) }">Reset T0 Probe Offset to 0</button>
										

										
									</div>
								</div>
							</div>
							<div class="form-horizontal" data-bind="visible: $root.rrf()">
								<div class="control-group">
									<label class="control-label">{{ _('Reset T1 Z Offset to 0') }}</label>
									<div class="controls">
											This will reset the T1 Z Offset to 0.  This change will happen immediately and cannot be undone.  Perform a standard T1 Z Offset calibration after running this.
											<br>
										<button class="btn btn-primary" data-bind="enable: loginState.isUser() && $root.unlockAdvanced(), click: function() { $root.commandResponse(''), $root.adminAction('changeRrfConfig','command', {'targetParameter':'t1OffsetZ','newValue':'0'}) }">Reset T1 Z Offset to 0</button>
										

										
									</div>
								</div>
							</div>
							<div class="form-horizontal" data-bind="visible: $root.rrf()">
								<div class="control-group">
									<label class="control-label">{{ _('Upload / Overwrite Duet Configuration Files') }}</label>
									<div class="controls">
											This will upload and overwrite <b>all</b> configuration files on the Duet.  This will happen immediately and cannot be undone.  Perform all calibration processes after running this command.
											<br>
										<button class="btn btn-primary" data-bind="enable: loginState.isUser() && $root.unlockAdvanced(), click: function() { $root.commandResponse(''), $root.adminAction('uploadAllRrfConfig'), $root.showCommandResponse() }">Overwrite Duet Configuration</button>
										

										
									</div>
								</div>
							</div>

						<!--
						<button class="btn btn-primary" data-bind="enable: loginState.isUser() && $root.unlockAdvanced(), click: function() { $root.commandResponse(''), $root.adminAction('patch'), $root.showCommandResponse() }">Patch</button>
						<br>
						One-time pre-ship patch.
						<br><br>-->




						
						<br>
						
					{# </div> #}
				</div>
			</li>
		</ul>
	</li>

{# 
	<li class="panel" data-bind="visible: $root.unlockAdvanced()">
		<h3> <a data-toggle="collapse" data-parent="#settingsAccordion" href="#settingsI">Printer Upgrades<i class="icon-chevron-down"></i> </a></h3>
			<hr />

		<ul id="settingsI" class="collapse">
			<li>
				<div class="buttonRow"> #}
					{# <div class="buttonColumn" ">


							<div class="form-horizontal">
								<div class="control-group">
									<label class="control-label">{{ _('ID Rev 0 to Rev 1') }}</label>
									<div class="controls">
											Update software and firmware configurations after upgrading a M3 Independent Dual Revision 0 to Revision 1 (add probe).  Once the upgrade is complete, please go through the Quick Check process to become familiar with changed printer operations, and to calibrate your M3 for printing.
											<br>
										<button class="btn btn-primary" data-bind="enable: loginState.isUser() && $root.unlockAdvanced(), click: function() { $root.commandResponse(''), $root.adminAction('printerUpgrade', 'upgradeType', 'idRev0toRev1'), $root.showCommandResponse() }">Upgrade ID Rev 0 to Rev 1</button>
								</div>
							</div>

						<br>
						

				</div>
			</li>
		</ul>
	</li>

 #}



</ul>




{# <select data-bind="enable: loginState.isUser() && $root.unlockAdvanced(), options: ['master','refactor'],
optionsCaption: 'Choose one...',
value: settings.settings.plugins.mgsetup.pluginVersion"></select> #}
{# </div> #}
{# <div class="buttonColumn" "> #}
	{# Local Firmware Version: <span data-bind="text: settings.settings.plugins.mgsetup.localFirmwareVersion"></span><br> #}
{# <button class="btn btn-primary" data-bind="enable: loginState.isUser() && $root.unlockAdvanced(), click: function() { $root.commandResponse(''), $root.adminAction('lockFirmware'), $root.showCommandResponse() }">Lock Firmware</button>
<br>
This will create a lock file in the firmware folder, which will prevent the firmware update from running.<br>
<br>

<button class="btn btn-primary" data-bind="enable: loginState.isUser() && $root.unlockAdvanced(), click: function() { $root.commandResponse(''), $root.adminAction('unlockFirmware'), $root.showCommandResponse() }">Unlock Firmware</button>
<br>
This will delete the firmware lock file, allowing updating of the local firmware copy.<br><br> 

<hr />

#}
{# 
<br>
PrinterView String:<textarea data-bind="text: $root.printerViewString" style="width:90%;"></textarea>
<br>

<br>
<hr /> #}


<div id="command_response_popup" class="modal hide fade">
	<center>Command Response:</center>
	<br>
	<center><textarea id="commandResponseText" data-bind="text: $root.commandResponse" style="width:90%;height:250px;"></textarea></center>
	<br>
	<div align="right"><button class="btn btn-primary" data-bind="click: function() { $root.showCommandResponse('hide') }">Close</button></div>

</div>

</div>
