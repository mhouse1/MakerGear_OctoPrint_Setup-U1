<div id="mgtabwarning" style="display: inline">
	<center>
		<br>
		<p style="font-size:60px">LOADING</p>
		<br>
		<br>
		OctoPrint and the MakerGear Setup tab are still loading; if this does not change shortly, a popup or script blocker may be preventing the page from loading correctly.
	</center>
</div>
<div id="mglogin" style="visibility: hidden" data-bind="visible: loginState.loggedIn() === false">
	<center>
		<br>
		<br>You are not logged into OctoPrint. Use the "Login" button in the upper right corner to continue. You can find the default username and password in the setup guide.
		<br>
		<br>
	</center>
</div>

<div id="mgtab" style="visibility: hidden" data-bind="visible: loginState.isUser">



	<div class="fileupload-new thumbnail" style="width: 95%; margin:auto; " data-bind="visible: loginState.isUser && setupStep()!='0' ">

		<p data-bind=" visible: loginState.isUser && setupStep()!=='0'" style="font-size:11px;text-align:center;"><strong style="font-size:14px;">Progress Bar</strong>
			<br />Do not refresh during the setup process, or you will need to start over from the beginning.
		</p>

		<div class="progress">
			{# <div class="progress bar-warning" role="progressbar" aria-valuemin="0" aria-valuemax="parseFloat(maxSteps())" data-bind="style: {width: ((parseFloat(setupStep())) * (100/parseFloat(maxSteps()))) + '%'} "></div> #}
			{# <div class="progress bar-warning" role="progressbar" aria-valuemin="0" aria-valuemax="parseFloat(maxSteps())" data-bind="style: {width: ((parseFloat($root.setupStepHistory().length)) * (100/parseFloat(maxSteps()))) + '%'} "></div> #}
			<div class="progress bar-warning" role="progressbar" aria-valuemin="0" aria-valuemax="parseFloat(maxSteps())" data-bind="style: {width: ((parseFloat($root.stepProgressArray[parseFloat(setupStep())])) * (100/parseFloat(maxSteps()))) + '%'} "></div>
		</div>

	</div>



	{##}
	{#	   ,a8888a,     #}
	{#	 ,8P"'  `"Y8,   #}
	{#	,8P        Y8,  #}
	{#	88          88  #}
	{#	88          88  #}
	{#	`8b        d8'  #}
	{#	 `8ba,  ,ad8'   #}
	{#	   "Y8888P"     #}
	{#					#}
	{# Welcome #}

	<div class="jog-panel" style="display: none;" data-bind="visible: loginState.isUser && setupStep()==='0'">





		<div data-bind="visible: ($root.googleGood()===-1)">
			<p>
				We're currently checking your Internet Connection Status.
			</p>
		</div>
		<div data-bind="visible: $root.googleGood()===0"> 
			<p>
				You are <span style="color:red"> NOT </span> connected to the Internet. Please connect an Ethernet cable or use the "Wireless Configuration" button below to connect your <span data-bind="text: $root.printerNameForDisplay"></span> 3D Printer to an Internet enabled network.
				<center>
					<button style="width:150px;height:100px;" class="btngo" data-bind="visible: loginState.isUser, click: function() {$root.showSettings()}">
						<img data-bind="attr: {'src': '/plugin/mgsetup/static/img/wifiWhite.png', 'width': '50px',} , visible: loginState.isUser && (setupStep()==='0')" />
						<br />
						Wireless Configuration
					</button>
				</center>
				<br />
				<center>
					<button data-bind="click: function() { $root.checkGoogle() }"> Check Internet Connection Again</button>
				</center>
			</p>
		</div> 
		<div data-bind="visible: $root.googleGood()===1">
		<!--<p>
			You are connected to the Internet - please proceed to Quick Check 
		<hr />
	</p>-->
</div>

<style>
.buttonColumn {
	float: left;
	width: 33.33%;
}

/* Clear floats after the columns */
.buttonRow:after {
	content: "";
	display: table;
	clear: both;
}


</style>


<div class="buttonRow" style="text-align:center;">
	<div class="buttonColumn">
		<button style="width:130px;height:100px;" class="btngo" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser(), visible: !hasProbe(), click: function() {  $root.goTo('28'); window.scroll(0,0); $root.cooldown() }">
			<span class="icon-gear" style="font-size:40px;"></span>
			<br /> {{ _('Quick Check') }}
		</button>

		<button style="width:130px;height:100px;" class="btngo" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser(), visible: hasProbe(), click: function() { $root.goTo('28'); window.scroll(0,0); $root.cooldown(); $root.adminAction('flushPrintActive') }">
			<span class="icon-gear" style="font-size:40px;"></span>
			<br /> {{ _('Quick Check') }}
		</button>
		<br />
		Verify your <span data-bind="text: $root.printerNameForDisplay"></span>'s calibration.
	</div>

	<div class="buttonColumn">
		<button style="width:130px;height:100px;" class="btngo"  onClick="window.open('https://makergear.zendesk.com/hc/en-us','_blank','menubar=yes,resizable=yes,height=520,width=740'); return false;" >
			<span class="icon-book" style="font-size:40px;"></span>
			<br /> {{ _('Knowledge Base') }}
		</button>
		<br />
		Learn more about your <span data-bind="text: $root.printerNameForDisplay"></span>.
	</div>

	<div class="buttonColumn">
		<button style="width:130px;height:100px;" class="btngo"  data-bind="click: function() {$root.showMaintenanceStep(0,'#tab_plugin_mgsetup_maintenance-cleanup'); window.scroll(0,0); return true}" >
			<span class="icon-stethoscope" style="font-size:40px;"></span>
			<br /> {{ _('Maintenance') }}
		</button>
		<br />
		Perform routine maintenance tasks.

	</div>


</div>




<hr />


<h2>FAQs</h2>
<div style="width:50%;float:left;">
	<h4>Octoprint with the <span data-bind="text: $root.printerNameForDisplay"></span></h4>

	<ul>
		<li>
			<a href="https://makergear.zendesk.com/hc/en-us/articles/360000267623" target="_blank">What is OctoPrint? </a>
		</li>
		<li>
			<a href="https://makergear.zendesk.com/hc/en-us/articles/115002709903-OctoPrint-for-MakerGear-How-to-convert-an-STL-file-into-a-physical-object-" target="_blank">How do I print my own designs? </a>
		</li>
		<li>
			<a href="https://makergear.zendesk.com/hc/en-us/articles/115002763003-OctoPrint-for-MakerGear-Manipulate-and-multiply-3D-models-using-CuraEngine-and-more" target="_blank"> How do I view my models before printing? </a>
		</li>


	</ul>
</div>

<div style="width:50%;float:left;">
	<h4>Simplify3D With the <span data-bind="text: $root.printerNameForDisplay"></span></h4>
	<ul>
		<li>
			<a href="https://makergear.zendesk.com/hc/en-us/articles/360000268063" target="_blank">What is Simplify3D?</a>
		</li>

		<li>
			<a href="https://makergear.zendesk.com/hc/en-us/articles/115004464806-Simplify3D-Profiles-and-Factory-Files-for-M3-and-M3ID" target="_blank">How do I install profiles for the <span data-bind="text: $root.printerNameForDisplay"></span> in Simplify3D? </a>
		</li>
		<li data-bind="visible: !$root.isDual()">
			<a href="https://makergear.zendesk.com/hc/en-us/articles/115003052343-Simplify3D-Workflow" target="_blank">How do I use Simplify3D with my <span data-bind="text: $root.printerNameForDisplay"></span>?</a>
		</li>
		<li data-bind="visible: $root.isDual()">
			<a href="https://makergear.zendesk.com/hc/en-us/articles/115004621743-Single-Extrusion-Prints-with-the-M3ID" target="_blank">How do I use Simplify3D with my <span data-bind="text: $root.printerNameForDisplay"></span>? </a>
		</li>


	</ul>

</div>

<div style="clear:both;"></div>




</div>

{#        88    #}
{#      ,d88    #}
{#    888888    #}
{#        88    #}
{#        88    #}
{#        88    #}
{#        88    #}
{#        88    #}

{# STARTING HEIGHT CHECK #}
<div class="jog-panel" style="display: none;" data-bind="visible: loginState.isUser && setupStep()==='1'">

	<div class="fileupload-new thumbnail" style="width: 95%; margin:auto; " data-bind="visible: $root.isDual">
		<img data-bind="attr: {'src': $root.t0Picture, 'width': '100%',} , visible: loginState.isUser && setupStep()==='1'" />
	</div>
	<br>


	<h1 style="text-align:left;">Starting Height Check</h1>
	<p style="text-align:left;">
		During the next few steps, you will verify the printer's starting height. First, we'll use a simple visual test to perform a safety check. Click <strong>Prepare</strong> to move the printer to its testing position.
		<br>
		<br>
	</p>

	<div class = "fileupload-new thumbnail" style="width:75%; margin:auto; background-color:rgba(200,0,0,0.2); display:block; " data-bind="visible:$root.untouchable()">
		<strong>Prepare</strong> has been disabled until the printer is safe to physically interact with.  Click <strong>Cooldown</strong> to turn off all heaters if necessary - this message will be removed when it is safe to proceed.
		<br>
		<br>
		<div style="margin:auto; display:block; padding:4px; border:8px solid #000; border-radius:10px; text-align:center; width:60%;">
			<div style="display:inline-block; vertical-align:middle; width:25%; text-align:center; ">
				<img data-bind="attr: {'src': '/plugin/mgsetup/static/img/thermometer.png', 'width': '80%',} , visible: loginState.isUser " />
			</div>

			<div style="width: 70%; display:inline-block; vertical-align:middle; text-align:left;">
				Bed Temperature: <span data-bind="text: $root.displayBedTemp(), style: { color: (parseFloat($root.displayBedTemp()) < 40) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayBedTempTarget()"></span><br>
				<div data-bind="visible: !$root.isDual()">
					Extruder Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
				</div>
				<div data-bind="visible: $root.isDual()">
					Extruder 0 Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
					Extruder 1 Temperature: <span data-bind="text: $root.displayTool1Temp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayTool1TempTarget()"></span><br>
				</div>
			</div>
		</div>
		<br>
		<center>
			<button class="btnstay" data-bind="enable: loginState.isUser(), click: function() {$root.cooldown()}">Cooldown</button>
		</center>
	</div>


	<center>
		<button id="control-yinc" class="btnstay" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && !$root.stepOnePrepared() && !$root.untouchable(), click: function() { $root.stepOneConfirm() }">{{ _('Prepare') }}</button><br><br>
		<p style="">
			<div data-bind="visible: $root.isDual()">
				Once the printer has stopped moving, use your hand to slide the Extruder towards the build surface. If the Left Extruder (T0) nozzle touches the glass, do not force the T0 extruder any further.
			</div>
			<div data-bind="visible: !$root.isDual()">
				Once the printer has stopped moving, use your hand to slide the Extruder towards the build surface. If the nozzle hits the glass, do not force the Extruder any further. 
			</div>
		</p>
		<p >
			<span style="text-align:left;font-size:20px;" >Which of the following options best describes your current Extruder starting height? Click the photos to zoom in.</span>
		</p>
	</center>
	<table>
		<tr>
			<td style="width:33%;padding:10px;border:2px solid #ddd;">
				<div data-bind="visible:!$root.isDual()">
					<a href="/plugin/mgsetup/static/img/6.jpg" data-lightbox="step2"><img data-bind="attr: {'src': '/plugin/mgsetup/static/img/6.jpg', 'width': '100%',} , visible: loginState.isUser && setupStep()==='1'" /></a>
				</div>
				<div data-bind="visible:$root.isDual()">
					<a href="/plugin/mgsetup/static/img/15.jpg" data-lightbox="step2"><img data-bind="attr: {'src': '/plugin/mgsetup/static/img/15.jpg', 'width': '100%',} , visible: loginState.isUser && setupStep()==='1'" /></a>
				</div>
				<button style="min-height:80px;width:100%;" id="control-yinc" class="btngo" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && stepOnePrepared(), click: function() { $root.goTo('2'); window.scroll(0,0) }">{{ _('The nozzle hits the bed <br />') }}</button>
			</td>
			<td style="width:33%;padding:10px;border:2px solid #ddd;">
				<div data-bind="visible:!$root.isDual()">
					<a href="/plugin/mgsetup/static/img/4.jpg" data-lightbox="step2"><img data-bind="attr: {'src': '/plugin/mgsetup/static/img/4.jpg', 'width': '100%',} , visible: loginState.isUser && setupStep()==='1'" /></a>
				</div>
				<div data-bind="visible:$root.isDual()">
					<a href="/plugin/mgsetup/static/img/17.jpg" data-lightbox="step2"><img data-bind="attr: {'src': '/plugin/mgsetup/static/img/17.jpg', 'width': '100%',} , visible: loginState.isUser && setupStep()==='1'" /></a>
				</div>
				<button style="min-height:80px;width:100%;" id="control-yinc" class="btngo" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && stepOnePrepared(), click: function() { $root.goTo('3'); window.scroll(0,0) }">{{ _('The nozzle clears the bed with a small gap(.5 mm or less)') }}</button>
			</td>
			<td style="width:33%;padding:10px;border:2px solid #ddd;">
				<div data-bind="visible:!$root.isDual()">
					<a href="/plugin/mgsetup/static/img/5.jpg" data-lightbox="step2"><img data-bind="attr: {'src': '/plugin/mgsetup/static/img/5.jpg', 'width': '100%',} , visible: loginState.isUser && setupStep()==='1'" /></a>
				</div>
				<div data-bind="visible:$root.isDual()">
					<a href="/plugin/mgsetup/static/img/19.jpg" data-lightbox="step2"><img data-bind="attr: {'src': '/plugin/mgsetup/static/img/19.jpg', 'width': '100%',} , visible: loginState.isUser && setupStep()==='1'" /></a>
				</div>
				<button style="min-height:80px;width:100%;" id="control-yinc" class="btngo" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && stepOnePrepared(), click: function() { $root.goTo('2'); window.scroll(0,0) }">{{ _('The nozzle clears the bed with a large gap (more than .5 mm)') }}</button>
			</td>
		</tr>
	</table>
</div>




{#     ad888888b,    #}
{#    d8"     "88    #}
{#            a8P    #}
{#         ,d8P"     #}
{#       a8P"        #}
{#     a8P'          #}
{#    d8"            #}
{#    88888888888    #}

{# Adjust Starting Height #}

<div id="control-jog-custom" style="clear: both; display: none;" data-bind="visible: loginState.isUser  && setupStep()==='2'">
	<div class="fileupload-new thumbnail" style="width: 95%; margin:auto; " data-bind="visible: $root.isDual">
		<img data-bind="attr: {'src': $root.t0Picture, 'width': '100%',} , visible: loginState.isUser && setupStep()==='2'" />
	</div>
	<br>
	<h1>Adjust Starting Height </h1>

	Here we will adjust the rough starting height of the printer (in a future step we will fine-tune your starting height).  Click <strong>Prepare</strong> to move the printer to its testing position.
	<br><br>
	<div class = "fileupload-new thumbnail" style="width:75%; margin:auto; background-color:rgba(200,0,0,0.2);" data-bind="visible:$root.untouchable()">
		<strong>Prepare</strong> has been disabled until the printer is safe to physically interact with.  Click <strong>Cooldown</strong> to turn off all heaters if necessary - this message will be removed when it is safe to proceed.
		<br><br>
		<div style="margin:auto; display:block; padding:4px; border:8px solid #000; border-radius:10px; text-align:center; width:60%;">
			<div style="display:inline-block; vertical-align:middle; width:25%; text-align:center; ">
				<img data-bind="attr: {'src': '/plugin/mgsetup/static/img/thermometer.png', 'width': '80%',} , visible: loginState.isUser " />
			</div>

			<div style="width: 70%; display:inline-block; vertical-align:middle; text-align:left;">
				Bed Temperature: <span data-bind="text: $root.displayBedTemp(), style: { color: (parseFloat($root.displayBedTemp()) < 40) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayBedTempTarget()"></span>
				<br>
				<div data-bind="visible: !$root.isDual()">
					Extruder Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span>
					<br>
				</div>
				<div data-bind="visible: $root.isDual()">
					Extruder 0 Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span>
					<br>
					Extruder 1 Temperature: <span data-bind="text: $root.displayTool1Temp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayTool1TempTarget()"></span>
					<br>
				</div>
			</div>
		</div>
		<br>
		<center>
			<button class="btnstay" data-bind="enable: loginState.isUser(), click: function() {$root.cooldown()}">Cooldown</button>
		</center>
	</div>
	<center>
		<button id="control-yinc" class="btnstay" data-bind="enable: isOperational() && !$root.untouchable() && !isPrinting() && loginState.isUser() && !$root.stepTwoPrepared(), click: function() { $root.setupSetStartingHeight('0') ; $root.stepTwoPrepared(1) ; $root.enableLockedButton(15000) }">{{ _('Prepare') }}</button>
	</center>
	<br>
	<div data-bind="visible:!$root.isDual()">
		During this step, you'll use the <strong>Bed Height Buttons</strong> below to adjust the distance between the nozzle and the glass build plate.
	</div>
	<div data-bind="visible: $root.isDual()">
		<p>
			During this step, you'll use the <strong>Bed Height Buttons</strong> below to adjust the distance between the Left Extruder (T0) nozzle and the glass build plate.
		</p>
	</div>
	<p>
		When this step is completed you should be able to slide the blue feeler gauge between the nozzle and glass with very little resistance.
	</p>
	<p>
		First, press the "1 mm Up" button as you are watching the bed. You will see the bed move 1 mm towards the nozzle. Slowly repeat this process until the build plate is within 1 mm of the nozzle. NOTE: In order to prevent the nozzle from colliding with the build plate, you should not use the "1 mm Up" button when the nozzle is within 1 mm of the build plate. The "1 mm Up" button may become disabled to prevent collision - in this case use the "0.1 mm Up" button to continue. 
	</p>


	<div data-bind="visible: !$root.isDual()">
		<p>
			Now place the blue feeler gauge between the nozzle and the build plate, then click the "0.1 mm Up” button to bring the build plate even closer to the nozzle. As soon as you can sense that the feeler gauge is stuck between the nozzle and build plate, click the "0.1 mm Down” button once to move the build plate down until the feeler gauge is able to move freely between the nozzle and build plate.
		</p>
	</div>
	<div data-bind="visible: $root.isDual()">
		<p>
			Now place the blue feeler gauge between the nozzle and the build plate, then click the "0.1 mm Up” button to bring the build plate even closer to the T0 nozzle. As soon as you can sense that the feeler gauge is stuck between the nozzle and build plate, click the "0.1 mm Down” button  to move the build plate down until the feeler gauge is able to move freely between the nozzle and build plate.
		</p>
	</div>


	<p>
		Next, click the "0.01 mm Up” button to move the bed up until you begin to feel resistance while sliding the feeler gauge between the build plate and nozzle. Once this is completed, click "Save New Starting Height"
	</p>


	<div class="fileupload-new thumbnail" style="width: 95%; ">
		<center>
			<img data-bind="attr: {'src': '/plugin/mgsetup/static/img/13.jpg', 'width': '100%',} , visible: loginState.isUser && setupStep()==='2'" />
		</center>
	</div>
	<br>
	<div data-bind="visible: !$root.hideDebug()">
		<br>
		Original Z Offset : <span data-bind="text: $root.ZOffset"></span>
		<br>
	</div>
	Current Z Position : <span data-bind="text: $root.ZPos"></span>
	<div data-bind="visible: !$root.hideDebug()">
		<br>
		Fresh data : <span data-bind="text: $root.ZPosFresh"></span>
	</div>
	<br>

	<!-- Z jogging control panel -->


	<h4>Bed Height Buttons</h4>
	<div id="control-jog-z" class="jog-panel" style="float:left; margin:0; width:33%;">
		<h1>Z 1 mm</h1>
		<div>
			<button id="control-zinc" class="btn box" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && $root.stepTwoPrepared() && $root.ZPos() > 1 && $root.lockButton(), click: function() { $root.sendJogCommand('z',-1,1) }"><i class="icon-arrow-up"></i></button> 1 mm Up
		</div>
		<div>
			<button id="control-zdec" class="btn box" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && $root.stepTwoPrepared() && $root.lockButton(), click: function() { $root.sendJogCommand('z',1,1) }"><i class="icon-arrow-down"></i></button> 1 mm Down
		</div>
	</div>
	<div id="control-jog-z" class="jog-panel" style="float:left; margin:0; width:33%;">
		<h1>Z 0.1 mm</h1>
		<div>
			<button id="control-zinc" class="btn box" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && $root.stepTwoPrepared() && $root.lockButton(), click: function() { $root.sendJogCommand('z',-1,0.1) }"><i class="icon-arrow-up"></i></button> .1 mm Up
		</div>
		<div>
			<button id="control-zdec" class="btn box" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && $root.stepTwoPrepared() && $root.lockButton(), click: function() { $root.sendJogCommand('z',1,0.1) }"><i class="icon-arrow-down"></i></button> .1 mm Down
		</div>
	</div>
	<div id="control-jog-z" class="jog-panel" style="float:left; margin:0; width:33%;">
		<h1>Z 0.01 mm</h1>
		<div>
			<button id="control-zinc" class="btn box" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && $root.stepTwoPrepared() && $root.lockButton(), click: function() { $root.sendJogCommand('z',-1,0.01) }"><i class="icon-arrow-up"></i></button> .01 mm Up
		</div>
		<div>
			<button id="control-zdec" class="btn box" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && $root.stepTwoPrepared() && $root.lockButton(), click: function() { $root.sendJogCommand('z',1,0.01) }"><i class="icon-arrow-down"></i></button> .01 mm Down
		</div>
	</div>




	<br><br><br><br><br> <br><br><br>  <br>    

	<center>
		<button id="control-yinc" class="btnstayBig" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && $root.stepTwoPrepared() && !$root.stepTwoStartingHeightSaved(), click: function() { $root.setupSetStartingHeight(1); $root.stepTwoStartingHeightSaved(true); $root.goTo('3'); window.scroll(0,0) }">{{ _('Save New Starting Height') }}</button>
	</center>
	<br><br>

	{# <center><button class="btngoBig" data-bind="enable: $root.stepTwoPrepared && $root.stepTwoStartingHeightSaved(), click: function() { $root.goTo('3'); window.scroll(0,0) }">Next Step</button></center> #}

	<br><br>
</div>



{#/$$$$$$         /$$$            /$$$$$$   /$$$$$$         /$$$            /$$$$$$  /$$   /$$
 /$$__  $$       /$$ $$          /$$__  $$ /$$__  $$       /$$ $$          /$$__  $$| $$  | $$
|__/  \ $$      |  $$$          |__/  \ $$|__/  \ $$      |  $$$          |__/  \ $$| $$  | $$
   /$$$$$/       /$$ $$/$$        /$$$$$$/   /$$$$$/       /$$ $$/$$        /$$$$$$/| $$$$$$$$
  |___  $$      | $$  $$_/       /$$____/   |___  $$      | $$  $$_/       /$$____/ |_____  $$
 /$$  \ $$      | $$\  $$       | $$       /$$  \ $$      | $$\  $$       | $$            | $$
|  $$$$$$/      |  $$$$/$$      | $$$$$$$$|  $$$$$$/      |  $$$$/$$      | $$$$$$$$      | $$
\______/        \____/\_/      |________/ \______/        \____/\_/      |________/      |__/#}
{# Filament Loading 
	3 = flow from step 2
	23 = flow from sucess
	24 = flow from  faile
	#}

	<div id="three" data-bind="visible: loginState.isUser && (setupStep()==='3' || setupStep()==='23' || setupStep()==='24') ">


		<div style="width:100%;margin-top:15px;" data-bind="visible: setupStep()==='23'">
			<div style="display:inline-block;width:24.25%;">
				<div style="text-align:center;">
					<i class="icon-check" style="font-size:50px; color:#FF6E35;"></i>
				</div>
				<div data-bind="style: {fontWeight: $root.probeStep() == 1 ? 'bold':''}"  style="text-align:center;">
					Automated  <br /> Calibration Test
				</div>
			</div>
			<div style="display:inline-block;width:74.5%;">
				<span style="font-size:18px;">The Automated Calibration Test has completed successfully. Follow the instructions below to proceed. </span>
				<br />
				<br />
				<br />
			</div>
			<hr style="margin-top:0px;margin-bottom:0px;" />

		</div>


		<div style="width:100%;margin-top:15px;" data-bind="visible: setupStep()==='24'">
			<div style="display:inline-block;width:24.25%;">
				<div style="text-align:center;">
					<i class="icon-check-minus" style="font-size:50px; color:#FF6E35;"></i>
				</div>
				<div data-bind="style: {fontWeight: $root.probeStep() == 1 ? 'bold':''}"  style="text-align:center;">
					Automated  <br /> Calibration Test
				</div>
			</div>
			<div style="display:inline-block;width:74.5%;">
				<span style="font-size:18px;">The Automated Calibration Test found a problem with your nozzle-probe offset. Follow the instructions below to fix the problem. </span>
				<br />
				<br />
				<br />
			</div>
			<hr style="margin-top:0px;margin-bottom:0px;" />

		</div>




		<div class="fileupload-new thumbnail" style="width: 95%; margin:auto; " data-bind="visible: $root.isDual">
			<img data-bind="attr: {'src': $root.t0Picture, 'width': '100%',} , visible: loginState.isUser && (setupStep()==='3' || setupStep()==='23' || setupStep()==='24')" />
		</div>
		<br>
		<h1 style="text-align:left">Extrude Filament</h1>






		<p></p>
		<div data-bind="visible:!$root.isDual()">
			Now you need to load filament into your extruder. 
		</div>
		<div data-bind="visible: $root.isDual()">
			Now you need to load filament into your Left Extruder (T0). 
		</div>

		<br />

		<p>
			Click 'Prepare' and then continue reading the instructions while you wait for your printer to move into position and heat up.
		</p>

		<p>

			<i class="icon-fire" style="float:left;font-size:30px;color:red;margin-right:5px;"></i>

			Your extruder and build surface will start to heat up. Do not touch the extruder's nozzle or the build surface.
		</p>


		<center>
			<button  id="control-yinc" class="btnstay" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && !$root.stepThreeStartHeatingClicked(), click: function() { $root.sendWigglePreheat(); $root.stepThreeStartHeatingClicked(true) }">{{ _('Prepare') }}</button>
		</center>
		<br><br>





		Place the PLA filament spool on the spool holder so that the loose end points directly upwards into the filament guide. You may need to flip your spool in order to achieve the proper orientation. Cut the end of the filament so that the tip is flat.

		<br /><br />


		<p>
			Feed the tip of your filament up through the black filament guide and the clear filament guide tube.
		</p>
		<video controls id="filamentVideo1" class="video-js"  preload="none"  data-setup='{"fluid": true, "controls":true}' data-bind="attr: { autoplay: 'true', loop: 'true' , poster:'/plugin/mgsetup/static/img/filamentLoad1Poster.jpg'}, if:  setupStep() === '3' || setupStep() === '23' || setupStep() === '24'" onclick="this.paused ? this.play() : this.pause();" vjs-big-play-centered><source src="/plugin/mgsetup/video/filamentLoad1.mp4" type='video/mp4'>
			<p class="vjs-no-js">
				To view this video please enable JavaScript, and consider upgrading to a web browser that
				<a href="http://videojs.com/html5-video-support/" target="_blank">supports HTML5 video</a>
			</p>
		</video>

		<br /><br />



		<p>
			Next insert the filament into the hole on top of the extruder. 
		</p>

		<video controls id="filamentVideo2" class="video-js"  preload="none"  data-setup='{"fluid": true}' data-bind="attr: { autoplay: 'true', loop: 'true' , poster:'/plugin/mgsetup/static/img/filamentLoad2Poster.jpg'}, if:  setupStep() === '3' || setupStep() === '23' || setupStep() === '24'" onclick="this.paused ? this.play() : this.pause();"><source src="/plugin/mgsetup/video/filamentLoad2.mp4" type='video/mp4'>
			<p class="vjs-no-js">
				To view this video please enable JavaScript, and consider upgrading to a web browser that
				<a href="http://videojs.com/html5-video-support/" target="_blank">supports HTML5 video</a>
			</p>
		</video>
		<br /><br />

		<p>Below you can see your extruder temperature. Once the extruder temperature matches the target temperature within 2 degrees,  click "Feed Filament" to start loading filament. You may need to apply slight downward pressure on the filament to get started. Once the filament has started to feed, you should feel it being pulled into the extruder. 
		</p>

		<div style="margin:auto; display:block; padding:4px; border:8px solid #000; border-radius:10px; text-align:center; width:60%;">
			<div style="display:inline-block; vertical-align:middle; width:25%; text-align:center; ">
				<img data-bind="attr: {'src': '/plugin/mgsetup/static/img/thermometer.png', 'width': '80%',} , visible: loginState.isUser " />
			</div>

			<div style="width: 70%; display:inline-block; vertical-align:middle; text-align:left;">
				Bed Temperature: <span data-bind="text: $root.displayBedTemp(), style: { color: (parseFloat($root.displayBedTemp()) < 40) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayBedTempTarget()"></span>
				<br>
				<div data-bind="visible: !$root.isDual()">
					Extruder Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span>
					<br>
				</div>
				<div data-bind="visible: $root.isDual()">
					Extruder 0 Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span>
					<br>
					Extruder 1 Temperature: <span data-bind="text: $root.displayTool1Temp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayTool1TempTarget()"></span>
					<br>
				</div>
			</div>
		</div>

		<br>
		<center>
			<button title="Extrude 75 mm of Filament" class="btnstay" data-bind="enable: $root.stepThreeStartHeatingClicked() && $root.lockButton(), click: function() { $root.feedFilament(); $root.enableLockedButton() }, enabled: (parseFloat($root.displayToolTemp()) > 180) ">Feed Filament</button>
		</center>
		<br>
		<p>
			Continue clicking "Feed Filament" until a thin strand of filament is consistently extruding from the tip of the nozzle. Use your tweezers to remove the hot filament after it has been extruded. <br><br>

		</p>
		<p>
			Push the filament guide tube down into the plastic extruder hole. 

		</p>
		<video controls id="filamentVideo3" class="video-js" preload="none"   data-setup='{"fluid": true}' data-bind="attr: { autoplay: 'true', loop: 'true' , poster:'/plugin/mgsetup/static/img/filamentLoad3Poster.jpg'}, if:  setupStep() === '3' || setupStep() === '23' || setupStep() === '24'" onclick="this.paused ? this.play() : this.pause();"><source src="/plugin/mgsetup/video/filamentLoad3.mp4" type='video/mp4'>
			<p class="vjs-no-js">
				To view this video please enable JavaScript, and consider upgrading to a web browser that
				<a href="http://videojs.com/html5-video-support/" target="_blank">supports HTML5 video</a>
			</p>
		</video>

		Once filament is consistently extruding, click to "Next Step" proceed:<br>









		<center>
			<button class="btngoBig" data-bind="visible: loginState.isUser && setupStep()==='3', click: function() { $root.goTo('4'); window.scroll(0,0) }">Next Step</button>
		</center>

		<center>
			<button class="btngoBig" data-bind="visible: loginState.isUser && setupStep()==='23', click: function() { $root.goTo('22'); window.scroll(0,0) }">Next Step</button>
		</center>

		<center>
			<button class="btngoBig" data-bind="visible: loginState.isUser && setupStep()==='24', click: function() { $root.goTo('20'); window.scroll(0,0) }">Next Step</button>
		</center>





	</div>


	{#            ,d8    #}
	{#          ,d888    #}
	{#        ,d8" 88    #}
	{#      ,d8"   88    #}
	{#    ,d8"     88    #}
	{#    8888888888888  #}
	{#             88    #}
	{#             88    #}

	{# Verify Starting Height (Wiggle) #}

	<div id="wiggle-section" class="jog-panel" style="display:none;" data-bind="visible: loginState.isUser && setupStep()==='4'">
		<div class="fileupload-new thumbnail" style="width: 95%; margin:auto; " data-bind="visible: $root.isDual">
			<img data-bind="attr: {'src': $root.t0Picture, 'width': '100%',} , visible: loginState.isUser && setupStep()==='4'" />
		</div>
		<br>

		<h1 style="text-align:left">Verify Starting Height</h1>





		<p>

			<i class="icon-fire" style="float:left;font-size:30px;color:red;margin-right:5px;"></i><div data-bind="visible:!$root.isDual()">
				The printer's extruder and build platform are hot - do not touch them!
			</div>
			<div data-bind="visible: $root.isDual()">
				The printer's Left Extruder (T0) and build platform are hot - do not touch them! 
			</div>

		</p>

		<p>
			During this step, you will print a small Zigzag pattern that will help you to gauge, adjust and perfect your starting height (also known as "Z Offset"). 
		</p>

		<p>
			Clicking the "Print Zigzag Pattern" button will trigger the following printer tasks:
		</p>

		<ol>
			<li>Start to heat the extruder and build platform to their target temperatures — you will see actual temperatures shown in red and target temperatures shown in black directly below the "Print Zigzag Pattern" button.</li>
			<li>Move components to their home positions.</li>
			<li>Move extruder to its purge position.</li>
			<li>Purge and wipe the extruder on the lower right-hand corner of the build plate.</li>
			<li>Print a Zigzag pattern on the center of the build plate.</li>
			<li>Move components to their final position.</li>
		</ol>


		<p>
			When you are ready to begin this process, click "Print Zigzag Pattern":
		</p>
		<br>

		<center>
			<button class="btnstay" data-bind="enable: !$root.stepFourFirstWiggleClicked(), click: function() { $root.printWiggleConfirm(1); $root.enableLockedButton(8000) }">Print Zigzag Pattern</button>
		</center>
		<br>



		<div style="margin:auto; display:block; padding:4px; border:8px solid #000; border-radius:10px; text-align:center; width:60%;">
			<div style="display:inline-block; vertical-align:middle; width:25%; text-align:center; ">
				<img data-bind="attr: {'src': '/plugin/mgsetup/static/img/thermometer.png', 'width': '80%',} , visible: loginState.isUser " />
			</div>

			<div style="width: 70%; display:inline-block; vertical-align:middle; text-align:left;">
				Bed Temperature: <span data-bind="text: $root.displayBedTemp(), style: { color: (parseFloat($root.displayBedTemp()) < 40) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayBedTempTarget()"></span>
				<br>
				<div data-bind="visible: !$root.isDual()">
					Extruder Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span>
					<br>
				</div>
				<div data-bind="visible: $root.isDual()">
					Extruder 0 Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span>
					<br>
					Extruder 1 Temperature: <span data-bind="text: $root.displayTool1Temp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayTool1TempTarget()"></span>
					<br>
				</div>
			</div>
		</div>

		Once the Zigzag pattern has printed, and the printer has fully parked, you can use your tweezers to remove any material on the side of the bed. Next, carefully remove the Zigzag pattern by using your tweezers to lift it off the bed from the rear left "tail".  The  Zigzag pattern will peel off of the build plate differently according to the printer's current starting height.<br><br>



		<video controls id="filamentVideo1" class="video-js"  preload="none"     data-setup='{"fluid": true}' data-bind="attr: { autoplay: 'true', loop: 'true' , poster:'/plugin/mgsetup/static/img/wiggleposter.jpg'}, if:  setupStep() === '4'" onclick="this.paused ? this.play() : this.pause();"><source src="/plugin/mgsetup/video/wiggleMiddle.mp4" type='video/mp4'>
			<p class="vjs-no-js">
				To view this video please enable JavaScript, and consider upgrading to a web browser that
				<a href="http://videojs.com/html5-video-support/" target="_blank">supports HTML5 video</a>
			</p>
		</video>

		<br />


		<p >
			<strong style="font-size:20px;" >Which of the following options best describes your Zigzag pattern? Click the photos to zoom in.</strong>
		</p>



		<table>
			<tr>
				<td style="width:33%;padding:10px;border-bottom:0px;border-top:0px;border-left:2px; border-right:2px;border:solid #ddd;">
					<a href="/plugin/mgsetup/static/img/10.jpg" data-lightbox="step8"> <img data-bind="attr: {'src': '/plugin/mgsetup/static/img/10.jpg', 'width': '100%',} , visible: loginState.isUser && setupStep()==='4'" /></a>

				</td>

				<td style="width:33%;padding:10px;border-bottom:0px;border-top:0px;border-left:2px; border-right:2px;border:solid #ddd;">

					<a href="/plugin/mgsetup/static/img/11.jpg" data-lightbox="step8"><img data-bind="attr: {'src': '/plugin/mgsetup/static/img/11.jpg', 'width': '100%',} , visible: loginState.isUser && setupStep()==='4'" /></a>

				</td>




				<td style="width:33%;padding:10px;border-bottom:0px;border-top:0px;border-left:2px; border-right:2px;border:solid #ddd;">

					<a href="/plugin/mgsetup/static/img/12.jpg" data-lightbox="step8"> <img data-bind="attr: {'src': '/plugin/mgsetup/static/img/12.jpg', 'width': '100%',} , visible: loginState.isUser && setupStep()==='4'" /></a>
				</td>

			</tr>




			<tr>

				<td style="border-left:2px;border-right:2px;border-bottom:0px;border-top:0px;border:solid #ddd;">
					If the  Zigzag pattern peels off with fifty percent of the zigzag pattern as loose segments and fifty percent as connected segments, you have <strong>a perfect Starting Height</strong>. Click below to proceed to the next step. 
					<br />




					<br />

					<strong>NOTE:</strong> If the last few segments break off from the rest of the strand, don't worry - just use your tweezers to pull them off the bed. 



				</td>

				<td style="border-left:2px;border-right:2px;border-bottom:0px;border-top:0px;border:solid #ddd;">
					If the Zigzag pattern peels-off as an even strand made with little to no small section of connected segments at the end, <strong>the Starting Height is too low</strong>. Click below to adjust the starting height and print a new zigzag. 
		   <!-- <br />
			<br />

			<strong>NOTE:</strong> If the last few segments break off from the rest of the strand, don't worry - just use your tweezers to pull them off the bed. -->
			<br />
			<br />
			<a href="/plugin/mgsetup/static/img/stringZigzag.jpg" data-lightbox="step8-1">Click here to see other examples of zigzags printed too low.</a>



		</td>
		<td style="border-left:2px;border-right:2px;border-bottom:0px;border-top:0px;border:solid #ddd;">

			If the Zigzag pattern peels-off in one solid piece, with most/all segments of the zig-zag pattern connected, 
			<strong>the Starting Height is too high</strong>. Click below to adjust the starting height and print a new zigzag. 
			<br />
			<br />
			<a href="/plugin/mgsetup/static/img/squishZigzag.jpg" data-lightbox="step8-2">Click here to see other examples of zigzags printed too high.</a>



		</td>
	</tr>

	<tr>

		<td style="border-bottom:0px;border-top:0px;border-left:2px; border-right:2px;border:solid #ddd;min-height:40px;">
			
			<center><button style="width:100%;" class="btngoBig" data-bind="enable: $root.stepFourFirstWiggleClicked() && $root.lockButton(), click: function() { $root.setupSetStartingHeight('2'); window.scroll(0,0) }">Next Step<br /></button></center>

			<!--Too far-->
		</td>


		<td style="border-bottom:0px;border-top:0px;border-left:2px; border-right:2px;border:solid #ddd;min-height:40px;">
			<div data-bind="visible: $root.stepFourShowFineAdjustments()==false"><br>
				<center>
					<button class="btnstay" data-bind="visible: $root.stepFourShowFineAdjustments()==false, enable: $root.stepFourFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm(10,-0.04); $root.enableLockedButton(10000) }">Adjust and Print</button>
				</center>
			</div>
			<center>
				<button class="btnstay" data-bind="visible: $root.stepFourShowFineAdjustments()==true, enable: $root.stepFourFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm(10,-0.04); $root.enableLockedButton(10000) }">Large Adjustment (0.04 mm)</button>
			</center>
			<br>
			<center>
				<button class="btnstay" data-bind="visible: $root.stepFourShowFineAdjustments()==true, enable: $root.stepFourFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm(10,-0.02); $root.enableLockedButton(10000) }">Medium Adjustment (0.02 mm)</button>
			</center>
			<br>
			<center>
				<button class="btnstay" data-bind="visible: $root.stepFourShowFineAdjustments()==true, enable: $root.stepFourFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm(10,-0.01); $root.enableLockedButton(10000) }">Fine Adjustment (0.01 mm)</button>
			</center>            

		</td>


		<td style="border-bottom:0px;border-top:0px;border-left:2px; border-right:2px;border:solid #ddd;min-height:40px;">
			<div data-bind="visible: $root.stepFourShowFineAdjustments()==false"><br>
				<center>
					<button class="btnstay" data-bind="visible: $root.stepFourShowFineAdjustments()==false, enable: $root.stepFourFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm(10,0.04); $root.enableLockedButton(10000) }">Adjust and Print</button>
				</center>
			</div>
			<center>
				<button class="btnstay" data-bind="visible: $root.stepFourShowFineAdjustments()==true, enable: $root.stepFourFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm(10,0.04); $root.enableLockedButton(10000) }">Large Adjustment (0.04 mm)</button>
			</center>
			<br>
			<center>
				<button class="btnstay" data-bind="visible: $root.stepFourShowFineAdjustments()==true, enable: $root.stepFourFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm(10,0.02); $root.enableLockedButton(10000) }">Medium Adjustment (0.02 mm)</button>
			</center>
			<br>
			<center>
				<button class="btnstay" data-bind="visible: $root.stepFourShowFineAdjustments()==true, enable: $root.stepFourFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm(10,0.01); $root.enableLockedButton(10000) }">Fine Adjustment (0.01 mm)</button>
			</center>  
			<!--Too Close-->
		</td>
		<tr>

		</table>
		<button class="btnstay" data-bind="visible: $root.stepFourShowFineAdjustments()==true, enable: $root.stepFourFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm(10); $root.enableLockedButton(10000) }">Print This Zigzag Again</button>
		<br>

		<input type="checkbox" data-bind="checked: $root.stepFourShowFineAdjustments" /> Show Advanced Options.


	</div>

	{#    8888888888   #}
	{#    88           #}
	{#    88  ____     #}
	{#    88a8PPPP8b,  #}
	{#    PP"     `8b  #}
	{#             d8  #}
	{#    Y8a     a8P  #}
	{#     "Y88888P"   #}

	{# Heated Corner Check (wiggles) #}
	<div class="jog-panel" style="display: none;" data-bind="visible: loginState.isUser && setupStep()==='5'">
		<div class="fileupload-new thumbnail" style="width: 95%; margin:auto; " data-bind="visible: $root.isDual">
			<img data-bind="attr: {'src': $root.t0Picture, 'width': '100%',} , visible: loginState.isUser && setupStep()==='5'" />
		</div>
		<br>
		<center>
			<h1 style="text-align:left;">Heated Corner Check</h1>
			<p>
				In this step you will check if your build surface is level by verifying the vertical alignment of all four corners of your build surface. Make sure that all four of your bed clips are engaged, as shown in the <span data-bind="text: $root.printerNameForDisplay"></span> User Manual. 
			</p>
			<p>
				Click “Begin Corner Check” to print four Zigzag patterns, one on each corner of your build surface. 
			</p>
			<button id="control-yinc" class="btnstay" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && !$root.stepFiveBeginCornerCheckClicked(), click: function() { printWiggleConfirm('all') }">{{ _('Begin Corner Check') }}</button>
			<br>
			<br />
			<div style="margin:auto; display:block; padding:4px; border:8px solid #000; border-radius:10px; text-align:center; width:60%;">
				<div style="display:inline-block; vertical-align:middle; width:25%; text-align:center; ">
					<img data-bind="attr: {'src': '/plugin/mgsetup/static/img/thermometer.png', 'width': '80%',} , visible: loginState.isUser " />
				</div>

				<div style="width: 70%; display:inline-block; vertical-align:middle; text-align:left;">
					Bed Temperature: <span data-bind="text: $root.displayBedTemp(), style: { color: (parseFloat($root.displayBedTemp()) < 40) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayBedTempTarget()"></span>
					<br>
					<div data-bind="visible: !$root.isDual()">
						Extruder Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span>
						<br>
					</div>
					<div data-bind="visible: $root.isDual()">
						Extruder 0 Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span>
						<br>
						Extruder 1 Temperature: <span data-bind="text: $root.displayTool1Temp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayTool1TempTarget()"></span>
						<br>
					</div>
				</div>
			</div>
			<p>
				After all four Zigzag patterns have printed, remove each one using your tweezers.
			</p>
			<hr />
			<h1 style="">LOOK CAREFULLY </h1>
			<p>
			</p>
			<p>
			</p>
			<p>
			</p>
			<p ></p>
			<strong style="font-size:20px;" >Which of the following options best describes the results of your Corner Check? Click the photos to zoom in.</strong>
		</center>
		<table class="choiceTable">
			<tr>
				<td>
					<a href="/plugin/mgsetup/static/img/5-1.png" data-lightbox="step3"><img data-bind="attr: {'src': '/plugin/mgsetup/static/img/5-1.png', 'width': '100%',} , visible: loginState.isUser && setupStep()==='5'" /></a>
				</td>
				<td>
					<a href="/plugin/mgsetup/static/img/5-2.png" data-lightbox="step3"><img data-bind="attr: {'src': '/plugin/mgsetup/static/img/5-2.png', 'width': '100%',} , visible: loginState.isUser && setupStep()==='5'" /></a>
				</td>
				<td>
					<a href="/plugin/mgsetup/static/img/5-3.png" data-lightbox="step3"><img data-bind="attr: {'src': '/plugin/mgsetup/static/img/5-3.png', 'width': '100%',} , visible: loginState.isUser && setupStep()==='5'" /></a>
				</td>
			</tr>
			<tr>
				<td>
					All four zigzag patterns look the same (each pattern should be within 2 strands of each other).
					<br />
					<br />
					<strong>NOTE:</strong> Your zigzag patterns might not match the picture above perfectly - the most important thing is that all four patterns are the same. 
				</td>
				<td colspan="2">
					One or more of the patterns looks different from the other patterns.
					<strong>NOTE:</strong> If you're not sure, or if you had any problems printing the zigzag patterns, click the button below. 

				</td>
			</tr>
			<tr>
				<td class="buttonCell">
					<center>
						<button   style="min-height:50px;" id="control-yinc" class="btngo" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && $root.stepFiveBeginCornerCheckClicked(), click: function() { $root.goTo('7'); window.scroll(0,0) }">{{ _('All four Zigzag patterns are the same.') }}</button>
					</center>
				</td>
				<td colspan="2" class="buttonCell">
					<center>
						<button style="min-height:50px;" id="control-yinc" class="btngo" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && $root.stepFiveBeginCornerCheckClicked(), click: function() { $root.goTo('6'); window.scroll(0,0) }">{{ _('One or more of the Zigzag patterns is different from the others.') }}</button>
					</center>
				</td>
			</tr>
		</table>
	</div>

	{#      ad8888ba,    #}
	{#     8P'    "Y8    #}
	{#    d8             #}
	{#    88,dd888bb,    #}
	{#    88P'    `8b    #}
	{#    88       d8    #}
	{#    88a     a8P    #}
	{#     "Y88888P"     #}

	{# Heated Leveling (wiggles) #}

	<div id="wiggle-section" class="jog-panel" style="display:none;" data-bind="visible: loginState.isUser && setupStep()==='6'">
		<div class="fileupload-new thumbnail" style="width: 95%; margin:auto; " data-bind="visible: $root.isDual">
			<img data-bind="attr: {'src': $root.t0Picture, 'width': '100%',} , visible: loginState.isUser && setupStep()==='6'" />
		</div>
		<br>
		<br>




		<h1 style="text-align:left;"> Heated Build Platform Leveling</h1>


		Here you will be able to print Zigzag patterns in each corner and then adjust the bed leveling screw in that corner until the Zigzag pattern is acceptable. To begin, please click "Prepare" to Home the printer:
		<center>
			<button class="btnstay" data-bind="enable: !$root.stepSixPrepared(), click: function() { $root.setupSetStartingHeight('0') ; $root.stepSixPrepared(true) }">Prepare</button>
		</center>
		<br>



		<div style="margin:auto; display:block; padding:4px; border:8px solid #000; border-radius:10px; text-align:center; width:60%;">
			<div style="display:inline-block; vertical-align:middle; width:25%; text-align:center; ">
				<img data-bind="attr: {'src': '/plugin/mgsetup/static/img/thermometer.png', 'width': '80%',} , visible: loginState.isUser " />
			</div>

			<div style="width: 70%; display:inline-block; vertical-align:middle; text-align:left;">
				Bed Temperature: <span data-bind="text: $root.displayBedTemp(), style: { color: (parseFloat($root.displayBedTemp()) < 40) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayBedTempTarget()"></span>
				<br>
				<div data-bind="visible: !$root.isDual()">
					Extruder Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span>
					<br>
				</div>
				<div data-bind="visible: $root.isDual()">
					Extruder 0 Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span>
					<br>
					Extruder 1 Temperature: <span data-bind="text: $root.displayTool1Temp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayTool1TempTarget()"></span>
					<br>
				</div>
			</div>
		</div>


		Once the printer has stopped moving, use the four Zigzag pattern position buttons to print in each corner, starting with the corner that was most different from the others in the Four Zigzag pattern print.  After each print, remove the Zigzag pattern with your tweezers. Inspect the Zigzag pattern and use your 2 mm allen key to adjust the bed accordingly, as shown below:<br><br>



		If the entire Zigzag pattern was completely stuck to the bed, the bed leveling screw needs to be loosened by turning it counter-clockwise, to lower the bed at this position.<br><br>

		<video controls id="ccw" class="video-js"  preload="none"  data-setup='{ "fluid": true}'  data-bind="attr: {  autoplay: 'true', loop: 'true', poster:'/plugin/mgsetup/static/img/ccwposter.jpg' }, if:  setupStep() === '6'" onclick="this.paused ? this.play() : this.pause();"><source src="/plugin/mgsetup/video/ccw.mp4" type='video/mp4'>
			<p class="vjs-no-js">
				To view this video please enable JavaScript, and consider upgrading to a web browser that
				<a href="http://videojs.com/html5-video-support/" target="_blank">supports HTML5 video</a>
			</p>
		</video>



		<hr />


		If the entire Zigzag pattern was loose or not adhered to the bed at all, the bed leveling screw needs to be tightened by turning it clockwise, to raise the bed at this position.<br><br>



		<video controls id="cw" class="video-js"  preload="none"  data-setup='{"fluid": true}' data-bind="attr: { autoplay: 'true', loop: 'true', poster:'/plugin/mgsetup/static/img/cwposter.jpg'}, if:  setupStep() === '6'" onclick="this.paused ? this.play() : this.pause();" ><source src="/plugin/mgsetup/video/cw.mp4" type='video/mp4'>
			<p class="vjs-no-js">
				To view this video please enable JavaScript, and consider upgrading to a web browser that
				<a href="http://videojs.com/html5-video-support/" target="_blank">supports HTML5 video</a>
			</p>
		</video>

		<hr />

		A quarter-turn should be the largest adjustment made between tests.
		<br><br>
		Note: All positions wait for the bed and hotend temperatures to stabilize before starting, so it may take a moment to begin printing.
		<br><br>


		<img src="/plugin/mgsetup/static/img/10.jpg">
		<p> You should make the fewest number of adjustments required to make all four of your Zigzag patterns look the same. If all of the corners are different, or you are unsure, set each pattern so that it peels with fifty percent of the zigzag pattern as loose segments and fifty percent as connected segments.</p>

		<center>
			<img src="/plugin/mgsetup/static/img/cornerlabels.jpg">
			<br><br>
			<div style="width:80%">
				<button class="btnstay" style="width:25%; display:inline-block; " data-bind="enable: $root.stepSixPrepared() && $root.lockButton() , click: function() {$root.printWiggleConfirm(20); $root.stepSixWigglePrinted(true); $root.enableLockedButton()} ">Zigzag 1</button><button class="btnstay" style="width:25%; display:inline-block; " data-bind="enable: $root.stepSixPrepared() && $root.lockButton(), click: function() {$root.printWiggleConfirm(3); $root.stepSixWigglePrinted(true); $root.enableLockedButton()} ">Zigzag 2</button><button class="btnstay" style="width:25%; display:inline-block; " data-bind="enable: $root.stepSixPrepared() && $root.lockButton(), click: function() {$root.printWiggleConfirm(4); $root.stepSixWigglePrinted(true); $root.enableLockedButton()} ">Zigzag 3</button><button class="btnstay" style="width:25%; display:inline-block; " data-bind="enable: $root.stepSixPrepared() && $root.lockButton(), click: function() {$root.printWiggleConfirm(5); $root.stepSixWigglePrinted(true); $root.enableLockedButton()} ">Zigzag 4</button>
			</div>
			<button class="btnstay" style="width:80%;" data-bind="enable: $root.stepSixPrepared() && $root.lockButton(), click: function() {$root.printWiggleConfirm('step6all'); $root.stepSixWigglePrinted(true); $root.enableLockedButton()} ">All</button>
			<br><br>

			<p>

				When all 4 Zigzag patterns are the same, you can proceed.
			</p>

			<button class="btngoBig" data-bind="enable: $root.stepSixWigglePrinted(), click: function() { $root.goTo('7'); window.scroll(0,0) }">Next Step</button>
		</center>
	</div>


	{#    888888888888  #}
	{#            ,8P'  #}
	{#           d8"    #}
	{#         ,8P'     #}
	{#        d8"       #}
	{#      ,8P'        #}
	{#     d8"          #}
	{#    8P'           #}

	{# Done #}

	<div class="jog-panel" style="display: none;" data-bind="visible: loginState.isUser && setupStep()==='7'">
		<div class="fileupload-new thumbnail" style="width: 95%; margin:auto; " data-bind="visible: $root.isDual">
			<img data-bind="attr: {'src': $root.t0Picture, 'width': '100%',} , visible: loginState.isUser && setupStep()==='7'" />
		</div>
		<br>


		<h1 style="text-align:left;">Your First Print</h1>
		<h3>Before printing, always make sure that the bed is clear of previous prints, and that the tips of the nozzles are clean.</h3>

		<p> 
			In the left <strong>Files</strong> menu, you'll see the file <strong>mgkeychain.stl</strong>. This is a 3D model of a small MakerGear keychain. Before you can print it, you need to generate a GCode version of the file. This GCode file will instruct the printer how to make the 3D Model. To generate the GCode, click on the <span class="icon-magic"></span> icon. You will see the slicing dialog - hit <strong>Slice</strong> to start generating your Gcode. (You can leave all the settings at their default values.)
			<img src="/plugin/mgsetup/static/img/stl.png" style="display:block;width::50%;margin-left:auto;margin-right:auto; margin-top:21px;">
			<br/>
			<img src="/plugin/mgsetup/static/img/slice.png" style="display:block;width::50%;margin-left:auto;margin-right:auto;margin-top:21px;"">

			</p>


			<p style="margin-top:21px;">
				You will see a progress bar, and once the GCode has been generated, you should see 'mgkeychain.gco' with several buttons below it. Press the <span class="icon-print"></span> icon to start your first print.
			</p>
			<img src="/plugin/mgsetup/static/img/gcode.png" style="display:block;width::50%;margin-left:auto;margin-right:auto;margin-top:21px;"">


			<p style="margin-top:21px;">
				<div data-bind="visible:!$root.isDual()">
					Your printer will make sure that the extruder/bed are heated correctly, and then start to print the keychain.  You can monitor your progress from the 'State' bar on the left, or from the 'Gcode Viewer' Tab. 
				</div>
				<div data-bind="visible:$root.isDual()">
					Your printer will make sure that the Left Extruder (T0)/bed are heated correctly, and then start to print the keychain.  You can monitor your progress from the 'State' bar on the left, or from the 'Gcode Viewer' Tab. 
				</div>
			</p>


			<p style="margin-top:21px;" data-bind="visible: !$root.isDual()">
				Learn how to get the most out of your <span data-bind="text: $root.printerNameForDisplay"></span> by visiting the  <a href="https://makergear.zendesk.com/hc/en-us" target="_blank"><span data-bind="text: $root.printerNameForDisplay"></span> Knowledge Base</a>.

			</p>


			<div data-bind="visible: $root.isDual">
				<h1 style="text-align:left;"><span data-bind="text: $root.printerNameForDisplay"></span> Setup</h1>
				To continue on to the <span data-bind="text: $root.printerNameForDisplay"></span> configuration, click "Next":<br>
				<center>
					<button class="btngoBig" data-bind="enable: loginState.isUser(), click: function() { $root.goTo('8'); window.scroll(0,0) }">Next</button>
				</center>
			</div>
		</div>


{#                                              
	88888888ba,                             88  
	88      `"8b                            88  
	88        `8b                           88  
	88         88  88       88  ,adPPYYba,  88  
	88         88  88       88  ""     `Y8  88  
	88         8P  88       88  ,adPPPPP88  88  
	88      .a8P   "8a,   ,a88  88,    ,88  88  
	88888888Y"'     `"YbbdP'Y8  `"8bbdP"Y8  88  
												
	#}


{#   ad88888ba   
	d8"     "8b  
	Y8a     a8P  
	 "Y8aaa8P"   
	 ,d8"""8b,   
	d8"     "8b  
	Y8a     a8P  
	"Y88888P"   #}

	{# Cold Starting Height Check - EXT1 #}


	<div class="jog-panel" style="display: none;" data-bind="visible: loginState.isUser && setupStep()==='8'">
		<center>
			<div class="fileupload-new thumbnail" style="width: 95%; " data-bind="visible: $root.isDual">
				<img data-bind="attr: {'src': $root.t1Picture, 'width': '100%',} , visible: loginState.isUser && setupStep()==='8'" />
			</div>
		</center>
		<br>
		<h1 style="text-align:left;">Extruder 1 Starting Height Check</h1>
		<p style="text-align:left;">

			During the next few steps, you will verify the Right Extruder's (T1) starting height. First, we'll use a simple visual test to perform a safety check.   Click <strong>Prepare</strong> to move the printer to its testing position.
			<br><br>






		</p><div class = "fileupload-new thumbnail" style="width:75%; margin:auto; background-color:rgba(200,0,0,0.2);" data-bind="visible:$root.untouchable()">
			<strong>Prepare</strong> has been disabled until the printer is safe to physically interact with.  Click <strong>Cooldown</strong> to turn off all heaters if necessary - this message will be removed when it is safe to proceed.<br><br>
			<div style="margin:auto; display:block; padding:4px; border:8px solid #000; border-radius:10px; text-align:center; width:60%;">
				<div style="display:inline-block; vertical-align:middle; width:25%; text-align:center; ">
					<img data-bind="attr: {'src': '/plugin/mgsetup/static/img/thermometer.png', 'width': '80%',} , visible: loginState.isUser " />
				</div>

				<div style="width: 70%; display:inline-block; vertical-align:middle; text-align:left;">
					Bed Temperature: <span data-bind="text: $root.displayBedTemp(), style: { color: (parseFloat($root.displayBedTemp()) < 40) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayBedTempTarget()"></span><br>
					<div data-bind="visible: !$root.isDual()">
						Extruder Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
					</div>
					<div data-bind="visible: $root.isDual()">
						Extruder 0 Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
						Extruder 1 Temperature: <span data-bind="text: $root.displayTool1Temp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayTool1TempTarget()"></span><br>
					</div>
				</div>
			</div>
			<br>
			<center>
				<button class="btnstay" data-bind="enable: loginState.isUser(), click: function() {$root.cooldown()}">Cooldown</button>
			</center>
		</div>
		<center>
			<button id="control-yinc" class="btnstay" data-bind="enable: isOperational() && !$root.untouchable() && !isPrinting() && loginState.isUser() && !$root.stepEightPrepared(), click: function() { $root.dualSetupCheckLevel(0); $root.stepEightPrepared(true) }">{{ _('Prepare') }}</button>
			<br><br>
			<p style="">
				Once the printer has stopped moving, use your hand to slide T1 towards the build surface. If the T1 nozzle touches the glass, do not move the T1 extruder any further. 
			</p>
			<p >
				<span style="text-align:left;font-size:20px;" >Which of the following options best describes your current Extruder 1 starting height? Click the photos to zoom in.</span>
			</p>
		</center>
		<table>
			<tr>
				<td style="width:33%;padding:10px;border:2px solid #ddd;">
					<a href="/plugin/mgsetup/static/img/16.jpg" data-lightbox="step8"><img data-bind="attr: {'src': '/plugin/mgsetup/static/img/16.jpg', 'width': '100%',} , visible: loginState.isUser && setupStep()==='8'" /></a>
					<button style="min-height:80px;width:100%;" id="control-yinc" class="btngo" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && stepEightPrepared(), click: function() { $root.goTo('9'); $root.extOneNeedsPhysical(true); $root.cooldown(); window.scroll(0,0) }">{{ _('The nozzle hits the bed <br />') }}</button>
				</td>
				<td style="width:33%;padding:10px;border:2px solid #ddd;">
					<a href="/plugin/mgsetup/static/img/18.jpg" data-lightbox="step8"><img data-bind="attr: {'src': '/plugin/mgsetup/static/img/18.jpg', 'width': '100%',} , visible: loginState.isUser && setupStep()==='8'" /></a>
					<button style="min-height:80px;width:100%;" id="control-yinc" class="btngo" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && stepEightPrepared(), click: function() { $root.goTo('10'); $root.extOneNeedsPhysical(false); window.scroll(0,0) }">{{ _('The nozzle clears the bed with a small gap(.5 mm or less)') }}</button>
				</td>
				<td style="width:33%;padding:10px;border:2px solid #ddd;">
					<a href="/plugin/mgsetup/static/img/20.jpg" data-lightbox="step8"><img data-bind="attr: {'src': '/plugin/mgsetup/static/img/20.jpg', 'width': '100%',} , visible: loginState.isUser && setupStep()==='8'" /></a>
					<button style="min-height:80px;width:100%;" id="control-yinc" class="btngo" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && stepEightPrepared(), click: function() { $root.goTo('9'); $root.extOneNeedsPhysical(true); $root.cooldown(); window.scroll(0,0) }">{{ _('The nozzle clears the bed with a large gap (more than .5 mm)') }}</button>
				</td>
			</tr>
		</table>
	</div>


{#   ad88888ba   
	d8"     "88  
	8P       88  
	Y8,    ,d88  
	 "PPPPPP"88  
			 8P  
	8b,    a8P   
	`"Y8888P'    #}

	{# Physical T1 Height Adjustment - By Hand #}

	<div class="jog-panel" style="display: none;" data-bind="visible: loginState.isUser && setupStep()==='9'">
		<div class="fileupload-new thumbnail" style="width: 95%; margin:auto; " data-bind="visible: $root.isDual">
			<img data-bind="attr: {'src': $root.t1Picture, 'width': '100%',} , visible: loginState.isUser && setupStep()==='9'" />
		</div>
		<br>

		In this step, we will physically adjust the height of the Right Extruder (T1) in the mounting plate.  The system is already calibrated for Extruder 0's height, so we will adjust Extruder 1 to match that as closely as possible.
		<br><br>
		This adjustment process involves mechanical calibration between both extruders, and can take some time. However, following the instructions carefully will reward you with high quality dual-material prints.
		<br><br>

		<strong>Before proceeding, remove any material from the tip of the T1 nozzle to ensure accurate height adjustment.</strong>
		<br><br>




		<div class = "fileupload-new thumbnail" style="width:75%; margin:auto; background-color:rgba(200,0,0,0.2);" data-bind="visible:$root.setupStep()==='9' && $root.untouchable()">
			Click <strong>Cooldown</strong> to turn off all heaters if necessary.
			<br><br>
			<div style="margin:auto; display:block; padding:4px; border:8px solid #000; border-radius:10px; text-align:center; width:60%;">
				<div style="display:inline-block; vertical-align:middle; width:25%; text-align:center; ">
					<img data-bind="attr: {'src': '/plugin/mgsetup/static/img/thermometer.png', 'width': '80%',} , visible: loginState.isUser " />
				</div>

				<div style="width: 70%; display:inline-block; vertical-align:middle; text-align:left;">
					Bed Temperature: <span data-bind="text: $root.displayBedTemp(), style: { color: (parseFloat($root.displayBedTemp()) < 40) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayBedTempTarget()"></span><br>
					<div data-bind="visible: !$root.isDual()">
						Extruder Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
					</div>
					<div data-bind="visible: $root.isDual()">
						Extruder 0 Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
						Extruder 1 Temperature: <span data-bind="text: $root.displayTool1Temp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayTool1TempTarget()"></span><br>
					</div>
				</div>
			</div>
			<br>
			<center><button class="btnstay" data-bind="enable: loginState.isUser(), click: function() {$root.cooldown()}">Cooldown</button></center>
		</div>
		<div style="margin:auto; display:block; padding:4px; border:8px solid #000; border-radius:10px; text-align:center; width:60%;" data-bind="visible: !$root.untouchable()">
			<div style="display:inline-block; vertical-align:middle; width:25%; text-align:center; ">
				<img data-bind="attr: {'src': '/plugin/mgsetup/static/img/thermometer.png', 'width': '80%',} , visible: loginState.isUser " />
			</div>

			<div style="width: 70%; display:inline-block; vertical-align:middle; text-align:left;">
				Bed Temperature: <span data-bind="text: $root.displayBedTemp(), style: { color: (parseFloat($root.displayBedTemp()) < 40) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayBedTempTarget()"></span><br>
				<div data-bind="visible: !$root.isDual()">
					Extruder Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
				</div>
				<div data-bind="visible: $root.isDual()">
					Extruder 0 Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
					Extruder 1 Temperature: <span data-bind="text: $root.displayTool1Temp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayTool1TempTarget()"></span><br>
				</div>
			</div>
		</div><br>

		Ensure that the T1 extruder is below 50°C, then loosen the clamping bolt that secures the T1 hot end. Apply gentle pressure to slide the T1 hot end upward into the mounting plate as far as possible, and then gently secure the clamping bolt. Now click "Move to Position" to move the build plate to the correct position.<br><br>
		<div class="fileupload-new thumbnail" style="width: 95%; margin:auto; ">
			<img data-bind="attr: {'src': '/plugin/mgsetup/static/img/d9-1.jpg', 'width': '100%',} , visible: loginState.isUser && setupStep()==='9'" />
		</div>
		<div class="fileupload-new thumbnail" style="width: 95%; margin:auto; ">
			<img data-bind="attr: {'src': '/plugin/mgsetup/static/img/d9-2.jpg', 'width': '100%',} , visible: loginState.isUser && setupStep()==='9'" />
		</div><br>

		<center>
			<button style="width:100%;" class="btnstay" data-bind="enable: loginState.isUser && !$root.untouchable() && !$root.stepNineAtPosition(), click: function() { $root.dualRightNozzleAdjust('simple'), $root.stepNineAtPosition(true) }">Move to Position<br /></button>
		</center>
		<br><br>

		Ensure that all components (Extruders 0 and 1 and the Build Plate) are at room temperature before touching any of the printer’s components.
		<br><br>

		<br><br>
		<ol>
			<li>Now move the feeler gauge under the tip of the T1 nozzle.</li>
			<li>Loosen the T1 clamping bolt until the T1 hot end slides downward and touches the bed.</li>
			<li>Secure the T1 clamping bolt.</li>
		</ol>
		<br>
		<div class="fileupload-new thumbnail" style="width: 95%; margin:auto; ">
			<img data-bind="attr: {'src': '/plugin/mgsetup/static/img/d9-3.jpg', 'width': '100%',} , visible: loginState.isUser && setupStep()==='9'" />
		</div>
		<div class="fileupload-new thumbnail" style="width: 95%; margin:auto; ">
			<img data-bind="attr: {'src': '/plugin/mgsetup/static/img/d9-4.jpg', 'width': '100%',} , visible: loginState.isUser && setupStep()==='9'" />
		</div>
		<br><br>
		<strong><center>Tighten the clamping bolt completely - this is a safety hazard if not secured.</center></strong>
		<br><br>
		<center>
			<button style="width:100%;" class="btngoBig" data-bind="enable: loginState.isUser && $root.stepNineAtPosition(), click: function() { $root.dualRightNozzleAdjust(3); window.scroll(0,0) }">Extruder 1 is touching feeler gauge<br /></button>
		</center>
	</div>

	{#      88     ,a8888a,     #}
	{#	  ,d88   ,8P"'  `"Y8,   #}
	{#	888888  ,8P        Y8,  #}
	{#		88  88          88  #}
	{#		88  88          88  #}
	{#		88  `8b        d8'  #}
	{#		88   `8ba,  ,ad8'   #}
	{#		88     "Y8888P"     #}

	{# Load Filament - EXT1 #}

	<div id="nine" data-bind="visible: loginState.isUser && setupStep()==='10'">
		<div class="fileupload-new thumbnail" style="width: 95%; margin:auto; " data-bind="visible: $root.isDual">
			<img data-bind="attr: {'src': $root.t1Picture, 'width': '100%',} , visible: loginState.isUser && setupStep()==='10'" />
		</div>
		<br>
		<h1 style="text-align:left">Extrude Filament on Extruder 1</h1>


		<p>
			Now you need to load filament into your  Right Extruder (T1). 
			When you click "Prepare" the printer will perform the following actions:
		</p>

		<ol>
			<li>Move the heated build platform down to its home position</li>
			<li>Move the X and Y axes to their home positions</li>
			<li>Start heating the printer's hot end</li>
			<li>Start heating the printer's heated build platform.</li>
		</ol>

		<p>
			Click 'Prepare' to begin heating the hot end, then continue reading the instructions listed below while you wait for the hot end to finish heating.
		</p>

		<p>

			<i class="icon-fire" style="float:left;font-size:30px;color:red;margin-right:5px;"></i>

			Your right extruder will begin to get very hot. Your build surface will also start to heat up. (You'll need your build surface to be heated for the next step and it can take a few minutes for it to heat up). Do not touch the right extruder's nozzle or the build surface.
		</p>


		<center>
			<button  id="control-yinc" class="btnstay" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && !$root.stepTenStartHeatingClicked(), click: function() { $root.sendWigglePreheat('T1'); $root.stepTenStartHeatingClicked(true) }">{{ _('Prepare') }}</button>
		</center>
		<br><br>

		Now we’ll prepare to load filament, if you have not already, while waiting for your <span data-bind="text: $root.printerNameForDisplay"></span> to heat up.
		<br><br>


		Place the PLA filament spool on the spool holder so that the loose end points directly upwards into the filament guide. You may need to flip your spool in order to achieve the proper orientation. Cut the end of the filament so that the tip is flat.

		<br /><br />


		Feed the tip of your filament up through the black filament guide and the clear filament guide tube.

		<video controls id="filamentVideo1" class="video-js"  preload="none"  data-setup='{"fluid": true, "controls":true}' data-bind="attr: { autoplay: 'true', loop: 'true' , poster:'/plugin/mgsetup/static/img/filamentLoad1Poster.jpg'}, if:  setupStep() === '10'" onclick="this.paused ? this.play() : this.pause();" vjs-big-play-centered><source src="/plugin/mgsetup/video/filamentLoad1.mp4" type='video/mp4'>
			<p class="vjs-no-js">
				To view this video please enable JavaScript, and consider upgrading to a web browser that
				<a href="http://videojs.com/html5-video-support/" target="_blank">supports HTML5 video</a>
			</p>
		</video>

		<br /><br />



		Next insert the filament into the hole on top of the right extruder, located between the filament drive motor and the vertical fan.

		<video controls id="filamentVideo2" class="video-js"  preload="none"  data-setup='{"fluid": true}' data-bind="attr: { autoplay: 'true', loop: 'true' , poster:'/plugin/mgsetup/static/img/filamentLoad2Poster.jpg'}, if:  setupStep() === '10'" onclick="this.paused ? this.play() : this.pause();"><source src="/plugin/mgsetup/video/filamentLoad2.mp4" type='video/mp4'>
			<p class="vjs-no-js">
				To view this video please enable JavaScript, and consider upgrading to a web browser that
				<a href="http://videojs.com/html5-video-support/" target="_blank">supports HTML5 video</a>
			</p>
		</video>
		<br /><br />

		Below you can see your extruder temperature. Once the extruder temperature matches the target temperature within 2 degrees, click "Feed Filament" to start loading filament. You may need to apply slight downward pressure on the filament to get it started. Once the filament has started to feed, you should feel it being pulled into the extruder. 
		<br>
		<div style="margin:auto; display:block; padding:4px; border:8px solid #000; border-radius:10px; text-align:center; width:60%;">
			<div style="display:inline-block; vertical-align:middle; width:25%; text-align:center; ">
				<img data-bind="attr: {'src': '/plugin/mgsetup/static/img/thermometer.png', 'width': '80%',} , visible: loginState.isUser " />
			</div>

			<div style="width: 70%; display:inline-block; vertical-align:middle; text-align:left;">
				Bed Temperature: <span data-bind="text: $root.displayBedTemp(), style: { color: (parseFloat($root.displayBedTemp()) < 40) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayBedTempTarget()"></span><br>
				<div data-bind="visible: !$root.isDual()">
					Extruder Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
				</div>
				<div data-bind="visible: $root.isDual()">
					Extruder 0 Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
					Extruder 1 Temperature: <span data-bind="text: $root.displayTool1Temp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayTool1TempTarget()"></span><br>
				</div>
			</div>
		</div>

		<br>
		<center>
			<button title="Extrude 75 mm of Filament" class="btnstay" data-bind="enable: $root.stepTenStartHeatingClicked() && $root.lockButton(), click: function() { $root.feedFilament('tool1'); $root.enableLockedButton() }, enabled: (parseFloat($root.displayTool1Temp()) > 180) ">Feed Filament</button>
		</center>
		<br>
		Continue clicking "Feed Filament" until a thin strand of filament is consistently extruding from the tip of the nozzle. Use your tweezers to remove the hot filament after it has been extruded. <br><br>

		Push the filament guide tube down into the hole on top of the extruder, located between the filament drive motor and the vertical fan).

		<video controls id="filamentVideo3" class="video-js" preload="none"   data-setup='{"fluid": true}' data-bind="attr: { autoplay: 'true', loop: 'true' , poster:'/plugin/mgsetup/static/img/filamentLoad3Poster.jpg'}, if:  setupStep() === '10'" onclick="this.paused ? this.play() : this.pause();"><source src="/plugin/mgsetup/video/filamentLoad3.mp4" type='video/mp4'>
			<p class="vjs-no-js">
				To view this video please enable JavaScript, and consider upgrading to a web browser that
				<a href="http://videojs.com/html5-video-support/" target="_blank">supports HTML5 video</a>
			</p>
		</video>

		Once filament is consistently extruding from the tip of the nozzle, click “Next Step” to continue.<br>
		<center>
			<button class="btngoBig" data-bind="visible: loginState.isUser, click: function() { $root.goTo('11'); window.scroll(0,0) }">Next Step</button>
		</center>
	</div>

{#      88      88  
	  ,d88    ,d88  
	888888  888888  
		88      88  
		88      88  
		88      88  
		88      88  
		88      88  #}

		{# EEPROM Adjust EXT1 Hotend Offset #}
		<div data-bind="visible: loginState.isUser && setupStep()==='11'">
			<div class="fileupload-new thumbnail" style="width: 95%; margin:auto; " data-bind="visible: $root.isDual">
				<img data-bind="attr: {'src': $root.t1Picture, 'width': '100%',} , visible: loginState.isUser && setupStep()==='11'" />
			</div>
			<br>

			<h1 style="text-align:left">Verify T1 Starting Height</h1>





			<p>

				<i class="icon-fire" style="float:left;font-size:30px;color:red;margin-right:5px;"></i> The printer's Right Extruder (T1) and build platform are hot - do not touch them!
			</p>

			<p>
				In this step you will print a small pattern on the build platform. We'll call this pattern a <em>Zigzag pattern</em> in the future. The Zigzag pattern will help you to verify your starting height. 
			</p>

			<p>
				When you click "Print Zigzag Pattern" the printer will perform the following actions
			</p>

			<ol>
				<li>Wait for the Extruder and build platform to reach their target temperatures. (The printer will not move while it waits. You can see the actual temperatures in red and the target temperatures in black below the "Print Zigzag Pattern" button)</li>
				<li>Move to its home position</li>
				<li>Move to its printing position</li>
				<li>Print a small amount of material off the side of the bed</li>
				<li>Print a Zigzag pattern in the middle of the bed with Tool 1</li>
				<li>Move to its final position</li>
			</ol>


			<p>
				When you are ready, click "Print Zigzag Pattern"
			</p>
			<br>

			<center>
				<button class="btnstay" data-bind="visible: !$root.rrf(), enable: !$root.stepElevenFirstWiggleClicked(), click: function() { $root.printWiggleConfirm('T1'); $root.enableLockedButton(8000) }">Print Zigzag Pattern</button><button class="btnstay" data-bind="visible: $root.rrf(), enable: !$root.stepElevenFirstWiggleClicked(), click: function() { $root.printWiggleConfirm('T1-custom'); $root.enableLockedButton(8000) }">Print Zigzag Pattern</button>
			</center>
			<br>



			<div style="margin:auto; display:block; padding:4px; border:8px solid #000; border-radius:10px; text-align:center; width:60%;">
				<div style="display:inline-block; vertical-align:middle; width:25%; text-align:center; ">
					<img data-bind="attr: {'src': '/plugin/mgsetup/static/img/thermometer.png', 'width': '80%',} , visible: loginState.isUser " />
				</div>

				<div style="width: 70%; display:inline-block; vertical-align:middle; text-align:left;">
					Bed Temperature: <span data-bind="text: $root.displayBedTemp(), style: { color: (parseFloat($root.displayBedTemp()) < 40) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayBedTempTarget()"></span><br>
					<div data-bind="visible: !$root.isDual()">
						Extruder Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
					</div>
					<div data-bind="visible: $root.isDual()">
						Extruder 0 Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
						Extruder 1 Temperature: <span data-bind="text: $root.displayTool1Temp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayTool1TempTarget()"></span><br>
					</div>
				</div>
			</div>

			Once the Zigzag pattern has printed, and the printer has fully parked, you can use your tweezers to remove any material on the side of the bed. Next, carefully remove the Zigzag pattern by using your tweezers to lift it off the bed from the rear left "tail".  How the Zigzag pattern comes off the bed tells us if the bed is level at this position:<br><br>



			<video controls id="filamentVideo1" class="video-js"  preload="none"     data-setup='{"fluid": true}' data-bind="attr: { autoplay: 'true', loop: 'true' , poster:'/plugin/mgsetup/static/img/wiggleposter.jpg'}, if:  setupStep() === '11'" onclick="this.paused ? this.play() : this.pause();"><source src="/plugin/mgsetup/video/wiggleMiddle.mp4" type='video/mp4'>
				<p class="vjs-no-js">
					To view this video please enable JavaScript, and consider upgrading to a web browser that
					<a href="http://videojs.com/html5-video-support/" target="_blank">supports HTML5 video</a>
				</p>
			</video>




			<p >
				<strong style="font-size:20px;" >Which of the following options best describes your Zigzag pattern? Click the photos to zoom in.</strong>
			</p>



			<table>
				<tr>
					<td style="width:33%;padding:10px;border-bottom:0px;border-top:0px;border-left:2px; border-right:2px;border:solid #ddd;">
						<a href="/plugin/mgsetup/static/img/10.jpg" data-lightbox="step8"> <img data-bind="attr: {'src': '/plugin/mgsetup/static/img/10.jpg', 'width': '100%',} , visible: loginState.isUser && setupStep()==='11'" /></a>

					</td>

					<td style="width:33%;padding:10px;border-bottom:0px;border-top:0px;border-left:2px; border-right:2px;border:solid #ddd;">

						<a href="/plugin/mgsetup/static/img/11.jpg" data-lightbox="step8"><img data-bind="attr: {'src': '/plugin/mgsetup/static/img/11.jpg', 'width': '100%',} , visible: loginState.isUser && setupStep()==='11'" /></a>

					</td>




					<td style="width:33%;padding:10px;border-bottom:0px;border-top:0px;border-left:2px; border-right:2px;border:solid #ddd;">

						<a href="/plugin/mgsetup/static/img/12.jpg" data-lightbox="step8"> <img data-bind="attr: {'src': '/plugin/mgsetup/static/img/12.jpg', 'width': '100%',} , visible: loginState.isUser && setupStep()==='11'" /></a>
					</td>

				</tr>




				<tr>

					<td style="border-left:2px;border-right:2px;border-bottom:0px;border-top:0px;border:solid #ddd;">
						If the  Zigzag pattern peels off with fifty percent of the zigzag pattern as loose segments and fifty percent as connected segments, you have <strong>a perfect Starting Height</strong>. Click below to proceed to the next step. 
						<br />




						<br />

						<strong>NOTE:</strong> If the last few segments break off from the rest of the strand, don't worry - just use your tweezers to pull them off the bed. 



					</td>

					<td style="border-left:2px;border-right:2px;border-bottom:0px;border-top:0px;border:solid #ddd;">
						If the Zigzag pattern peels-off as an even strand made with no small section of connected segments at the end, <strong>the Starting Height is too low</strong>. Click below to adjust the starting height and print a new zigzag. 
		   <!-- <br />
			<br />

			<strong>NOTE:</strong> If the last few segments break off from the rest of the strand, don't worry - just use your tweezers to pull them off the bed. -->

		</td>
		<td style="border-left:2px;border-right:2px;border-bottom:0px;border-top:0px;border:solid #ddd;">

			If the Zigzag pattern peels-off in one solid piece, with most/all segments of the zig-zag pattern connected, 
			<strong>the Starting Height is too high</strong>. Click below to adjust the starting height and print a new zigzag. 



		</td>
	</tr>

	<tr>

		<td style="border-bottom:0px;border-top:0px;border-left:2px; border-right:2px;border:solid #ddd;min-height:40px;">
			
			<center>
				<button style="width:100%;" class="btngoBig" data-bind="enable: $root.stepElevenFirstWiggleClicked() && $root.lockButton(), click: function() { $root.setupSetStartingHeight('T1'); window.scroll(0,0) }">Next Step<br /></button>

			</center>

			<!--Too far-->
		</td>


		<td style="border-bottom:0px;border-top:0px;border-left:2px; border-right:2px;border:solid #ddd;min-height:40px;">
			<div data-bind="visible: $root.stepElevenShowFineAdjustments()==false"><br>
				<center>
					<button class="btnstay" data-bind="visible: $root.stepElevenShowFineAdjustments()==false && !$root.rrf(), enable: $root.stepElevenFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm('T1-2',-0.04); $root.enableLockedButton(10000) }">Adjust and Print</button><button class="btnstay" data-bind="visible: $root.stepElevenShowFineAdjustments()==false && $root.rrf(), enable: $root.stepElevenFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm('T1-custom',-0.04); $root.enableLockedButton(10000) }">Adjust and Print</button>
				</center>
			</div>
			<center>
				<button class="btnstay" data-bind="visible: $root.stepElevenShowFineAdjustments()==true && !$root.rrf(), enable: $root.stepElevenFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm('T1-2',-0.04); $root.enableLockedButton(10000) }">Adjust by 0.04 mm and Print</button><button class="btnstay" data-bind="visible: $root.stepElevenShowFineAdjustments()==true && $root.rrf(), enable: $root.stepElevenFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm('T1-custom',-0.04); $root.enableLockedButton(10000) }">Adjust by 0.04 mm and Print</button>
			</center>
			<br>
			<center>
				<button class="btnstay" data-bind="visible: $root.stepElevenShowFineAdjustments()==true && !$root.rrf(), enable: $root.stepElevenFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm('T1-2',-0.02); $root.enableLockedButton(10000) }">Adjust by 0.02 mm and Print</button><button class="btnstay" data-bind="visible: $root.stepElevenShowFineAdjustments()==true && $root.rrf(), enable: $root.stepElevenFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm('T1-custom',-0.02); $root.enableLockedButton(10000) }">Adjust by 0.02 mm and Print</button>
			</center>
			<br>
			<center>
				<button class="btnstay" data-bind="visible: $root.stepElevenShowFineAdjustments()==true && $root.rrf(), enable: $root.stepElevenFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm('T1-custom',-0.01); $root.enableLockedButton(10000) }">Adjust by 0.01 mm and Print</button>
			</center>            

		</td>


		<td style="border-bottom:0px;border-top:0px;border-left:2px; border-right:2px;border:solid #ddd;min-height:40px;">
			<div data-bind="visible: $root.stepElevenShowFineAdjustments()==false"><br>
				<center>
					<button class="btnstay" data-bind="visible: $root.stepElevenShowFineAdjustments()==false && !$root.rrf(), enable: $root.stepElevenFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm('T1-2',0.04); $root.enableLockedButton(10000) }">Adjust and Print</button><button class="btnstay" data-bind="visible: $root.stepElevenShowFineAdjustments()==false && $root.rrf(), enable: $root.stepElevenFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm('T1-custom',0.04); $root.enableLockedButton(10000) }">Adjust and Print</button>
				</center>
			</div>
			<center>
				<button class="btnstay" data-bind="visible: $root.stepElevenShowFineAdjustments()==true && !$root.rrf(), enable: $root.stepElevenFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm('T1-2',0.04); $root.enableLockedButton(10000) }">Adjust by 0.04 mm and Print</button><button class="btnstay" data-bind="visible: $root.stepElevenShowFineAdjustments()==true && $root.rrf(), enable: $root.stepElevenFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm('T1-custom',0.04); $root.enableLockedButton(10000) }">Adjust by 0.04 mm and Print</button>
			</center>
			<br>
			<center>
				<button class="btnstay" data-bind="visible: $root.stepElevenShowFineAdjustments()==true && !$root.rrf(), enable: $root.stepElevenFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm('T1-2',0.02); $root.enableLockedButton(10000) }">Adjust by 0.02 mm and Print</button><button class="btnstay" data-bind="visible: $root.stepElevenShowFineAdjustments()==true && $root.rrf(), enable: $root.stepElevenFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm('T1-custom',0.02); $root.enableLockedButton(10000) }">Adjust by 0.02 mm and Print</button>
			</center>
			<br>
			<center>
				<button class="btnstay" data-bind="visible: $root.stepElevenShowFineAdjustments()==true && !$root.rrf(), enable: $root.stepElevenFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm('T1-2',0.01); $root.enableLockedButton(10000) }">Adjust by 0.01 mm and Print</button><button class="btnstay" data-bind="visible: $root.stepElevenShowFineAdjustments()==true && $root.rrf(), enable: $root.stepElevenFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm('T1-custom',0.01); $root.enableLockedButton(10000) }">Adjust by 0.01 mm and Print</button>
			</center>  
			<!--Too Close-->
		</td>
		<tr>

		</table>
		<button class="btnstay" data-bind="visible: $root.stepElevenShowFineAdjustments()==true && !$root.rrf(), enable: $root.stepElevenFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm('T1-2'); $root.enableLockedButton(10000) }">Print This Zigzag Again</button><button class="btnstay" data-bind="visible: $root.stepElevenShowFineAdjustments()==true && $root.rrf(), enable: $root.stepElevenFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm('T1-custom'); $root.enableLockedButton(10000) }">Print This Zigzag Again</button>
		<br>

		<input type="checkbox" data-bind="checked: $root.stepElevenShowFineAdjustments" /> Show Advanced Options.



		{# <br><br><center><button style="width:100%;" class="btngoBig" data-bind="enable: loginState.isUser, click: function() { $root.goTo('12') }">Next Step<br /></button></center> #}

	</div>
	{#      88   ad888888b,  #}
	{#	  ,d88  d8"     "88  #}
	{#	888888          a8P  #}
	{#		88       ,d8P"   #}
	{#		88     a8P"      #}
	{#		88   a8P'        #}
	{#		88  d8"          #}
	{#		88  88888888888  #}

	{# Print Something with EXT1 Only #}
	<div data-bind="visible: loginState.isUser && setupStep()==='12'">
		<div class="fileupload-new thumbnail" style="width: 95%; margin:auto; " data-bind="visible: $root.isDual">
			<img data-bind="attr: {'src': $root.bothToolsPicture, 'width': '100%',} , visible: loginState.isUser && setupStep()==='12'" />
		</div>
		<br><br>
		Now we’ll print a square pattern in order to determine the level of calibration between both extruders along the X and Y axes.

		After printing the pattern, you’ll examine it on the build plate: the perimeters of the pattern should be perfectly aligned, and should not overlap except at the purge lines, which are located at the lower left-hand corner of the pattern.

		<br><br>
		<center>
			<button class="btnstay" data-bind="click: function() { $root.printWiggleConfirm('simple') }, enable: !$root.stepTwelveSimpleClicked()">Print Simple Test</button>
			<br><br>
			<button class="btngo" data-bind="click: function() { $root.goTo('14'); window.scroll(0,0) }">Skip to Calibration Adjustment</button><br><br>
		</center>
		<br><br>
		<div style="margin:auto; display:block; padding:4px; border:8px solid #000; border-radius:10px; text-align:center; width:60%;">
			<div style="display:inline-block; vertical-align:middle; width:25%; text-align:center; ">
				<img data-bind="attr: {'src': '/plugin/mgsetup/static/img/thermometer.png', 'width': '80%',} , visible: loginState.isUser " />
			</div>

			<div style="width: 70%; display:inline-block; vertical-align:middle; text-align:left;">
				Bed Temperature: <span data-bind="text: $root.displayBedTemp(), style: { color: (parseFloat($root.displayBedTemp()) < 40) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayBedTempTarget()"></span><br>
				<div data-bind="visible: !$root.isDual()">
					Extruder Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
				</div>
				<div data-bind="visible: $root.isDual()">
					Extruder 0 Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
					Extruder 1 Temperature: <span data-bind="text: $root.displayTool1Temp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayTool1TempTarget()"></span><br>
				</div>
			</div>
		</div>
		<br><br>


		<table class="choiceTable">
			<tr>
				<td>
					<a href="/plugin/mgsetup/static/img/cross.jpg" data-lightbox="step8"> <img data-bind="attr: {'src': '/plugin/mgsetup/static/img/cross.jpg', 'width': '100%',} , visible: loginState.isUser && setupStep()==='12'" /></a>
				</td>
				<td>
					<a href="/plugin/mgsetup/static/img/simpleTestFail1.jpg" data-lightbox="step8"><img data-bind="attr: {'src': '/plugin/mgsetup/static/img/simpleTestFail1.jpg', 'width': '100%',} , visible: loginState.isUser && setupStep()==='12'" /></a>
				</td>
				<td>
					<a href="/plugin/mgsetup/static/img/simpleTestFail2.jpg" data-lightbox="step8"><img data-bind="attr: {'src': '/plugin/mgsetup/static/img/simpleTestFail2.jpg', 'width': '100%',} , visible: loginState.isUser && setupStep()==='12'" /></a>
				</td>
			</tr>
			<tr>
				<td>
					The two patterns do not intersect and have even spacing.

				</td>
				<td colspan="2">
					The two patterns intersect or have uneven spacing. If you are not sure, pick this option.

				</td>
			</tr>
			<tr>
				<td class="buttonCell">
					<center>
						<button class="btngoBig" data-bind="click: function() { $root.goTo('16'); window.scroll(0,0) }, enable: $root.stepTwelveSimpleClicked()">Begin Dual Printing</button>
					</center>
				</td>
				<td colspan="2" class="buttonCell">
					<center>
						<button class="btngoBig" data-bind="click: function() { $root.goTo('14'); window.scroll(0,0) }, enable: $root.stepTwelveSimpleClicked()">Adjust X and Y Offsets</button>
					</center>
				</td>
			</tr>
		</table>

	</div>
	{##}
	{#      88   ad888888b,  #}
	{#	  ,d88  d8"     "88  #}
	{#	888888          a8P  #}
	{#		88       aad8"   #}
	{#		88       ""Y8,   #}
	{#		88          "8b  #}
	{#		88  Y8,     a88  #}
	{#		88   "Y888888P'  #}
	{##}
	{# Print with Both Extruders - MG Keychain ? #}
	<div data-bind="visible: loginState.isUser && setupStep()==='13'">
		Same as 12, but have the instructions have the user run a pre-sliced .gcode file to print with both extruders, some model that will show if the X and Y offsets are close enough for general printing, or if the user needs to calibrate.  Kyle likes ooze shield for this.

		User version:

		Print [file] from OctoPrint.  While printing, observe the contact areas between the two colors of filament - are there large gaps between the two colors, and if so, are they consistent across the print (always on the right bottom edge, for instance)?  If so, you need to calibrate your X/Y Offset - go to 14.

		If the print comes out cleanly, with no large gaps between the two colors, your X/Y Offsets are already calibrated well enough.  Go to 15.

		TODO - pictures, pick and test a model, add buttons here, etc. etc.

	</div>
{#      88          ,d8    
	  ,d88        ,d888    
	888888      ,d8" 88    
		88    ,d8"   88    
		88  ,d8"     88    
		88  8888888888888  
		88           88    
		88           88    #}

		{# Imperfection in Both Prints Requires X/Y Calibration #}
		<div data-bind="visible: loginState.isUser && setupStep()==='14'">
			<div class="fileupload-new thumbnail" style="width: 95%; margin:auto; " data-bind="visible: $root.isDual">
				<img data-bind="attr: {'src': $root.bothToolsPicture, 'width': '100%',} , visible: loginState.isUser && setupStep()==='14'" />
			</div><br><br>
			<p>
				In this step we will calibrate the distance between the 2 extruders on the X axis. To do this we will use both extruders to print a series of 'sawteeth' and choose which one is best aligned. We will repeat this process until the X axis is completely calibrated.
			</p>



			Click "Print First Pattern” when you are ready to begin.
			<br><br><center><button style="width:100%;" class="btngoBig" data-bind="enable: loginState.isUser && !$root.sawBinPrinted() && $root.calibrationStep() === 0, click: function() { $root.calibrationAxis('X'), $root.printSawBinConfirm() }">Print First Pattern</button>
		{# <button style="width:100%;" class="btngoBig" data-bind="enable: loginState.isUser && !$root.sawBinPrinted() && $root.calibrationStep() === 1, click: function() { $root.printSawBinConfirm() }">Print X-Axis Pattern 2</button>
		<button style="width:100%;" class="btngoBig" data-bind="enable: loginState.isUser && !$root.sawBinPrinted() && $root.calibrationStep() === 2, click: function() { $root.printSawBinConfirm() }">Print X-Axis Pattern 3</button> #}</center><br>



		<p>
			It may take a few minutes for each pattern to begin printing, as the printer will wait until the heated bed and extruders have reached their target temperatures:<br>
		</p>

		<div style="margin:auto; display:block; padding:4px; border:8px solid #000; border-radius:10px; text-align:center; width:60%;">
			<div style="display:inline-block; vertical-align:middle; width:25%; text-align:center; ">
				<img data-bind="attr: {'src': '/plugin/mgsetup/static/img/thermometer.png', 'width': '80%',} , visible: loginState.isUser " />
			</div>

			<div style="width: 70%; display:inline-block; vertical-align:middle; text-align:left;">
				Bed Temperature: <span data-bind="text: $root.displayBedTemp(), style: { color: (parseFloat($root.displayBedTemp()) < 40) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayBedTempTarget()"></span><br>
				<div data-bind="visible: !$root.isDual()">
					Extruder Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
				</div>
				<div data-bind="visible: $root.isDual()">
					Extruder 0 Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
					Extruder 1 Temperature: <span data-bind="text: $root.displayTool1Temp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayTool1TempTarget()"></span><br>
				</div>
			</div>
		</div>

		<p>
			Once both extruders have printed the pattern, choose from positions 1 – 5 to identify which set of 'sawteeth' are most closely aligned. 
			The ideal result will show perfectly-aligned features for position number 3 — if positions 1 or 5 are selected, the printer will automatically adjust the X offset before prompting you to print the same pattern again.  If positions 2 or 4 are selected, the printer will automatically adjust the X offset before prompting you to print the next pattern.
		</p>
		<p>
			Once you’ve achieved alignment at position 3, you’ve reached the target position. Next, we'll follow the same procedure two more times, using finer tolerances each time. After completing the third procedure, you will automatically be sent to the next step.
		</p>



		<div style="font-size:20px;"  data-bind="visible: $root.calibrationStep() === 0">Pattern 1: Coarse Adjustment</div>
		<div style="font-size:20px;"  data-bind="visible: $root.calibrationStep() === 1">Pattern 2: Medium Adjustment</div>
		<div style="font-size:20px;"  data-bind="visible: $root.calibrationStep() === 2">Pattern 3: Fine Adjustment</div>
		<center>
			<div class="fileupload-new thumbnail" style="width: 95%; " data-bind="visible: $root.isDual">
				{# <img data-bind="attr: {'src': '/plugin/mgsetup/static/img/x-bin-zoom.png', 'width': '100%',} , visible: loginState.isUser && setupStep()==='14' && $root.calibrationStep() < 1" /> #}
				<img data-bind="attr: {'src': '/plugin/mgsetup/static/img/x-saw-zoom.jpg', 'width': '100%',} , visible: loginState.isUser && setupStep()==='14' && $root.calibrationStep() > -1" />
			</div></center><br>
			<br>
			<center>
				{# <span data-bind="text: 'Which bin is closest to having the sawtooth perfectly centered?', visible: $root.calibrationStep() < 1"></span> #}
				<span data-bind="text: 'At which position (1-5) are the vertical lines most closely aligned?', visible: $root.calibrationStep() > -1"></span>
			</center><br><br>
			<center><button style="width:20%;" class="btngoBig" data-bind="enable: loginState.isUser && $root.lockButton() && $root.sawBinPrinted() && ($root.chosenSawBin() === 0 || $root.chosenSawBin() === 1), click: function() { $root.printSawBinConfirm(1) }">1</button><button style="width:20%;" class="btngoBig" data-bind="enable: loginState.isUser && $root.lockButton() && $root.sawBinPrinted() && ($root.chosenSawBin() === 0 || $root.chosenSawBin() === 2), click: function() { $root.printSawBinConfirm(2) }">2</button><span data-bind="visible: $root.calibrationStep() < 2"><button style="width:20%;" class="btngoBig" data-bind="enable: loginState.isUser && $root.lockButton() && $root.sawBinPrinted() && ($root.chosenSawBin() === 0 || $root.chosenSawBin() === 3), click: function() { $root.printSawBinConfirm(3) }">3</button></span><span data-bind="visible: $root.calibrationStep() === 2"><button style="width:20%;" class="btngoBig" data-bind="enable: loginState.isUser && $root.lockButton() && $root.sawBinPrinted() && ($root.chosenSawBin() === 0 || $root.chosenSawBin() === 3), click: function() { $root.printSawBinConfirm(3); window.scroll(0,0) }">3</button></span><button style="width:20%;" class="btngoBig" data-bind="enable: loginState.isUser && $root.lockButton() && $root.sawBinPrinted() && ($root.chosenSawBin() === 0 || $root.chosenSawBin() === 4), click: function() { $root.printSawBinConfirm(4) }">4</button><button style="width:20%;" class="btngoBig" data-bind="enable: loginState.isUser && $root.lockButton() && $root.sawBinPrinted() && ($root.chosenSawBin() === 0 || $root.chosenSawBin() === 5), click: function() { $root.printSawBinConfirm(5) }">5</button></center>


		</div>
{#      88  8888888888   
	  ,d88  88           
	888888  88  ____     
		88  88a8PPPP8b,  
		88  PP"     `8b  
		88           d8  
		88  Y8a     a8P  
		88   "Y88888P"   #}

		{# Y Calibration #}
		<div data-bind="visible: loginState.isUser && setupStep()==='15'">
			<div class="fileupload-new thumbnail" style="width: 95%; margin:auto; " data-bind="visible: $root.isDual">
				<img data-bind="attr: {'src': $root.bothToolsPicture, 'width': '100%',} , visible: loginState.isUser && setupStep()==='15'" />
			</div><br><br>
			<p>
				In this step we will calibrate the distance between the 2 extruders on the Y axis. To do this we will use both extruders to print a series of 'sawteeth' and choose which one is best aligned. We will repeat this process until the Y axis is completely calibrated.
			</p>

			Click "Print First Pattern” when you are ready to begin.
			<br><br><center>
				<button style="width:100%;" class="btngoBig" data-bind="enable: loginState.isUser && !$root.sawBinPrinted() && $root.calibrationStep() === 0, click: function() { $root.calibrationAxis('Y'),  $root.printSawBinConfirm() }">Print First Pattern</button>
	{# <button style="width:100%;" class="btngoBig" data-bind="enable: loginState.isUser && !$root.sawBinPrinted() && $root.calibrationStep() === 1, click: function() { $root.printSawBinConfirm() }">Print Y-Axis Pattern 2</button>
	<button style="width:100%;" class="btngoBig" data-bind="enable: loginState.isUser && !$root.sawBinPrinted() && $root.calibrationStep() === 2, click: function() { $root.printSawBinConfirm() }">Print Y-Axis Pattern 3</button> #}</center><br>

	<p>
		It may take a few minutes for each pattern to begin printing, as the printer will wait until the heated bed and extruders have reached their target temperatures:
	</p>

	<div style="margin:auto; display:block; padding:4px; border:8px solid #000; border-radius:10px; text-align:center; width:60%;">
		<div style="display:inline-block; vertical-align:middle; width:25%; text-align:center; ">
			<img data-bind="attr: {'src': '/plugin/mgsetup/static/img/thermometer.png', 'width': '80%',} , visible: loginState.isUser " />
		</div>

		<div style="width: 70%; display:inline-block; vertical-align:middle; text-align:left;">
			Bed Temperature: <span data-bind="text: $root.displayBedTemp(), style: { color: (parseFloat($root.displayBedTemp()) < 40) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayBedTempTarget()"></span><br>
			<div data-bind="visible: !$root.isDual()">
				Extruder Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
			</div>
			<div data-bind="visible: $root.isDual()">
				Extruder 0 Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
				Extruder 1 Temperature: <span data-bind="text: $root.displayTool1Temp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayTool1TempTarget()"></span><br>
			</div>
		</div>
	</div>

	<p>
		Once both extruders have printed the pattern, choose from positions 1 – 5 to identify which set of 'sawteeth' are most closely aligned. 
		The ideal result will show perfectly-aligned features for position number 3 — if positions 1 or 5 are selected, the printer will automatically adjust the Y offset before prompting you to print the same pattern again.  If positions 2 or 4 are selected, the printer will automatically adjust the Y offset before prompting you to print the next pattern.
	</p>
	<p>
		Once you’ve achieved alignment at position 3, you’ve reached the target position. Next, we'll follow the same procedure two more times, using finer tolerances each time. After completing the third procedure, you will automatically be sent to the next step.
	</p>



	<br>
	<center>
		{# <span data-bind="text: 'Which bin is closest to having the sawtooth perfectly centered?', visible: $root.calibrationStep() < 1"></span> #}
		<span data-bind="text: 'At which position (1-5) are the horizontal lines most closely aligned?', visible: $root.calibrationStep() > -1"></span></center><br>
		<div style="font-size:20px;" data-bind="visible: $root.calibrationStep() === 0">Pattern 1: Coarse Adjustment</div>
		<div style="font-size:20px;"  data-bind="visible: $root.calibrationStep() === 1">Pattern 2: Medium Adjustment</div>
		<div style="font-size:20px;"  data-bind="visible: $root.calibrationStep() === 2">Pattern 3: Fine Adjustment</div>
		<div>

			<div style="width: 100%; margin:auto;vertical-align: middle; " data-bind="visible: $root.isDual">
				<div style="display: inline-block; width:75%">
					{# <img data-bind="attr: {'src': '/plugin/mgsetup/static/img/y-bin-zoom.png', 'width': '100%',} , visible: loginState.isUser && setupStep()==='15' && $root.calibrationStep() < 1" /> #}
					<img data-bind="attr: {'src': '/plugin/mgsetup/static/img/y-saw-zoom.jpg', 'width': '100%',} , visible: loginState.isUser && setupStep()==='15' && $root.calibrationStep() > -1" />
				</div>
				<div style="display: inline-block; width:20%; vertical-align: middle; ">
					<button style="width:100%; height:20%; " class="btngoBig" data-bind="enable: loginState.isUser && $root.lockButton() && $root.sawBinPrinted() && ($root.chosenSawBin() === 0 || $root.chosenSawBin() === 5), click: function() { $root.printSawBinConfirm(5) }">5</button>
					<br><button style="width:100%; height:20%; " class="btngoBig" data-bind="enable: loginState.isUser && $root.lockButton() && $root.sawBinPrinted() && ($root.chosenSawBin() === 0 || $root.chosenSawBin() === 4), click: function() { $root.printSawBinConfirm(4) }">4</button>
					<br><span data-bind="visible: $root.calibrationStep() < 2"><button style="width:100%; height:20%; " class="btngoBig" data-bind="enable: loginState.isUser && $root.lockButton() && $root.sawBinPrinted() && ($root.chosenSawBin() === 0 || $root.chosenSawBin() === 3), click: function() { $root.printSawBinConfirm(3) }">3</button></span><span data-bind="visible: $root.calibrationStep() === 2"><button style="width:100%; height:20%; " class="btngoBig" data-bind="enable: loginState.isUser && $root.lockButton() && $root.sawBinPrinted() && ($root.chosenSawBin() === 0 || $root.chosenSawBin() === 3), click: function() { $root.printSawBinConfirm(3); window.scroll(0,0) }">3</button></span>
					<br><button style="width:100%; height:20%; " class="btngoBig" data-bind="enable: loginState.isUser && $root.lockButton() && $root.sawBinPrinted() && ($root.chosenSawBin() === 0 || $root.chosenSawBin() === 2), click: function() { $root.printSawBinConfirm(2) }">2</button>
					<br><button style="width:100%; height:20%; " class="btngoBig" data-bind="enable: loginState.isUser && $root.lockButton() && $root.sawBinPrinted() && ($root.chosenSawBin() === 0 || $root.chosenSawBin() === 1), click: function() { $root.printSawBinConfirm(1) }">1</button>
				</div>
			</div>
		</div>


	</div>







{#                    
	88    ad8888ba,  
  ,d88   8P'    "Y8  
888888  d8           
	88  88,dd888bb,  
	88  88P'    `8b  
	88  88       d8  
	88  88a     a8P  
	88   "Y88888P"   
					 
	#}
	<div class="jog-panel" style="display: none;" data-bind="visible: loginState.isUser && setupStep()==='16'">
		<div class="fileupload-new thumbnail" style="width: 95%; margin:auto; " data-bind="visible: $root.isDual">
			<img data-bind="attr: {'src': $root.bothToolsPicture, 'width': '100%',} , visible: loginState.isUser && setupStep()==='16'" />
		</div><br>

		<h1 style="text-align:left;">Your First Print on T1</h1>
	<!--
	<p>
		<em>How to print Video</em>
	</p>
-->
<h3>Before printing, always make sure that the bed is clear of previous prints, and that the tips of the nozzles are clean.</h3>

<p>
	We've already sliced the same keychain as before for T1 - you should see 'mgkeychainT1.gco' with several buttons below it in the file menu. Press the <span class="icon-print"></span> icon to start the keychain printing on T1.
</p>
<img src="/plugin/mgsetup/static/img/mgkeychainT1gco.png" style="display:block;width::50%;margin-left:auto;margin-right:auto">


<p>
	Your printer will make sure that the Right Extruder (T1)/bed are heated correctly, and then start to print the keychain.  You can monitor your progress from the 'State' bar on the left, or from the 'Gcode Viewer' Tab. 
</p>

<br>
<h1 style="text-align:left;">Your First Dual Color Print</h1>
<p>
	Once your T1 keychain is complete, and your print bed is cleared, you can print with both extruders. We've also included a different keychain that makes use of both extruders - select "mgkeychainDual.gco" for printing to start that model.
	<img src="/plugin/mgsetup/static/img/mgkeychainDualgco.png" style="display:block;width::50%;margin-left:auto;margin-right:auto">





</p>



</div>




{# 
															   
88888888ba                            88                       
88      "8b                           88                       
88      ,8P                           88                       
88aaaaaa8P'  8b,dPPYba,   ,adPPYba,   88,dPPYba,    ,adPPYba,  
88""""""'    88P'   "Y8  a8"     "8a  88P'    "8a  a8P_____88  
88           88          8b       d8  88       d8  8PP"""""""  
88           88          "8a,   ,a8"  88b,   ,a8"  "8b,   ,aa  
88           88           `"YbbdP"'   8Y"Ybbd8"'    `"Ybbd8"'  
															   
															   
#}

{#                       
	88  888888888888  
  ,d88          ,8P'  
888888         d8"    
	88       ,8P'     
	88      d8"       
	88    ,8P'        
	88   d8"          
	88  8P'           
					  
	#}


	<div class="jog-panel" style="display: none;" data-bind="visible: loginState.isUser && setupStep()==='17'">
		<div class="fileupload-new thumbnail" style="width: 95%; margin:auto; " data-bind="visible: $root.isDual">
			<img data-bind="attr: {'src': $root.t0Picture, 'width': '100%',} , visible: loginState.isUser && setupStep()==='17'" />
		</div><br><br>




		<h1 style="text-align:left;">Automated Calibration Test</h1>
		<p style="text-align:left;">

			Click below to start the Automated Calibration Test. Over the next minute your printer will move and probe the bed to check for any calibration problems. You will automatically be sent to the next step after the test is complete. 

		</p>


		<!--<img src="/plugin/mgsetup/static/img/probeIntro.jpg" style="display:block;width::50%;margin-left:auto;margin-right:auto"><br><br>-->

		<center> <button style="" class="btngoBig" data-bind="enable:$root.lockButton() && loginState.isUser && !$root.autoCheckClicked() , click: function() { $root.checkProbe(); $root.adminAction('flushPrintActive') }">Start Automated Calibration Test</button></center>
		<br><br>






{#             
<div style="display:flex;float:left;disp"><div data-bind="visible: $root.probeStep()<2 "><i class="icon-check"></i></div><div data-bind="visible: $root.probeStep()>1 "><i class="icon-check"></i></div> <div data-bind="style: {fontWeight: $root.probeStep() < 2 ? 'bold':''}"> Detect Probe</div></div><br>

<div style="display:flex;"><div data-bind="visible: $root.probeStep()<3 "><i class="icon-check-empty"></i></div><div data-bind="visible: $root.probeStep()>2 "><i class="icon-check"></i></div> <div data-bind="style: {fontWeight: $root.probeStep() == 2 ? 'bold':''}"> Verify Probe Location</div></div><br>

<div style="display:flex;"><div data-bind="visible: $root.probeStep()<4 "><i class="icon-check-empty"></i></div><div data-bind="visible: $root.probeStep()>3 "><i class="icon-check"></i></div> <div data-bind="style: {fontWeight: $root.probeStep() == 3 ? 'bold':''}"> Check Probe Offset</div></div><br>

<div style="display:flex;"><div data-bind="visible: $root.probeStep()<5 "><i class="icon-check-empty"></i></div><div data-bind="visible: $root.probeStep()>4 "><i class="icon-check"></i></div> <div data-bind="style: {fontWeight: $root.probeStep() == 4 ? 'bold':''}"> Check Bed Level</div></div><br><br>
	#}





	<div style="width:80%;margin-left:auto;margin-right:auto;text-align:center;" >
		<div style="display:inline-block;width:24.25%;margin-left:auto;margin-right:auto;">
			<div data-bind="visible: $root.probeStep()<2 " style="text-align:center;">
				<i class="icon-check-empty" style="font-size:50px; color:#FF6E35;"></i>
			</div>
			<div data-bind="visible: $root.probeStep()>1 " style="text-align:center;">
				<i class="icon-check" style="font-size:50px; color:#FF6E35;"></i>
			</div>
			<div data-bind="style: {fontWeight: $root.probeStep() == 1 ? 'bold':''}"  style="text-align:center;">
				Detect <br /> Probe
			</div>
		</div>
		<div style="display:inline-block;width:24.25%;margin-left:auto;margin-right:auto;">
			<div data-bind="visible: $root.probeStep()<3 " style="text-align:center;">
				<i class="icon-check-empty" style="font-size:50px; color:#FF6E35;"></i>
			</div>
			<div data-bind="visible: $root.probeStep()>2 " style="text-align:center;"  style="text-align:center;">
				<i class="icon-check" style="font-size:50px; color:#FF6E35;"></i>
			</div>
			<div data-bind="style: {fontWeight: $root.probeStep() == 2 ? 'bold':''}"  style="text-align:center;">
				Verify <br /> Probe Location
			</div>
		</div>
		<div style="display:inline-block;width:24.25%;margin-left:auto;margin-right:auto;">
			<div data-bind="visible: $root.probeStep()<4 " style="text-align:center;">
				<i class="icon-check-empty" style="font-size:50px; color:#FF6E35;"></i>
			</div>
			<div data-bind="visible: $root.probeStep()>3 " style="text-align:center;">
				<i class="icon-check" style="font-size:50px; color:#FF6E35;"></i>
			</div>
			<div data-bind="style: {fontWeight: $root.probeStep() == 3 ? 'bold':''}"  style="text-align:center;">
				Check   <br /> Probe Offset
			</div>
		</div>
		<div style="display:inline-block;width:24.25%;margin-left:auto;margin-right:auto;">
			<div data-bind="visible: $root.probeStep()<5 " style="text-align:center;">
				<i class="icon-check-empty" style="font-size:50px; color:#FF6E35;"></i>
			</div>
			<div data-bind="visible: $root.probeStep()>4 " style="text-align:center;">
				<i class="icon-check" style="font-size:50px; color:#FF6E35;"></i>
			</div>
			<div data-bind="style: {fontWeight: $root.probeStep() == 4 ? 'bold':''}"  style="text-align:center;">
				Check  <br /> Bed Level
			</div>
		</div>


	</div>






	{# text: ($root.rearLeftMm() > 0 ? 'counter-clockwise.' : 'clockwise.')"></span><br><br> #}


</div>

{#                      
	88   ad88888ba   
  ,d88  d8"     "8b  
888888  Y8a     a8P  
	88   "Y8aaa8P"   
	88   ,d8"""8b,   
	88  d8"     "8b  
	88  Y8a     a8P  
	88   "Y88888P"   
					 
	#}

	<div class="jog-panel" style="display: none;" data-bind="visible: loginState.isUser && setupStep()==='18'">
		<div class="fileupload-new thumbnail" style="width: 95%; margin:auto; " data-bind="visible: $root.isDual">
			<img data-bind="attr: {'src': $root.t0Picture, 'width': '100%',} , visible: loginState.isUser && setupStep()==='18'" />
		</div><br><br>



		<h1 style="text-align:left;">Probe Electronic Failure</h1>


		<div data-bind="visible: $root.failedStep() <2">
			<p>
				Your printer's probe is either not responding to commands or failing the initial bed probe.  The probe body should glow red when the probe is retracted, and should cycle (extend and retract) several times when the printer first powers up.
			</p>



			<p>Check that the probe is connected to the printer via the 6-pin connector. 

				<br> <img src="/plugin/mgsetup/static/img/probeConnector.jpg" style="display:block;width::50%;margin-left:auto;margin-right:auto">


{#    
If it is connected and still not reacting, you may need to open the electronic case and make sure it is connected correctly. 
connected correctly inside the electronics case:<br> <img src="/plugin/mgsetup/static/img/probeRamboConnector.jpg" style="display:block;width::50%;margin-left:auto;margin-right:auto"><br> and at the probe body itself:.<br><br> 

#}

<p>Once you have verified the connection, and that the probe body indicator LED is lit, use the "Retest Probe" button to start the test. You should see the probe extend and retract. 
</p>

</div>

<div data-bind="visible: $root.failedStep() == 2">

	It looks like your probe failed to activate while testing at the edge of the bed.  Please confirm that the probe responds to the buttons below, and that it is actually positioned over the bed.

	If the X motor did not move correctly, or did not position the probe at the correct location, check that the X motor connectors are secure.

	If the probe is above the bed, but the bed did not activate the probe, please go to the Control tab and use the manual jog controls to verify that the bed can move all the way up to the probe and/or nozzle.

</div>

{# <div data-bind="visible: $root.failedStep() == 3">

It looks like your probe failed to activate while testing in 

</div> #}

<center> <button style="" class="btnstay" data-bind="enable: loginState.isUser , click: function() { $root.probeAction('retest') }">Retest Probe</button></center>


<p>
	If the probe is extending and retracting on its own, you can click on "Return to Automated Calibration Test" to go back to the main testing page. If the probe does not extend/retract, please contact MakerGear Support.
</p>




{#       
 <button style="width:49.5%;display:inline-block" class="btngoBig" data-bind="enable: loginState.isUser , click: function() { $root.probeAction('extend') }">Extend</button>
 <button style="width:49.5%;display:inline-block" class="btngoBig" data-bind="enable: loginState.isUser , click: function() { $root.probeAction('retract') }">Retract</button>
 <button style="width:100%;" class="btngoBig" data-bind="enable: loginState.isUser , click: function() { $root.probeAction('selftest') }">Initiate Self-Test</button><br>
 <button style="width:100%;" class="btngoBig" data-bind="enable: loginState.isUser , click: function() { $root.probeAction('resetalarm') }">Reset Alarm State</button> If the probe body is blinking red, click this to Reset the alarm.<br><br>
 #}


 <center> <button style="" class="btngoBig" data-bind="enable: loginState.isUser , click: function() { $root.setupStep('17');window.scroll(0,0) }">Return to Automated Calibration Test</button></center>





</div>

{#                      
	88   ad88888ba   
  ,d88  d8"     "88  
888888  8P       88  
	88  Y8,    ,d88  
	88   "PPPPPP"88  
	88           8P  
	88  8b,    a8P   
	88  `"Y8888P'    
					 
	#}

	<div class="jog-panel" style="display: none;" data-bind="visible: loginState.isUser && setupStep()==='19'">
		<div class="fileupload-new thumbnail" style="width: 95%; margin:auto; " data-bind="visible: $root.isDual">
			<img data-bind="attr: {'src': $root.t0Picture, 'width': '100%',} , visible: loginState.isUser && setupStep()==='19'" />
		</div><br><br>




		<h1 style="text-align:left;">Probe / Nozzle Failure</h1>
		<p style="text-align:left;">

			It looks like your probe failed to activate while testing in the middle of the bed.  This is likely caused by the nozzle being too low relative to the probe, preventing the probe tip from touching the bed.

		</p>



		Probe Fail 3: Probing Failed in Middle of Bed

		<br><br>
		Probe extended, below the tip of the nozzle:<br>
		<img src="/plugin/mgsetup/static/img/probeExtended.jpg" style="display:block;width::50%;margin-left:auto;margin-right:auto"><br><br>
		Probe retracted, above the tip of the nozzle:<br>
		<img src="/plugin/mgsetup/static/img/probeRetracted.jpg" style="display:block;width::50%;margin-left:auto;margin-right:auto"><br><br>

		Please check that the nozzle is above the tip of the probe when extended as show above.  The buttons below will let you extend and retract the probe tip:<br><br>


		<button style="width:49.5%;display:inline-block" class="btngoBig" data-bind="enable: loginState.isUser , click: function() { $root.probeAction('extend') }">Extend</button>
		<button style="width:49.5%;display:inline-block" class="btngoBig" data-bind="enable: loginState.isUser , click: function() { $root.probeAction('retract') }">Retract</button>


{#
 <button style="width:100%;" class="btngoBig" data-bind="enable: loginState.isUser , click: function() { $root.probeAction('extend') }">Extend</button><br>
 <button style="width:100%;" class="btngoBig" data-bind="enable: loginState.isUser , click: function() { $root.probeAction('retract') }">Retract</button><br>
 #}

 <p>
 	Once you have confirmed or adjusted the nozzle position, click here to go to the Probe Offset Adjustment:
 </p>
 <center>
 	<button style="" class="btngoBig" data-bind="enable: loginState.isUser , click: function() { $root.setupStep('17');window.scroll(0,0) }">Return to Probe Autocheck</button> </center>

 	<br>If the nozzle is already above the tip of the probe when extended, please contact MakerGear Support.




 </div>
{#                              
 ad888888b,     ,a8888a,     
d8"     "88   ,8P"'  `"Y8,   
		a8P  ,8P        Y8,  
	 ,d8P"   88          88  
   a8P"      88          88  
 a8P'        `8b        d8'  
d8"           `8ba,  ,ad8'   
88888888888     "Y8888P"     
							 
#}

<div class="jog-panel" style="display: none;" data-bind="visible: loginState.isUser && setupStep()==='20'">
	<div class="fileupload-new thumbnail" style="width: 95%; margin:auto; " data-bind="visible: $root.isDual">
		<img data-bind="attr: {'src': $root.t0Picture, 'width': '100%',} , visible: loginState.isUser && setupStep()==='20'" />
	</div><br>

	<h1 style="text-align:left">Adjust Probe Offset</h1>





	<p>

		<i class="icon-fire" style="float:left;font-size:30px;color:red;margin-right:5px;"></i><div data-bind="visible:!$root.isDual()">
			The printer's extruder and build platform are hot - do not touch them!
		</div>
		<div data-bind="visible: $root.isDual()">
			The printer's Left Extruder (T0) and build platform are hot - do not touch them! 
		</div>

	</p>

	<p>
		Your probe-to-nozzle offset is not set correctly. The steps below will guide you through adjusting the Probe Offset with our standard "Zigzag" pattern to make sure you have the perfect starting height.
	</p>

	<p>
		Clicking the "Print Zigzag Pattern" button will trigger the following printer tasks:
	</p>

	<ol>
		<li>Start to heat the extruder and build platform to their target temperatures — you will see actual temperatures shown in red and target temperatures shown in black directly below the "Print Zigzag Pattern" button.
			<li>Move components to their home positions.
				<li>Move extruder to its purge position.
					<li>Purge and wipe the extruder on the lower right-hand corner of the build plate.
						<li>Print a Zigzag pattern on the center of the build plate.
							<li>Move components to their final position.
							</ol>


							<p>
								When you are ready to begin this process, click "Print Zigzag Pattern":
							</p>
							<br>

							<center><button class="btnstay" data-bind="visible: !$root.rrf(), enable: !$root.stepTwentyFirstWiggleClicked(), click: function() { $root.printWiggleConfirm('probe'); $root.enableLockedButton(8000) }">Print Zigzag Pattern</button><button class="btnstay" data-bind="visible: $root.rrf(), enable: !$root.stepTwentyFirstWiggleClicked(), click: function() { $root.printWiggleConfirm('probeRrfPLA'); $root.enableLockedButton(8000) }">Print Zigzag Pattern</button></center><br>



							<div style="margin:auto; display:block; padding:4px; border:8px solid #000; border-radius:10px; text-align:center; width:60%;">
								<div style="display:inline-block; vertical-align:middle; width:25%; text-align:center; ">
									<img data-bind="attr: {'src': '/plugin/mgsetup/static/img/thermometer.png', 'width': '80%',} , visible: loginState.isUser " />
								</div>

								<div style="width: 70%; display:inline-block; vertical-align:middle; text-align:left;">
									Bed Temperature: <span data-bind="text: $root.displayBedTemp(), style: { color: (parseFloat($root.displayBedTemp()) < 40) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayBedTempTarget()"></span><br>
									<div data-bind="visible: !$root.isDual()">
										Extruder Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
									</div>
									<div data-bind="visible: $root.isDual()">
										Extruder 0 Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
										Extruder 1 Temperature: <span data-bind="text: $root.displayTool1Temp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayTool1TempTarget()"></span><br>
									</div>
								</div>
							</div>

							Once the Zigzag pattern has printed, and the printer has fully parked, you can use your tweezers to remove any material on the side of the bed. Next, carefully remove the Zigzag pattern by using your tweezers to lift it off the bed from the rear left "tail".  The  Zigzag pattern will peel off of the build plate differently according to the printer's current starting height.<br><br>



							<video controls id="filamentVideo1" class="video-js"  preload="none"     data-setup='{"fluid": true}' data-bind="attr: { autoplay: 'true', loop: 'true' , poster:'/plugin/mgsetup/static/img/wiggleposter.jpg'}, if:  setupStep() === '20'" onclick="this.paused ? this.play() : this.pause();">
								<source src="/plugin/mgsetup/video/wiggleMiddle.mp4" type='video/mp4'>
									<p class="vjs-no-js">
										To view this video please enable JavaScript, and consider upgrading to a web browser that
										<a href="http://videojs.com/html5-video-support/" target="_blank">supports HTML5 video</a>
									</p>
								</video>

								<br />


								<p >
									<strong style="font-size:20px;" >Which of the following options best describes your Zigzag pattern? Click the photos to zoom in.</strong>
								</p>



								<table>
									<tr>
										<td style="width:33%;padding:10px;border-bottom:0px;border-top:0px;border-left:2px; border-right:2px;border:solid #ddd;">
											<a href="/plugin/mgsetup/static/img/10.jpg" data-lightbox="step8"> <img data-bind="attr: {'src': '/plugin/mgsetup/static/img/10.jpg', 'width': '100%',} , visible: loginState.isUser && setupStep()==='20'" /></a>

										</td>

										<td style="width:33%;padding:10px;border-bottom:0px;border-top:0px;border-left:2px; border-right:2px;border:solid #ddd;">

											<a href="/plugin/mgsetup/static/img/11.jpg" data-lightbox="step8"><img data-bind="attr: {'src': '/plugin/mgsetup/static/img/11.jpg', 'width': '100%',} , visible: loginState.isUser && setupStep()==='20'" /></a>

										</td>




										<td style="width:33%;padding:10px;border-bottom:0px;border-top:0px;border-left:2px; border-right:2px;border:solid #ddd;">

											<a href="/plugin/mgsetup/static/img/12.jpg" data-lightbox="step8"> <img data-bind="attr: {'src': '/plugin/mgsetup/static/img/12.jpg', 'width': '100%',} , visible: loginState.isUser && setupStep()==='20'" /></a>
										</td>

									</tr>




									<tr>

										<td style="border-left:2px;border-right:2px;border-bottom:0px;border-top:0px;border:solid #ddd;">
											If the  Zigzag pattern peels off with fifty percent of the zigzag pattern as loose segments and fifty percent as connected segments, you have <strong>a perfect Probe Offset</strong>. Click below to proceed to the next step. 
											<br />




											<br />

											<strong>NOTE:</strong> If the last few segments break off from the rest of the strand, don't worry - just use your tweezers to pull them off the bed. 



										</td>

										<td style="border-left:2px;border-right:2px;border-bottom:0px;border-top:0px;border:solid #ddd;">
											If the Zigzag pattern peels-off as an even strand made with little to no small section of connected segments at the end, <strong>the Probe Offset is too low</strong>. Click below to adjust the Probe Offset and print a new zigzag. 
		   <!-- <br />
			<br />

			<strong>NOTE:</strong> If the last few segments break off from the rest of the strand, don't worry - just use your tweezers to pull them off the bed. -->
			<br />
			<br />
			<a href="/plugin/mgsetup/static/img/stringZigzag.jpg" data-lightbox="step8-1">Click here to see other examples of zigzags printed too low.</a>



		</td>
		<td style="border-left:2px;border-right:2px;border-bottom:0px;border-top:0px;border:solid #ddd;">

			If the Zigzag pattern peels-off in one solid piece, with most/all segments of the zig-zag pattern connected, 
			<strong>the Probe Offset is too high</strong>. Click below to adjust the Probe Offset and print a new zigzag. 
			<br />
			<br />
			<a href="/plugin/mgsetup/static/img/squishZigzag.jpg" data-lightbox="step8-2">Click here to see other examples of zigzags printed too high.</a>



		</td>
	</tr>

	<tr>

		<td style="border-bottom:0px;border-top:0px;border-left:2px; border-right:2px;border:solid #ddd;min-height:40px;">
			
			<center><button style="width:100%;" class="btngoBig" data-bind="visible: !$root.rrf(), enable: $root.stepTwentyFirstWiggleClicked() && $root.lockButton(), click: function() { $root.setupSetStartingHeight('probe'); window.scroll(0,0) }">Next Step<br /></button><button style="width:100%;" class="btngoBig" data-bind="visible: $root.rrf(), enable: $root.stepTwentyFirstWiggleClicked() && $root.lockButton(), click: function() { $root.setupSetStartingHeight('2-maintenance-rrf'); window.scroll(0,0) }">Next Step<br /></button></center>

			<!--Too far-->
		</td>


		<td style="border-bottom:0px;border-top:0px;border-left:2px; border-right:2px;border:solid #ddd;min-height:40px;">
			<div data-bind="visible: $root.stepTwentyShowFineAdjustments()==false"><br>
				<center><button class="btnstay" data-bind="visible: $root.stepTwentyShowFineAdjustments()==false && !$root.rrf(), enable: $root.stepTwentyFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm('probe',-0.04); $root.enableLockedButton(10000) }">Adjust and Print</button><button class="btnstay" data-bind="visible: $root.stepTwentyShowFineAdjustments()==false && $root.rrf(), enable: $root.stepTwentyFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm('probeRrfPLA',-0.04); $root.enableLockedButton(10000) }">Adjust and Print</button></center></div>
				
				<center><button class="btnstay" data-bind="visible: $root.stepTwentyShowFineAdjustments()==true && !$root.rrf(), enable: $root.stepTwentyFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm('probe',-0.04); $root.enableLockedButton(10000) }">Large Adjustment (0.04 mm)</button><button class="btnstay" data-bind="visible: $root.stepTwentyShowFineAdjustments()==true && $root.rrf(), enable: $root.stepTwentyFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm('probeRrfPLA',-0.04); $root.enableLockedButton(10000) }">Large Adjustment (0.04 mm)</button></center><br>
				
				<center><button class="btnstay" data-bind="visible: $root.stepTwentyShowFineAdjustments()==true && !$root.rrf(), enable: $root.stepTwentyFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm('probe',-0.02); $root.enableLockedButton(10000) }">Medium Adjustment (0.02 mm)</button><button class="btnstay" data-bind="visible: $root.stepTwentyShowFineAdjustments()==true && $root.rrf(), enable: $root.stepTwentyFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm('probeRrfPLA',-0.02); $root.enableLockedButton(10000) }">Medium Adjustment (0.02 mm)</button></center><br>
				
				<center><button class="btnstay" data-bind="visible: $root.stepTwentyShowFineAdjustments()==true && !$root.rrf(), enable: $root.stepTwentyFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm('probe',-0.01); $root.enableLockedButton(10000) }">Fine Adjustment (0.01 mm)</button><button class="btnstay" data-bind="visible: $root.stepTwentyShowFineAdjustments()==true && $root.rrf(), enable: $root.stepTwentyFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm('probeRrfPLA',-0.01); $root.enableLockedButton(10000) }">Fine Adjustment (0.01 mm)</button></center>

			</td>


			<td style="border-bottom:0px;border-top:0px;border-left:2px; border-right:2px;border:solid #ddd;min-height:40px;">
				<div data-bind="visible: $root.stepTwentyShowFineAdjustments()==false"><br>
					<center><button class="btnstay" data-bind="visible: $root.stepTwentyShowFineAdjustments()==false && !$root.rrf(), enable: $root.stepTwentyFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm('probe',0.04); $root.enableLockedButton(10000) }">Adjust and Print</button><button class="btnstay" data-bind="visible: $root.stepTwentyShowFineAdjustments()==false && $root.rrf(), enable: $root.stepTwentyFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm('probeRrfPLA',0.04); $root.enableLockedButton(10000) }">Adjust and Print</button></center></div>
					
					<center><button class="btnstay" data-bind="visible: $root.stepTwentyShowFineAdjustments()==true && !$root.rrf(), enable: $root.stepTwentyFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm('probe',0.04); $root.enableLockedButton(10000) }">Large Adjustment (0.04 mm)</button><button class="btnstay" data-bind="visible: $root.stepTwentyShowFineAdjustments()==true && $root.rrf(), enable: $root.stepTwentyFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm('probeRrfPLA',0.04); $root.enableLockedButton(10000) }">Large Adjustment (0.04 mm)</button></center><br>
					
					<center><button class="btnstay" data-bind="visible: $root.stepTwentyShowFineAdjustments()==true && !$root.rrf(), enable: $root.stepTwentyFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm('probe',0.02); $root.enableLockedButton(10000) }">Medium Adjustment (0.02 mm)</button><button class="btnstay" data-bind="visible: $root.stepTwentyShowFineAdjustments()==true && $root.rrf(), enable: $root.stepTwentyFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm('probeRrfPLA',0.02); $root.enableLockedButton(10000) }">Medium Adjustment (0.02 mm)</button></center><br>
					
					<center><button class="btnstay" data-bind="visible: $root.stepTwentyShowFineAdjustments()==true && !$root.rrf(), enable: $root.stepTwentyFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm('probe',0.01); $root.enableLockedButton(10000) }">Fine Adjustment (0.01 mm)</button><button class="btnstay" data-bind="visible: $root.stepTwentyShowFineAdjustments()==true && $root.rrf(), enable: $root.stepTwentyFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm('probeRrfPLA',0.01); $root.enableLockedButton(10000) }">Fine Adjustment (0.01 mm)</button></center>
					<!--Too Close-->
				</td>
				<tr>

				</table>
				<button class="btnstay" data-bind="visible: $root.stepTwentyShowFineAdjustments()==true && !$root.rrf(), enable: $root.stepTwentyFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm('probe'); $root.enableLockedButton(10000) }">Print This Zigzag Again</button><button class="btnstay" data-bind="visible: $root.stepTwentyShowFineAdjustments()==true && $root.rrf(), enable: $root.stepTwentyFirstWiggleClicked() && $root.lockButton(), click: function() { $root.printWiggleConfirm('probeRrfPLA'); $root.enableLockedButton(10000) }">Print This Zigzag Again</button><br>

				<input type="checkbox" data-bind="checked: $root.stepTwentyShowFineAdjustments" /> Show Advanced Options.







			</div>

{#                      
 ad888888b,      88  
d8"     "88    ,d88  
		a8P  888888  
	 ,d8P"       88  
   a8P"          88  
 a8P'            88  
d8"              88  
88888888888      88  
					 
#}

<div class="jog-panel" style="display: none;" data-bind="visible: loginState.isUser && setupStep()==='21'">
	<div class="fileupload-new thumbnail" style="width: 95%; margin:auto; " data-bind="visible: $root.isDual">
		<img data-bind="attr: {'src': $root.t0Picture, 'width': '100%',} , visible: loginState.isUser && setupStep()==='21'" />
	</div><br><br>



	<h1 style="text-align:left;">Assisted Bed Leveling</h1>
	<p style="text-align:left;">

		The Automated Calibration Test detected that your bed is further out of level than we recommend printing with.  Using the example images below, follow the steps below to level the bed using the included 2 mm Allen key, then click "Recheck Bed Level".

	</p>
	{# <div data-bind="visible: bedLevelResults().length > 0"> #}
{# The front left corner needs to move <span data-bind="text: $root.frontLeftMm(), style: { color: 'green'}"></span> mm or <b><span data-bind="text: $root.frontLeftDegrees(), style: { color: 'green'}"></span>°</b> <span data-bind="text: ($root.frontLeftMm() > 0 ? 'counter-clockwise.' : 'clockwise.')"></span><br><br>
The front right corner needs to move <span data-bind="text: $root.frontRightMm(), style: { color: 'green'}"></span> mm or <b><span data-bind="text: $root.frontRightDegrees(), style: { color: 'green'}"></span>°</b> <span data-bind="text: ($root.frontRightMm() > 0 ? 'counter-clockwise.' : 'clockwise.')"></span><br><br>
The rear left corner needs to move <span data-bind="text: $root.rearLeftMm(), style: { color: 'green'}"></span> mm or <b><span data-bind="text: $root.rearLeftDegrees(), style: { color: 'green'}"></span>°</b> <span data-bind="text: ($root.rearLeftMm() > 0 ? 'counter-clockwise.' : 'clockwise.')"></span><br><br>
The rear right corner needs to move <span data-bind="text: $root.rearRightMm(), style: { color: 'green'}"></span> mm or <b><span data-bind="text: $root.rearRightDegrees(), style: { color: 'green'}"></span>°</b> <span data-bind="text: ($root.rearRightMm() > 0 ? 'counter-clockwise.' : 'clockwise.')"></span><br><br> #}


{# <div data-bind="visible:$root.probeLevelFirstCheckClicked() && $root.probeLevelActiveCorner() == 1">
<span style="font-size:18px;" data-bind="html: $root.frontLeftString()"></span><br><br><div data-bind="visible: $root.frontLeftMm() > 0"><img src="/plugin/mgsetup/static/img/frontleft-cw.png" style="display:block;width:50%;margin-left:auto;margin-right:auto"></div><div data-bind="visible: $root.frontLeftMm() < 0"><img src="/plugin/mgsetup/static/img/frontleft-ccw.png" style="display:block;width:50%;margin-left:auto;margin-right:auto"></div><img src="/plugin/mgsetup/static/img/bedinset-frontleft.png" style="display:block;width:40%;margin-left:auto;margin-right:auto"><br></div>

<div data-bind="visible:$root.probeLevelFirstCheckClicked() && $root.probeLevelActiveCorner() == 2">
<span style="font-size:18px;"  data-bind="html: $root.frontRightString()"></span><br><br><div data-bind="visible: $root.frontRightMm() > 0"><img src="/plugin/mgsetup/static/img/frontright-cw.png" style="display:block;width:50%;margin-left:auto;margin-right:auto"></div><div data-bind="visible: $root.frontRightMm() < 0"><img src="/plugin/mgsetup/static/img/frontright-ccw.png" style="display:block;width:50%;margin-left:auto;margin-right:auto"></div><img src="/plugin/mgsetup/static/img/bedinset-frontright.png" style="display:block;width:40%;margin-left:auto;margin-right:auto"><br></div>

<div data-bind="visible:$root.probeLevelFirstCheckClicked() && $root.probeLevelActiveCorner() == 3">
<span style="font-size:18px;"  data-bind="html: $root.rearLeftString()"></span><br><br><div data-bind="visible: $root.rearLeftMm() > 0"><img src="/plugin/mgsetup/static/img/rearleft-cw.png" style="display:block;width:50%;margin-left:auto;margin-right:auto"></div><div data-bind="visible: $root.rearLeftMm() < 0"><img src="/plugin/mgsetup/static/img/rearleft-ccw.png" style="display:block;width:50%;margin-left:auto;margin-right:auto"></div><img src="/plugin/mgsetup/static/img/bedinset-rearleft.png" style="display:block;width:40%;margin-left:auto;margin-right:auto"><br></div>

<div data-bind="visible:$root.probeLevelFirstCheckClicked() && $root.probeLevelActiveCorner() == 4">
	<span style="font-size:18px;"  data-bind="html: $root.rearRightString()"></span><br><br><div data-bind="visible: $root.rearRightMm() > 0"><img src="/plugin/mgsetup/static/img/rearright-cw.png" style="display:block;width:50%;margin-left:auto;margin-right:auto"></div><div data-bind="visible: $root.rearRightMm() < 0"><img src="/plugin/mgsetup/static/img/rearright-ccw.png" style="display:block;width:50%;margin-left:auto;margin-right:auto"></div><img src="/plugin/mgsetup/static/img/bedinset-rearright.png" style="display:block;width:40%;margin-left:auto;margin-right:auto"><br></div> #}
	{# <center> #}
		{# <button class="btnstay" data-bind="enable:$root.lockButton() && $root.probeLevelFirstCheckClicked() && $root.probeLevelActiveCorner() > 1, click: function() { $root.probeLevelActiveCorner($root.probeLevelActiveCorner() - 1) }">Previous Corner</button> #}
{# <button class="btnstay" data-bind="visible: !$root.lastCorner(), enable:$root.lockButton() && $root.probeLevelFirstCheckClicked() && $root.probeLevelActiveCorner() < 5, click: function() { $root.probeLevelAssist('next'); $root.enableLockedButton(3000) }">Next Corner</button><button class="btnstay" data-bind="visible: $root.lastCorner(), enable:$root.lockButton() && $root.probeLevelFirstCheckClicked() && $root.probeLevelActiveCorner() < 5, click: function() { $root.probeLevelAssist('next'); $root.enableLockedButton(60000) }">Recheck Bed Level</button>
</center><br> #}
<br>
Although the bed leveling screws are accessed from the bottom of the mounting plate, all instructions are given as seen from above, with the user looking downward at the bed. As such, clockwise rotation of each bed leveling screw lowers the corresponding corner, and counter-clockwise rotation raises it.<br><br>

<table class="choiceTable">
	<tr>
		<td>
			<center>
				As seen from above:
			</center>
		</td>
		<td>
			<center>
				Where to access each leveling screw on the bottom of the mounting plate:
			</center>
		</td>
	</tr>
	<tr>
		<td>
			<img src="/plugin/mgsetup/static/img/topside-demo.jpg" style="display:block;width:95%;margin-left:auto;margin-right:auto">
		</td>
		<td>
			<img src="/plugin/mgsetup/static/img/underside-noarrow.jpg" style="display:block;width:95%;margin-left:auto;margin-right:auto">
		</td>
	</tr>
</table>
<br>
<hr>

<div data-bind="visible:$root.bedAdjustmentRounds()>1">
	<center>During this adjustment you will fine-tune the bed level.</center>
</div>
<br><br>



<div data-bind="visible:$root.probeLevelFirstCheckClicked() && $root.probeLevelActiveCorner() == 1">
	<span style="font-size:18px;" data-bind="html: $root.frontLeftString()"></span>
	<br><br>
	<table style="width:100%">
		<tr>
			<td>
				<div data-bind="visible: $root.frontLeftMm() > 0">
					<img src="/plugin/mgsetup/static/img/frontleft-2-cw.png" style="display:block;width:95%;margin-left:auto;margin-right:auto">
				</div>
				<div data-bind="visible: $root.frontLeftMm() < 0">
					<img src="/plugin/mgsetup/static/img/frontleft-2-ccw.png" style="display:block;width:95%;margin-left:auto;margin-right:auto">
				</div>
			</td>
			<td>
				<img src="/plugin/mgsetup/static/img/bedinset-frontleft.png" style="display:block;width:95%;margin-left:auto;margin-right:auto">
			</td>
		</tr>
	</table>
</div>

<div data-bind="visible:$root.probeLevelFirstCheckClicked() && $root.probeLevelActiveCorner() == 2">
	<span style="font-size:18px;"  data-bind="html: $root.frontRightString()"></span>
	<br><br>
	<table style="width:100%">
		<tr>
			<td>
				<div data-bind="visible: $root.frontRightMm() > 0">
					<img src="/plugin/mgsetup/static/img/frontright-2-cw.png" style="display:block;width:95%;margin-left:auto;margin-right:auto">
				</div>
				<div data-bind="visible: $root.frontRightMm() < 0">
					<img src="/plugin/mgsetup/static/img/frontright-2-ccw.png" style="display:block;width:95%;margin-left:auto;margin-right:auto">
				</div>
			</td>
			<td>
				<img src="/plugin/mgsetup/static/img/bedinset-frontright.png" style="display:block;width:95%;margin-left:auto;margin-right:auto">
			</td>
		</tr>
	</table>
</div>

<div data-bind="visible:$root.probeLevelFirstCheckClicked() && $root.probeLevelActiveCorner() == 3">
	<span style="font-size:18px;"  data-bind="html: $root.rearLeftString()"></span>
	<br><br>
	<table style="width:100%">
		<tr>
			<td>
				<div data-bind="visible: $root.rearLeftMm() > 0">
					<img src="/plugin/mgsetup/static/img/rearleft-2-cw.png" style="display:block;width:95%;margin-left:auto;margin-right:auto">
				</div>
				<div data-bind="visible: $root.rearLeftMm() < 0">
					<img src="/plugin/mgsetup/static/img/rearleft-2-ccw.png" style="display:block;width:95%;margin-left:auto;margin-right:auto">
				</div>
			</td>
			<td>
				<img src="/plugin/mgsetup/static/img/bedinset-rearleft.png" style="display:block;width:95%;margin-left:auto;margin-right:auto">
			</td>
		</tr>
	</table>
</div>

<div data-bind="visible:$root.probeLevelFirstCheckClicked() && $root.probeLevelActiveCorner() == 4">
	<span style="font-size:18px;"  data-bind="html: $root.rearRightString()"></span>
	<br><br>
	<table style="width:100%">
		<tr>
			<td>
				<div data-bind="visible: $root.rearRightMm() > 0">
					<img src="/plugin/mgsetup/static/img/rearright-2-cw.png" style="display:block;width:95%;margin-left:auto;margin-right:auto">
				</div>
				<div data-bind="visible: $root.rearRightMm() < 0">
					<img src="/plugin/mgsetup/static/img/rearright-2-ccw.png" style="display:block;width:95%;margin-left:auto;margin-right:auto">
				</div>
			</td>
			<td>
				<img src="/plugin/mgsetup/static/img/bedinset-rearright.png" style="display:block;width:95%;margin-left:auto;margin-right:auto">
			</td>
		</tr>
	</table>
</div>
<br>

<center>
	{# <button class="btnstay" data-bind="enable:$root.lockButton() && $root.probeLevelFirstCheckClicked() && $root.probeLevelActiveCorner() > 1, click: function() { $root.probeLevelActiveCorner($root.probeLevelActiveCorner() - 1) }">Previous Corner</button> #}
	<button class="btnstay" data-bind="visible: !$root.lastCorner(), enable:$root.lockButton() && $root.probeLevelFirstCheckClicked() && $root.probeLevelActiveCorner() < 5 && $root.probeLevelActiveCorner() > 0, click: function() { $root.probeLevelAssist('next'); $root.enableLockedButton(3000) }">Next Corner</button><button class="btnstay" data-bind="visible: $root.lastCorner(), enable:$root.lockButton() && $root.probeLevelFirstCheckClicked() && $root.probeLevelActiveCorner() < 5, click: function() { $root.probeLevelAssist('next'); $root.enableLockedButton(60000) }">Recheck Bed Level</button>
</center><br> 

<hr><br>
<br>

{# </div> #}



<div data-bind="visible: !$root.hideDebug() ">
	This div is only visible with Show Debug enabled.
	The first run will home:<br><center>
		<button class="btnstay" data-bind="enable:$root.lockButton() && !$root.probeLevelFirstCheckClicked(), click: function() { $root.probeLevelAssist(0); $root.enableLockedButton(10000) }">Run First Bed Check</button><br><br></center>
	</div>

	<div data-bind="visible: !$root.hideDebug() ">
		<h3>3D Bed View</h3>
		<div id="bedPreviewDiv">

		</div>
		<div data-bind="visible: !$root.hideDebug() && bedLevelResults().length > 0">
			<button class="arrowbtn" data-bind="visible: loginState.isUser, click: function() {$root.selectPreview('first')}" style="float:left;"><i class="icon-circle-arrow-left"></i><i class="icon-circle-arrow-left"></i></button><button class="arrowbtn" data-bind="visible: loginState.isUser, click: function() {$root.selectPreview('previous')}" style="float:left;"><i class="icon-circle-arrow-left"></i></button><button class="arrowbtn" data-bind="visible: loginState.isUser, click: function() {$root.selectPreview('last')}" style="float:right;"><i class="icon-circle-arrow-right"></i><i class="icon-circle-arrow-right"></i></button><button class="arrowbtn" data-bind="visible: loginState.isUser, click: function() {$root.selectPreview('next')}" style="float:right;"><i class="icon-circle-arrow-right"></i></button></div>
			<br><br><br></div>
			<hr>


{# <div data-bind="visible: bedLevelResults().length > 0">
{# The front left corner needs to move <span data-bind="text: $root.frontLeftMm(), style: { color: 'green'}"></span> mm or <b><span data-bind="text: $root.frontLeftDegrees(), style: { color: 'green'}"></span>°</b> <span data-bind="text: ($root.frontLeftMm() > 0 ? 'counter-clockwise.' : 'clockwise.')"></span><br><br>
The front right corner needs to move <span data-bind="text: $root.frontRightMm(), style: { color: 'green'}"></span> mm or <b><span data-bind="text: $root.frontRightDegrees(), style: { color: 'green'}"></span>°</b> <span data-bind="text: ($root.frontRightMm() > 0 ? 'counter-clockwise.' : 'clockwise.')"></span><br><br>
The rear left corner needs to move <span data-bind="text: $root.rearLeftMm(), style: { color: 'green'}"></span> mm or <b><span data-bind="text: $root.rearLeftDegrees(), style: { color: 'green'}"></span>°</b> <span data-bind="text: ($root.rearLeftMm() > 0 ? 'counter-clockwise.' : 'clockwise.')"></span><br><br>
The rear right corner needs to move <span data-bind="text: $root.rearRightMm(), style: { color: 'green'}"></span> mm or <b><span data-bind="text: $root.rearRightDegrees(), style: { color: 'green'}"></span>°</b> <span data-bind="text: ($root.rearRightMm() > 0 ? 'counter-clockwise.' : 'clockwise.')"></span><br><br> #}
<div data-bind="visible: !$root.hideDebug()">
	<table class="choiceTable">
		<tr>
			<td class="buttonCell">Front Left</td>
			<td class="buttonCell">Front Right</td>
			<td class="buttonCell">Rear Left</td>
			<td class="buttonCell">Rear Right</td>
		</tr>

		<tr>
			<td class="buttonCell"><span data-bind="text: $root.frontLeftDisplayMm()"></span></td>
			<td class="buttonCell"><span data-bind="text: $root.frontRightDisplayMm()"></span></td>
			<td class="buttonCell"><span data-bind="text: $root.rearLeftDisplayMm()"></span></td>
			<td class="buttonCell"><span data-bind="text: $root.rearRightDisplayMm()"></span></td>


		</tr>


	</table>
</div>









{# 
<div data-bind="visible: bedLevelResults().length === 0"><b>
No data yet!  Click "Run First Bed Check" to acquire the first set of measurements.</b><br><br></div>

The second run will only update the bed level data:<br><center>
<button class="btnstay" data-bind="enable:$root.lockButton() && $root.probeLevelFirstCheckClicked() && $root.probeLevelActiveCorner() == 5, click: function() { $root.probeLevelAssist('next'); $root.enableLockedButton(10000) }">Check Again</button><br><br></center>

<br><br><br>Once all four corners no longer require adjustment, click "Load Filament" to proceed.
<button style="width:100%;" class="btngoBig" data-bind="enable: loginState.isUser && ($root.zLevelError() != undefined) && ($root.zLevelError() < 0.5) , click: function() { $root.goTo('3','22') ; $root.probeHomeOffsetAdjust() }">Load Filament</button> #}


</div>


{#                           
 ad888888b,   ad888888b,  
d8"     "88  d8"     "88  
		a8P          a8P  
	 ,d8P"        ,d8P"   
   a8P"         a8P"      
 a8P'         a8P'        
d8"          d8"          
88888888888  88888888888  
						  
#}

{# first print with probe #}


<div class="jog-panel" style="display: none;" data-bind="visible: loginState.isUser && setupStep()==='22'">

	<div class="fileupload-new thumbnail" style="width: 95%; margin:auto; " data-bind="visible: $root.isDual">
		<img data-bind="attr: {'src': $root.bothToolsPicture, 'width': '100%',} , visible: loginState.isUser && setupStep()==='22'" />
	</div><br>


	<h1 style="text-align:left;">Your First Print</h1>
	


	<div data-bind="visible: !$root.isDual()">

		<h3>Before printing, always make sure that the bed is clear of previous prints, and that the tips of the nozzle is clean.</h3>

		<p style="margin-top:21px;">
			In the file menu to the left, you should see 'mgkeychain.gco' with several buttons below it. Press the <span class="icon-print"></span> icon to start your first print.
		</p>
		<img src="/plugin/mgsetup/static/img/gcode.png" style="display:block;width::50%;margin-left:auto;margin-right:auto;margin-top:21px;"">
		</div>
		<div data-bind="visible: $root.isDual()">

			<h3>Before printing, always make sure that the bed is clear of previous prints, and that the tips of the nozzles are clean.</h3>

			<p style="margin-top:21px;">
				In the file menu to the left, you should see 'mgkeychain-dual.gco' with several buttons below it. Press the <span class="icon-print"></span> icon to start your first print.
			</p>
			<img src="/plugin/mgsetup/static/img/gcode-dual.png" style="display:block;width::50%;margin-left:auto;margin-right:auto;margin-top:21px;"">
			</div>

			<p style="margin-top:21px;">
				<div data-bind="visible:!$root.isDual()">
					<p>
						First your printer will heat up the Extruder and Heated Build Platform if they are not already heated up. 
					</p>

					<p>
						Next, your printer will use its probe to take several measurements of the heated build platform so that it can make adjustment for any imperfections in the build surface. This probing process will take place anytime you start a print.    
					</p>
					<p>
						Once the probing process is complete, your printer will start printing the file. 
					</p>


					You can monitor your progress from the 'State' bar on the left, or from the 'Gcode Viewer' Tab. 
				</div>
				<div data-bind="visible:$root.isDual()">
					<p>
						First your printer will heat up both Extruders (Left T0 and Right T1) and the Heated Build Platform if they are not already heated up. 
					</p>

					<p>
						Next, your printer will use its probe to take several measurements of the heated build platform so that it can make adjustment for any imperfections in the build surface. This probing process will take place anytime you start a print.    
					</p>
					<p>
						Once the probing process is complete, your printer will start printing the file. 
					</p>


					You can monitor your progress from the 'State' bar on the left, or from the 'Gcode Viewer' Tab. 




				</div>
			</p>

			<div data-bind="visible:$root.isDual()">
				Your first print should look like this: 
				<br><img src="/plugin/mgsetup/static/img/dual-probe-plate.png" style="display:block;width:50%;margin-left:auto;margin-right:auto"><br>
				The top of the keychain:<br>
				<img src="/plugin/mgsetup/static/img/dual-probe-keychain-top.png" style="display:block;width:50%;margin-left:auto;margin-right:auto"><br>
				The bottom of the keychain:<br>
				<img src="/plugin/mgsetup/static/img/dual-probe-keychain-bottom.png" style="display:block;width:50%;margin-left:auto;margin-right:auto"><br>
				A closeup of the border:<br>
				<img src="/plugin/mgsetup/static/img/probeBedPrintBorder.png" style="display:block;width:50%;margin-left:auto;margin-right:auto"><br>
			</div>
			<div data-bind="visible:!$root.isDual()">
				Your first print should look like this: 
				<br><img src="/plugin/mgsetup/static/img/probeBedPrint.png" style="display:block;width:50%;margin-left:auto;margin-right:auto"><br>
				The top of the keychain:<br>
				<img src="/plugin/mgsetup/static/img/probeBedPrintKeychainTop.png" style="display:block;width:50%;margin-left:auto;margin-right:auto"><br>
				The bottom of the keychain:<br>
				<img src="/plugin/mgsetup/static/img/probeBedPrintKeychainBottom.png" style="display:block;width:50%;margin-left:auto;margin-right:auto"><br>
				A closeup of the border:<br>
				<img src="/plugin/mgsetup/static/img/probeBedPrintBorder.png" style="display:block;width:50%;margin-left:auto;margin-right:auto"><br>
			</div>



			<br>
			<div data-bind="visible:!$root.isDual()">
				If your finished "mgkeychain.gco" keychain looks different than the images above, click the button below to adjust your Z Probe Height Offset:<br>
				<button style="width:100%;" class="btngoBig" data-bind="enable: loginState.isUser , click: function() { $root.goTo('20'); window.scroll(0,0) }">Adjust Z Probe Offset</button>
			</div>

			<br><br>
			<div data-bind="visible:$root.isDual()">
				If your finished "mgkeychain-dual.gcode" keychain or perimeter looks different than the images above, select the closest image from the set below to be taken to the appropriate adjustment page:<br><br>

				<div data-bind="visible: $root.isDual()">
					<table class="choiceTable">

						<tr>
							<td colspan="2">
								<b><center>One of the patterns did not print correctly:</center></b>
							</td>
						</tr>

						<tr>
							<td>
								<center><a href="/plugin/mgsetup/static/img/cross.jpg" data-lightbox="step8"> <img data-bind="attr: {'src': '/plugin/mgsetup/static/img/cross-t1-only.jpg', 'width': '50%',} , visible: loginState.isUser && setupStep()==='22'" /></a>        </center>
							</td>
							<td>
								<center><a href="/plugin/mgsetup/static/img/simpleTestFail1.jpg" data-lightbox="step8"><img data-bind="attr: {'src': '/plugin/mgsetup/static/img/cross-t0-only.jpg', 'width': '50%',} , visible: loginState.isUser && setupStep()==='22'" /></a></center>
							</td>

						</tr>
						<tr>
							<td>
								The Left Extruder (T0, Black filament) did not print correctly - only the Blue pattern is present, or the Black pattern did not stick to the bed.

							</td>
							<td>
								The Right Extruder (T1, Blue filament) did not print correctly - only the Black pattern is present, or the Blue pattern did not stick to the bed.

							</td>
						</tr>
						<tr>
							<td class="buttonCell">
								<center><button class="btngoBig" data-bind="click: function() { $root.goTo('20'); window.scroll(0,0) }, enable: !isPrinting()">Adjust T0 Height</button></center>
							</td>
							<td class="buttonCell">
								<center><button class="btngoBig" data-bind="click: function() { $root.goTo('11'); window.scroll(0,0) }, enable: !isPrinting()">Adjust T1 Height</button></center>
							</td>
						</tr>
						<tr>
							<td colspan="2">
								<b><center>Both patterns printed:</center></b>
							</td>
						</tr>

						<tr>
							<td>
								<center><a href="/plugin/mgsetup/static/img/simpleTestFail1.jpg" data-lightbox="step8"><img data-bind="attr: {'src': '/plugin/mgsetup/static/img/simpleTestFail1.jpg', 'width': '50%',} , visible: loginState.isUser && setupStep()==='22'" /></a></center>
							</td>
							<td>
								<center><a href="/plugin/mgsetup/static/img/simpleTestFail2.jpg" data-lightbox="step8"><img data-bind="attr: {'src': '/plugin/mgsetup/static/img/simpleTestFail2.jpg', 'width': '50%',} , visible: loginState.isUser && setupStep()==='22'" /></a></center>
							</td>
						</tr>
						<tr>

							<td colspan="2">
								The two patterns intersect or have uneven spacing. If you are not sure, pick this option.

							</td>
						</tr>
						<tr>

							<td colspan="2" class="buttonCell">
								<center><button class="btngoBig" data-bind="click: function() { $root.goTo('14'); window.scroll(0,0) }, enable: !isPrinting()">Adjust X and Y Offsets</button></center>
							</td>
						</tr>

					</table>
				</div>
			</div>

			<p style="margin-top:21px;" data-bind="visible: !$root.isDual()">
				Learn how to get the most out of your M3 by visiting the  <a href="https://makergear.zendesk.com/hc/en-us" target="_blank">M3 Knowledge Base</a>.

			</p>
			<p style="margin-top:21px;" data-bind="visible: $root.isDual()">
				Learn how to get the most out of your <span data-bind="text: $root.printerNameForDisplay"></span> by visiting the  <a href="https://makergear.zendesk.com/hc/en-us" target="_blank"><span data-bind="text: $root.printerNameForDisplay"></span> Knowledge Base</a>.

			</p>


{#     <div data-bind="visible: $root.isDual">
	<h1 style="text-align:left;">M3 Independent Dual (M3-ID) Setup</h1>
	To continue on to the (M3-ID) configuration, click "Next":<br>
<center><button class="btngoBig" data-bind="enable: loginState.isUser(), click: function() { $root.goTo('8'); window.scroll(0,0) }">Next</button></center>
</div> #}
</div>




{#                          
 ad888888b,  8888888888   
d8"     "88  88           
		a8P  88  ____     
	 ,d8P"   88a8PPPP8b,  
   a8P"      PP"     `8b  
 a8P'                 d8  
d8"          Y8a     a8P  
88888888888   "Y88888P"   
						  
#}


	<div id="three" data-bind="visible: loginState.isUser && setupStep()==='25' ">
		<div style="width:100%;margin-top:15px;" data-bind="visible: setupStep()==='25'">
			<div style="display:inline-block;width:24.25%;">
				<div style="text-align:center;">
					<i class="icon-check" style="font-size:50px; color:#FF6E35;"></i>
				</div>
				<div data-bind="style: {fontWeight: $root.probeStep() == 1 ? 'bold':''}"  style="text-align:center;">
					Automated  <br /> Calibration Test
				</div>
			</div>
			<div style="display:inline-block;width:74.5%;">
				<span style="font-size:18px;">The Automated Calibration Test has completed successfully. Follow the instructions below to proceed. </span>
				<br />
				<br />
				<br />
			</div>
			<hr style="margin-top:0px;margin-bottom:0px;" />

		</div>

		<div class="fileupload-new thumbnail" style="width: 95%; margin:auto; " data-bind="visible: $root.isDual">
			<img data-bind="attr: {'src': $root.bothToolsPicture, 'width': '100%',} , visible: loginState.isUser && setupStep()==='25'" />
		</div><br><br>

{# <div class="fileupload-new thumbnail" style="width: 95%; margin:auto; " data-bind="visible: $root.isDual">
		<img data-bind="attr: {'src': $root.t0Picture, 'width': '100%',} , visible: loginState.isUser && setupStep()==='3'" />
	</div><br> #}
	<h1 style="text-align:left">Extrude Filament</h1>

	<p>
		<div data-bind="visible: $root.isDual()">
			Now you need to load filament into your Left Extruder (T0) and Right Extruder (T1). 
		</div>

		<br />

		<p>
			Click 'Prepare' and then continue reading the instructions while you wait for your printer to move into position and heat up.
		</p>

		<p>

			<i class="icon-fire" style="float:left;font-size:30px;color:red;margin-right:5px;"></i>

			Your extruders and build surface will start to heat up. Do not touch the extruders' nozzles or the build surface.
		</p>


		<center><button  id="control-yinc" class="btnstay" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser() && !$root.stepThreeStartHeatingClicked(), click: function() { $root.sendWigglePreheat('both'); $root.stepThreeStartHeatingClicked(true) }">{{ _('Prepare') }}</button></center><br><br>




	<div data-bind="visible: !$root.rrf">
		Place the PLA filament spools on the spool holders so that the loose end points directly upward into the filament guides.  Place the spool of Black PLA on the Left spool holder, and the spool of Blue PLA on the Right spool holder.  You may need to flip your spools in order to achieve the proper orientation. Cut the ends of the filament so that the tip is flat.
		<br><br>
		This shows the Left Extruder (T0) being loaded - the process is the same for the Right Extruder (T1).  Load the Right Extruder at this time as well.
	</div>

	<div data-bind="visible: $root.rrf">
		Place both PLA filament spools on the spool holders so that the loose end points upward, uncoiling from the left side such that the spool will turn clockwise when filament is pulled from it.  Place the spool of Black PLA on the left spool holder, and Blue on the right.
		<br><br>
		Feed the filament into the "Filament Funnel" at the rear of the Filament box - the left funnel is for the left extruder, T0, and the right funnel is for the right extruder, T1.
		<br><br>
		Continue pushing filament until you see it pass through the rear of the frame, and through until it is near the end of the guide tube.


	</div>






		<br /><br />


		<p data-bind="visible: !$root.rrf">
			Feed the tip of your filament up through the black filament guide and the clear filament guide tube.
		</p>
		<video controls id="filamentVideo1" class="video-js"  preload="none"  data-setup='{"fluid": true, "controls":true}' data-bind="attr: { autoplay: 'true', loop: 'true' , poster:'/plugin/mgsetup/static/img/filamentLoad1Poster.jpg'}, if:  setupStep() === '25' || setupStep() === '23' || setupStep() === '24', visible: !$root.rrf" onclick="this.paused ? this.play() : this.pause();" vjs-big-play-centered>
			<source src="/plugin/mgsetup/video/filamentLoad1.mp4" type='video/mp4'>
				<p class="vjs-no-js">
					To view this video please enable JavaScript, and consider upgrading to a web browser that
					<a href="http://videojs.com/html5-video-support/" target="_blank">supports HTML5 video</a>
				</p>
			</video>
			<video controls id="filamentVideo1" class="video-js"  preload="none"  data-setup='{"fluid": true, "controls":true}' data-bind="attr: { autoplay: 'true', loop: 'true' , poster:'/plugin/mgsetup/static/img/filamentLoad1Poster.jpg'}, if:  setupStep() === '25' || setupStep() === '23' || setupStep() === '24', visible: $root.rrf" onclick="this.paused ? this.play() : this.pause();" vjs-big-play-centered>
			<source src="/plugin/mgsetup/video/u1-filamentLoad1.mp4" type='video/mp4'>
				<p class="vjs-no-js">
					To view this video please enable JavaScript, and consider upgrading to a web browser that
					<a href="http://videojs.com/html5-video-support/" target="_blank">supports HTML5 video</a>
				</p>
			</video>

			<br /><br />



			<p data-bind="visible: !$root.rrf">
				Next insert the filament into the hole on top of the extruder. 
			</p>

			<p data-bind="visible: $root.rrf">
				Next insert the filament into the top of the right, T1 extruder filament drive.  First loosen the filament guide tube clamp, and remove the filament guide tube.  If needed, push more filament through the guide tube from the filament box, until you are able to push the filament into the top of the filament drive.
			<br><br>
				Repeat the process for the left, T0 extruder as well.
			</p>

			<video controls id="filamentVideo2" class="video-js"  preload="none"  data-setup='{"fluid": true}' data-bind="attr: { autoplay: 'true', loop: 'true' , poster:'/plugin/mgsetup/static/img/filamentLoad2Poster.jpg'}, if:  setupStep() === '25' || setupStep() === '23' || setupStep() === '24', visible: !$root.rrf" onclick="this.paused ? this.play() : this.pause();">
				<source src="/plugin/mgsetup/video/filamentLoad2.mp4" type='video/mp4'>
					<p class="vjs-no-js">
						To view this video please enable JavaScript, and consider upgrading to a web browser that
						<a href="http://videojs.com/html5-video-support/" target="_blank">supports HTML5 video</a>
					</p>
				</video>
			<video controls id="filamentVideo2" class="video-js"  preload="none"  data-setup='{"fluid": true}' data-bind="attr: { autoplay: 'true', loop: 'true' , poster:'/plugin/mgsetup/static/img/filamentLoad2Poster.jpg'}, if:  setupStep() === '25' || setupStep() === '23' || setupStep() === '24', visible: $root.rrf" onclick="this.paused ? this.play() : this.pause();">
				<source src="/plugin/mgsetup/video/u1-filamentLoad2.mp4" type='video/mp4'>
					<p class="vjs-no-js">
						To view this video please enable JavaScript, and consider upgrading to a web browser that
						<a href="http://videojs.com/html5-video-support/" target="_blank">supports HTML5 video</a>
					</p>
				</video>
				<br>
				<video controls id="filamentVideo3" class="video-js" preload="none"   data-setup='{"fluid": true}' data-bind="attr: { autoplay: 'true', loop: 'true' , poster:'/plugin/mgsetup/static/img/filamentLoad3Poster.jpg'}, if:  setupStep() === '25' || setupStep() === '23' || setupStep() === '24', visible: $root.rrf" onclick="this.paused ? this.play() : this.pause();">
					<source src="/plugin/mgsetup/video/u1-filamentLoad3.mp4" type='video/mp4'>
						<p class="vjs-no-js">
							To view this video please enable JavaScript, and consider upgrading to a web browser that
							<a href="http://videojs.com/html5-video-support/" target="_blank">supports HTML5 video</a>
						</p>
					</video>
				<br /><br />


				<p>Below you can see your extruder temperatures. Once both extruder temperatures match the target temperature within 2 degrees, click "Feed Filament" on either the Left Extruder (T0) or Right Extruder (T1) to start loading filament. You may need to apply slight downward pressure on the filament to get started. Once the filament has started to feed, you should feel it being pulled into the extruder.<br><br>

					Extrude filament on both extruders before continuing.
				</p>

				<div style="margin:auto; display:block; padding:4px; border:8px solid #000; border-radius:10px; text-align:center; width:60%;">
					<div style="display:inline-block; vertical-align:middle; width:25%; text-align:center; ">
						<img data-bind="attr: {'src': '/plugin/mgsetup/static/img/thermometer.png', 'width': '80%',} , visible: loginState.isUser " />
					</div>

					<div style="width: 70%; display:inline-block; vertical-align:middle; text-align:left;">
						Bed Temperature: <span data-bind="text: $root.displayBedTemp(), style: { color: (parseFloat($root.displayBedTemp()) < 40) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayBedTempTarget()"></span><br>
						<div data-bind="visible: !$root.isDual()">
							Extruder Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
						</div>
						<div data-bind="visible: $root.isDual()">
							Extruder 0 Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
							Extruder 1 Temperature: <span data-bind="text: $root.displayTool1Temp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayTool1TempTarget()"></span><br>
						</div>
					</div>
				</div>


				<br><br>

				<div style="width: 98%; display:inline-block; vertical-align:middle; text-align:center;">

					<div style="width: 45%; display:inline-block; vertical-align:middle; text-align:center;border:4px solid #000; border-radius:5px;">
						<img data-bind="attr: {'src': $root.t0Picture, 'width': '100%',} , visible: loginState.isUser && setupStep()==='25'" /><br>
						<center><button title="Extrude 75 mm of Filament" class="btnstay" data-bind="enable: $root.stepThreeStartHeatingClicked() && $root.lockButton(), click: function() { $root.feedFilament('tool0'); $root.enableLockedButton() }, enabled: (parseFloat($root.displayToolTemp()) > 180) ">Feed Filament</button></center>
					</div>

					<div style="width: 45%; display:inline-block; vertical-align:middle; text-align:center; border:4px solid #000; border-radius:5px;">
						<img data-bind="attr: {'src': $root.t1Picture, 'width': '100%',} , visible: loginState.isUser && setupStep()==='25'" /><br>
						<center><button title="Extrude 75 mm of Filament" class="btnstay" data-bind="enable: $root.stepThreeStartHeatingClicked() && $root.lockButton(), click: function() { $root.feedFilament('tool1'); $root.enableLockedButton() }, enabled: (parseFloat($root.displayToolTemp()) > 180) ">Feed Filament</button></center>
					</div>

				</div>



				<br>
				{# <center><button title="Extrude 75 mm of Filament" class="btnstay" data-bind="enable: $root.stepThreeStartHeatingClicked() && $root.lockButton(), click: function() { $root.feedFilament(); $root.enableLockedButton() }, enabled: (parseFloat($root.displayToolTemp()) > 180) ">Feed Filament</button></center> #}
				<br>
				<p>
					Continue clicking "Feed Filament" until a thin strand of filament is consistently extruding from the tip of the nozzle. Use your tweezers to remove the hot filament after it has been extruded. <br><br>

				</p>
				<p data-bind="visible: !$root.rrf">
					Push the filament guide tube down into the plastic extruder hole. 

				</p>

				<p data-bind="visible: $root.rrf">
					Push the filament guide tubes down into the tops of the filament drives, and secure the filament guide tube clamps as shown.
				</p>
				<video controls id="filamentVideo3" class="video-js" preload="none"   data-setup='{"fluid": true}' data-bind="attr: { autoplay: 'true', loop: 'true' , poster:'/plugin/mgsetup/static/img/filamentLoad3Poster.jpg'}, if:  setupStep() === '25' || setupStep() === '23' || setupStep() === '24', visible: !$root.rrf" onclick="this.paused ? this.play() : this.pause();">
					<source src="/plugin/mgsetup/video/filamentLoad3.mp4" type='video/mp4'>
						<p class="vjs-no-js">
							To view this video please enable JavaScript, and consider upgrading to a web browser that
							<a href="http://videojs.com/html5-video-support/" target="_blank">supports HTML5 video</a>
						</p>
					</video>



					Once filament is consistently extruding through both the Left Extruder (T0) and Right Extruder (T1), click to "Next Step" proceed:<br>









					<center><button class="btngoBig" data-bind="visible: loginState.isUser && setupStep()==='25', click: function() { $root.goTo('26'); window.scroll(0,0) }">Next Step</button></center>

{# <center><button class="btngoBig" data-bind="visible: loginState.isUser && setupStep()==='23', click: function() { $root.goTo('22'); window.scroll(0,0) }">Next Step</button></center>

<center><button class="btngoBig" data-bind="visible: loginState.isUser && setupStep()==='24', click: function() { $root.goTo('20'); window.scroll(0,0) }">Next Step</button></center> #}





</div>


{#                          
 ad888888b,    ad8888ba,  
d8"     "88   8P'    "Y8  
		a8P  d8           
	 ,d8P"   88,dd888bb,  
   a8P"      88P'    `8b  
 a8P'        88       d8  
d8"          88a     a8P  
88888888888   "Y88888P"   
						  
#}

{# Print Something with both extruders #}
<div data-bind="visible: loginState.isUser && setupStep()==='26'">
	<div class="fileupload-new thumbnail" style="width: 95%; margin:auto; " data-bind="visible: $root.isDual">
		<img data-bind="attr: {'src': $root.bothToolsPicture, 'width': '100%',} , visible: loginState.isUser && setupStep()==='26'" />
	</div><br>
	<br>
	Now we’ll print a square pattern in order to determine the level of calibration between both extruders along the X and Y axes.  You can skip this test and move directly on to Dual printing, however we strongly recommend running this print at least once to verify everything on the printer.
	<br><br>
	If there is an adjustment you know is needed, all adjustments can be performed either in the Maintenance tab, or by expanding the "There was an issue with the print" section below and clicking the appropriate button.
	<br><br><br>

	After printing the pattern, examine it on the build plate: the perimeters of the pattern should be perfectly aligned, and should not overlap except at the purge lines, which are located at the lower left-hand corner of the pattern.

	<br><br>
	<center><button class="btnstay" data-bind="click: function() { $root.printWiggleConfirm('simple') }, enable: !$root.stepTwelveSimpleClicked()">Print Simple Test</button>
		<br><br>
		{# <button class="btngo" data-bind="click: function() { $root.goTo('14'); window.scroll(0,0) }">Skip to Calibration Adjustment</button><br><br> #}
	</center>
	<br><br><div style="margin:auto; display:block; padding:4px; border:8px solid #000; border-radius:10px; text-align:center; width:60%;">
		<div style="display:inline-block; vertical-align:middle; width:25%; text-align:center; ">
			<img data-bind="attr: {'src': '/plugin/mgsetup/static/img/thermometer.png', 'width': '80%',} , visible: loginState.isUser " />
		</div>

		<div style="width: 70%; display:inline-block; vertical-align:middle; text-align:left;">
			Bed Temperature: <span data-bind="text: $root.displayBedTemp(), style: { color: (parseFloat($root.displayBedTemp()) < 40) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayBedTempTarget()"></span><br>
			<div data-bind="visible: !$root.isDual()">
				Extruder Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
			</div>
			<div data-bind="visible: $root.isDual()">
				Extruder 0 Temperature: <span data-bind="text: $root.displayToolTemp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayToolTempTarget()"></span><br>
				Extruder 1 Temperature: <span data-bind="text: $root.displayTool1Temp(),  style: { color: (parseFloat($root.displayToolTemp()) < 50) ? 'green' : 'red' }"></span> / <span data-bind="text: $root.displayTool1TempTarget()"></span><br>
			</div>
		</div>
	</div><br><br>

	Once the print has finished, inspect it and compare it to the images below:<br><br>

	<table class="choiceTable">
		<tr>
			<td>
				<b><center>The pattern printed correctly with even gaps and thickness all around:</center></b>
			</td>
		</tr>
		<tr>
			<td>
				<center>                  <a href="/plugin/mgsetup/static/img/cross.jpg" data-lightbox="step8"> <img data-bind="attr: {'src': '/plugin/mgsetup/static/img/cross.jpg', 'width': '40%',} , visible: loginState.isUser && setupStep()==='26'" /></a>    </center>
			</td>
		</tr>
		<tr>
			<td>
				<center>The two patterns do not intersect and have even spacing.</center>

			</td>
		</tr>
		<tr>
			<td class="buttonCell">
				<center><button class="btngoBig" data-bind="visible: $root.hasProbe(), click: function() { $root.goTo('22'); window.scroll(0,0) }">Begin Dual Printing</button><button class="btngoBig" data-bind="visible: !$root.hasProbe(), click: function() { $root.goTo('16'); window.scroll(0,0) }">Begin Dual Printing</button></center>
			</td>
		</tr>
	</table><br>
<hr>
	<div class="accordion" id="choiceTable26Results">
		<div>
			<h3> <center><a data-toggle="collapse" data-parent="#choiceTable26Results" href="#choiceTable26ResultsInner">There was an issue with the print <i class="icon-chevron-down"></i> </a></center></h3>
		</div>
		<br>
		<div id="choiceTable26ResultsInner" class="accordion-body collapse">
			<table class="choiceTable">

			{# 	<tr>
					<td colspan="2">
						<b><center>One of the patterns did not print correctly:</center></b>

					</td>
				</tr>
	 #}
				<tr>
					<td>
						<center><a href="/plugin/mgsetup/static/img/cross.jpg" data-lightbox="step8"> <img data-bind="attr: {'src': '/plugin/mgsetup/static/img/cross-t1-only.jpg', 'width': '50%',} , visible: loginState.isUser && setupStep()==='26'" /></a></center>
					</td>
					<td>
						<center><a href="/plugin/mgsetup/static/img/simpleTestFail1.jpg" data-lightbox="step8"><img data-bind="attr: {'src': '/plugin/mgsetup/static/img/cross-t0-only.jpg', 'width': '50%',} , visible: loginState.isUser && setupStep()==='26'" /></a></center>
					</td>

				</tr>
				<tr>
					<td>
						The Left Extruder (T0, Black filament) did not print correctly - only the Blue pattern is present, or the Black pattern did not stick to the bed.

					</td>
					<td>
						The Right Extruder (T1, Blue filament) did not print correctly - only the Black pattern is present, or the Blue pattern did not stick to the bed.

					</td>
				</tr>
				<tr>
					<td class="buttonCell">
						<center><button class="btngoBig" data-bind="visible: $root.hasProbe(), click: function() { $root.goTo('20'); window.scroll(0,0) }">Adjust T0 Height</button><button class="btngoBig" data-bind="visible: !$root.hasProbe(), click: function() { $root.goTo('4'); window.scroll(0,0) }">Adjust T0 Height</button></center>
					</td>
					<td class="buttonCell">
						<center><button class="btngoBig" data-bind="click: function() { $root.goTo('11'); window.scroll(0,0) }">Adjust T1 Height</button></center>
					</td>
				</tr>
				<tr>
					<td colspan="2">
						<b><center>Both patterns printed:</center></b>
					</td>
				</tr>

				<tr>
					<td>
						<center><a href="/plugin/mgsetup/static/img/simpleTestFail1.jpg" data-lightbox="step8"><img data-bind="attr: {'src': '/plugin/mgsetup/static/img/simpleTestFail1.jpg', 'width': '50%',} , visible: loginState.isUser && setupStep()==='26'" /></a></center>
					</td>
					<td>
						<center><a href="/plugin/mgsetup/static/img/simpleTestFail2.jpg" data-lightbox="step8"><img data-bind="attr: {'src': '/plugin/mgsetup/static/img/simpleTestFail2.jpg', 'width': '50%',} , visible: loginState.isUser && setupStep()==='26'" /></a></center>
					</td>
				</tr>
				<tr>

					<td colspan="2">
						The two patterns intersect or have uneven spacing. If you are not sure, pick this option.

					</td>
				</tr>
				<tr>

					<td colspan="2" class="buttonCell">
						<center><button class="btngoBig" data-bind="click: function() { $root.goTo('14'); window.scroll(0,0) }">Adjust X and Y Offsets</button></center>
					</td>
				</tr>

			</table>
		</div>
	</div>



</div>









{# </div>
	#}


{#                            
 ad888888b,  888888888888  
d8"     "88          ,8P'  
		a8P         d8"    
	 ,d8P"        ,8P'     
   a8P"          d8"       
 a8P'          ,8P'        
d8"           d8"          
88888888888  8P'           
						   
#}

<div data-bind="visible: loginState.isUser && setupStep()==='27'">

	You have adjusted the leveling at least 3 times and the bed is still not level enough - this could be caused by a couple of different physical configuration/installation issues.  Please check the suggestions below to resolve the problem; you will be taken back to retry the Autocheck once done here.
	<br><br>
	Bed isn't installed correctly - corner holddown clip(s) too loose.  Please check that the corner holddown clips are actually touching the top surface of the glass - if a gap has developed from adjusting the bed level, the corner holddown clip cannot hold the bed down against the leveling screw, leading to inconsistent bed level adjustments.  To tighten the corner holddown clip, use your 1.5mm Allen wrench to tighten the screw the clip rotates around.

	<br>
	{# Picture here of a gap between clip and top of bed #}{# Picture here of adjusting the clip screw #}

	<br><br>
	Any other failure modes we want here - top surface of glass should be Xmm above the top of the rubber corner pieces (screws too high or low), etc.

	<br><br>




	<center><button class="btngoBig" data-bind="click: function() { $root.goTo('17'); window.scroll(0,0) }">Return to Autocheck</button></center>







</div>


{#                            

 ad888888b,  ad88888ba
d8"     "88 d8"     "8b
		a8P Y8a     a8P
	 ,d8P"   "Y8aaa8P"
   a8P"      ,d8"""8b,
 a8P'       d8"     "8b
d8"         Y8a     a8P
88888888888  "Y88888P"

	  
#}

<div data-bind="visible: loginState.isUser && setupStep()==='28'">


	<h1 style="text-align:left;">Before proceeding to quick check, please answer the following questions.</h1>


	<p id="28guideQuestion" style="font-size:16px;">
		Have you completed the 'Setup' section of your <span data-bind="text: $root.printerNameForDisplay"></span> User Guide (included with your printer)?
	</p>

	<div style="text-align:center;">

		<span style="margin-left:auto;margin-right:auto;display:inline-block;">
			<button style="padding:7px;" class="btngo" data-bind="click: function() { $root.stepTwentyEightGuideFollowed(true) }">&nbsp;&nbsp;&nbsp;Yes&nbsp;&nbsp;&nbsp;</button>

			<button  style="padding:7px;" class="btngo" data-bind="click: function() { $root.stepTwentyEightGuideFollowed(false) }">&nbsp;&nbsp;&nbsp;No&nbsp;&nbsp;&nbsp;</button>
		</span>
	</div>

	<div data-bind="visible: $root.stepTwentyEightGuideFollowed()== false">


		<p>
			Before you can proceed you must follow the instructions in the 'Hardware Setup' section of the <span data-bind="text: $root.printerNameForDisplay"></span> User Guide . This will include installing the HBP, Glass, bed hold-down clips and spool holder.
		</p>

		<p>
			The User Guides for each printer model are also available online at the links below. (Internet connection required to download manuals)
		</p>

		<ul>
			<li><a href="http://setup.makergear.com/m3UserGuideV1-0.pdf" target="_blank">M3 SE Rev0</a>
				<li><a href="http://setup.makergear.com/Setup_M3-ID_User%20Guide.pdf" target="_blank">M3 ID Rev0</a>
					<li><b>U1 User Guide Pending</b>
		   <!-- <li><a href="">M3 SE Rev1</a>
		   	<li><a href="">M3 ID Rev1</a>-->
		   	</ul>
		   </div>

		   <div data-bind="visible: $root.stepTwentyEightGuideFollowed()== true">


		   	<br />
		   	<br />


		   	<p id="28guideQuestion" style="font-size:16px;">
		   		Have you replaced, installed, or removed the hot-end or nozzle since the last time you used your printer?
		   	</p>



		   	<div style="text-align:center;">

		   		<span style="margin-left:auto;margin-right:auto;display:inline-block;">
		   			<button style="padding:7px;"  class="btngo" data-bind="click: function() { $root.hotendChangeDialog.modal('show') ; window.scroll(0,0); }">&nbsp;&nbsp;&nbsp;Yes&nbsp;&nbsp;&nbsp;</button>



		   			<button style="padding:7px;"  class="btngo" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser(), visible: !hasProbe(), click: function() { $root.goTo('1'); window.scroll(0,0); $root.cooldown() }">{{ _('No - Proceed to Quick Check') }}</button>

		   			<button style="padding:7px;"  class="btngo" data-bind="enable: isOperational() && !isPrinting() && loginState.isUser(), visible: hasProbe(), click: function() {  $root.goTo('17'); window.scroll(0,0); $root.cooldown(); $root.adminAction('flushPrintActive') }">{{ _('No - Proceed to Quick Check') }}</button>
		   		</span>

		   	</div>




		   	<div data-bind="visible: $root.stepTwentyEightHotendReplaced()== false">



		   	</div>

		   	<div data-bind="visible: $root.stepTwentyEightHotendReplaced()== true">
		   		<p>
		   			Before proceeding to quick check, please make sure you have followed the instructions for replacing and setting the start height on your hotend. 
		   		</p>

		   		<p>
		   			Please note: all brand new printers have 
		   		</p>





		   		<button class="btngoBig" data-bind="click: function() {$root.showMaintenanceStep(0,'#tab_plugin_mgsetup_maintenance-cleanup'); window.scroll(0,0); return true}" }">Change T0 Hotend (Left)</button>

		   		<button class="btngoBig" data-bind="click: function() {$root.showMaintenanceStep(0,'#tab_plugin_mgsetup_maintenance-cleanup'); window.scroll(0,0); return true}" }">Change T1 Hotend (Right)</button>





		   	</div>


		   </div>

		</div>




		{#                               #}
		{#    ad888888b,   ad88888ba     #}
		{#   d8"     "88  d8"     "88    #}
		{#           a8P  8P       88    #}
		{#        ,d8P"   Y8,    ,d88    #}
		{#      a8P"       "PPPPPP"88    #}
		{#    a8P'                 8P    #}
		{#   d8"          8b,    a8P     #}
		{#   88888888888  `"Y8888P'      #}
		{#                               #}
		{#                               #}





		<div data-bind="visible: loginState.isUser && setupStep()==='29'">


			<h1 style="text-align:left;">Filament</h1>

			<br>
			<p id="28guideQuestionInfo" style="font-size:16px;" data-bind="visible: $root.stepTwentyNineNext()=== '25'">
				The Probe Autocheck process has completed successfully.  Next you will load filament and begin printing.
			</p>
			<br><br>

			<p id="28guideQuestion" style="font-size:16px;">
				Are you using PLA?
			</p>

			<div style="text-align:center;">

				<span style="margin-left:auto;margin-right:auto;display:inline-block;">
					<button style="padding:7px;" class="btngo" data-bind="click: function() { $root.stepTwentyNineFilament('no') }">&nbsp;&nbsp;&nbsp;No&nbsp;&nbsp;&nbsp;</button>

					<button style="padding:7px;" class="btngo" data-bind="click: function() { $root.stepTwentyNineFilament('yes'); $root.goTo($root.stepTwentyNineNext()) }">&nbsp;&nbsp;&nbsp;Yes&nbsp;&nbsp;&nbsp;</button>

					<button style="padding:7px;" class="btngo" data-bind="click: function() { $root.stepTwentyNineFilament('maybe') }">&nbsp;&nbsp;&nbsp;Not Sure&nbsp;&nbsp;&nbsp;</button>

				</span>
			</div>

			<div data-bind="visible: $root.stepTwentyNineFilament()==='no' ">

				<br><br>
				<p>
					The printing sections of the Quick Start process are configured specifically for PLA.  Most of these tests can be performed with alternate materials in the Maintenance tab.
				</p>

			</div>
			<div data-bind="visible: $root.stepTwentyNineFilament()==='maybe' ">

				<br><br>
				<div data-bind="visible: $root.isDual">
					<p>
						The printing sections of the Quick Start process are configured specifically for PLA.  You should have received two spools of PLA with your printer - one Black, one Blue.  In general filament should have a label on the side of the spool listing the material type - "PLA", "ABS", "TPU", etc.  If you're unsure, please contact Support.
					</p>
				</div>
				<div data-bind="visible: !$root.isDual">
					<p>
						The printing sections of the Quick Start process are configured specifically for PLA.  You should have received a spool of Black PLA with your printer.  In general filament should have a label on the side of the spool listing the material type - "PLA", "ABS", "TPU", etc.  If you're unsure, please contact Support.
					</p>
				</div>

			</div>




		</div>












{# 

	</div>





</div> #}















<br><br><button class="arrowbtn" data-bind="visible: loginState.isUser, enable: $root.hasHistory(), click: function() {$root.stepBack()}" style="float:left;"><i class="icon-circle-arrow-left"></i></button><button class="arrowbtn" data-bind="visible: loginState.isUser, enable: $root.hasFuture(), click: function() {$root.stepForward()}" style="float:right;"><i class="icon-circle-arrow-right"></i></button><br><br><br>

<div data-bind= "visible: !$root.hideDebug()">
	<input type="checkbox" data-bind="checked: $root.hideDebug" /> Hide debug options.<br>
	<input type="checkbox" data-bind="checked: $root.showMgsetupDebugChecklist" /> Expand debug options.<br>
	<input type="checkbox" data-bind="checked: $root.preventTabReset" /> Prevent automatic resets when switching tabs.
	<hr />
	<br>

{#  88888888ba,    88888888888  88888888ba   88        88    ,ad8888ba,   
	88      `"8b   88           88      "8b  88        88   d8"'    `"8b  
	88        `8b  88           88      ,8P  88        88  d8'            
	88         88  88aaaaa      88aaaaaa8P'  88        88  88             
	88         88  88"""""      88""""""8b,  88        88  88      88888  
	88         8P  88           88      `8b  88        88  Y8,        88  
	88      .a8P   88           88      a8P  Y8a.    .a8P   Y8a.    .a88  
	88888888Y"'    88888888888  88888888P"    `"Y8888Y"'     `"Y88888P"   #}
	<div data-bind="visible: $root.showMgsetupDebugChecklist()">
		Which step to show:
		<div><input type="radio" name="setupStepSelect" value="0" data-bind="checked: setupStep, click: window.scroll(0,0)" />0 Welcome Page</div>
		<div><input type="radio" name="setupStepSelect" value="1" data-bind="checked: setupStep, click: window.scroll(0,0)" />1 Starting Height Check (Z head crash/gap)</div>
		<div><input type="radio" name="setupStepSelect" value="2" data-bind="checked: setupStep, click: window.scroll(0,0)" />2 Adjust Starting Height (cold)</div>
		<div><input type="radio" name="setupStepSelect" value="3" data-bind="checked: setupStep, click: window.scroll(0,0)" />3 Load Filament</div>
		<div><input type="radio" name="setupStepSelect" value="4" data-bind="checked: setupStep, click: window.scroll(0,0)" />4 Verify Starting Height (Wiggle)</div>
		<div><input type="radio" name="setupStepSelect" value="5" data-bind="checked: setupStep, click: window.scroll(0,0)" />5 Heated Corner Check (Wiggles)</div>
		<div><input type="radio" name="setupStepSelect" value="6" data-bind="checked: setupStep, click: window.scroll(0,0)" />6 Heated Leveling (Wiggles)</div>
		<div><input type="radio" name="setupStepSelect" value="7" data-bind="checked: setupStep, click: window.scroll(0,0)" />7 Done</div>
		<div><input type="radio" name="setupStepSelect" value="8" data-bind="checked: setupStep, click: window.scroll(0,0)" />8 Dual Cold Starting Height Check</div>
		<div><input type="radio" name="setupStepSelect" value="9" data-bind="checked: setupStep, click: window.scroll(0,0)" />9 Dual Cold Starting Height Adjustment</div>
		<div><input type="radio" name="setupStepSelect" value="10" data-bind="checked: setupStep, click: window.scroll(0,0)" />10 Dual Load Filament Extruder 1</div>
		<div><input type="radio" name="setupStepSelect" value="11" data-bind="checked: setupStep, click: window.scroll(0,0)" />11 Dual Extruder 1 Height Adjustment</div>
		<div><input type="radio" name="setupStepSelect" value="12" data-bind="checked: setupStep, click: window.scroll(0,0)" />12 Dual Extruder 1 First Print</div>
		<div><input type="radio" name="setupStepSelect" value="13" data-bind="checked: setupStep, click: window.scroll(0,0)" />13 Dual Both Extruders Print</div>
		<div><input type="radio" name="setupStepSelect" value="14" data-bind="checked: setupStep, click: window.scroll(0,0)" />14 Dual X Offset Calibration</div>
		<div><input type="radio" name="setupStepSelect" value="15" data-bind="checked: setupStep, click: window.scroll(0,0)" />15 Dual Y Offset Calibration</div>
		<div><input type="radio" name="setupStepSelect" value="16" data-bind="checked: setupStep, click: window.scroll(0,0)" />16 Done/Prints</div>
		<div><input type="radio" name="setupStepSelect" value="17" data-bind="checked: setupStep, click: window.scroll(0,0)" />17 Probe Autocheck</div>
		<div><input type="radio" name="setupStepSelect" value="18" data-bind="checked: setupStep, click: window.scroll(0,0)" />18 Probe Fail 1/2 - Probe Connection</div>
		<div><input type="radio" name="setupStepSelect" value="19" data-bind="checked: setupStep, click: window.scroll(0,0)" />19 Probe Fail 3 - Nozzle vs Probe Height</div>
		<div><input type="radio" name="setupStepSelect" value="20" data-bind="checked: setupStep, click: window.scroll(0,0)" />20 Probe Config 3.5 - Adjust Probe Height with Wiggles</div>
		<div><input type="radio" name="setupStepSelect" value="21" data-bind="checked: setupStep, click: window.scroll(0,0)" />21 Probe Config 4 - Bed Level</div>
		<div><input type="radio" name="setupStepSelect" value="22" data-bind="checked: setupStep, click: window.scroll(0,0)" />22 Probe Config 5 - Print</div>
		<div><input type="radio" name="setupStepSelect" value="23" data-bind="checked: setupStep, click: window.scroll(0,0)" />23 extrude, test success</div>

		<div><input type="radio" name="setupStepSelect" value="24" data-bind="checked: setupStep, click: window.scroll(0,0)" />24 extrude, test failure</div>
		<div><input type="radio" name="setupStepSelect" value="25" data-bind="checked: setupStep, click: window.scroll(0,0)" />25 extrude, load both</div>
		<div><input type="radio" name="setupStepSelect" value="26" data-bind="checked: setupStep, click: window.scroll(0,0)" />26 print dual pattern</div>
		<div><input type="radio" name="setupStepSelect" value="27" data-bind="checked: setupStep, click: window.scroll(0,0)" />27 Too many bed level check</div>
		<div><input type="radio" name="setupStepSelect" value="28" data-bind="checked: setupStep, click: window.scroll(0,0)" />28 Guide and hotend question</div>
		<div><input type="radio" name="setupStepSelect" value="29" data-bind="checked: setupStep, click: window.scroll(0,0)" />29 Filament question</div>



	</div>
	Check network connectivity again: <button data-bind="click: function() { $root.checkGoogle() }">Check Google</button><br>
	Check network connectivity again: <button data-bind="click: function() { $root.checkGoogle('fail') }">Check Fail</button><br>
	Check network connectivity again: <button data-bind="click: function() { $root.checkGoogle() }">Check Google</button><br><br>
	Reset this step: <button data-bind="click: function() { $root.resetStep($root.setupStep()) }">Step Reset</button><br>


	Waiting For M503: <span data-bind="text: 'True', visible: $root.waitingForM()"></span><span data-bind="text: 'False', visible: !$root.waitingForM()"></span>
	<br>Bed: <span data-bind="text: $root.displayBedTemp()"></span><br>
	Tool0: <span data-bind="text: $root.displayToolTemp()"></span><br>
</div>






</div>





<div id="dialog-sawbin" title="Pattern Confirmation" class="modal hide fade medium">
	<div style="width:95%; height:95%; margin:auto; "><p><br>
		<center>Please make sure that your Print Bed is clear before printing this Calibration Pattern.<br>
			<div data-bind="visible: $root.calibrationStep() === 0">This will print Pattern 1, Coarse Adjustment.</div>
			<div data-bind="visible: $root.calibrationStep() === 1">This will print Pattern 2, Medium Adjustment.</div>
			<div data-bind="visible: $root.calibrationStep() === 2">This will print Pattern 3, Fine Adjustment.</div>
		</center><br><br>
		<button style="float: left; width: 35%;" data-bind="click: function() { $root.lockButton(true); $root.chosenSawBin(0) ; $root.printSawBinDialog.modal('hide'); $root.skipConfirm(false) }">Cancel Pattern</button><button style="float: right; width: 45%;" data-bind="click: function() { $root.pickSawBin(); $root.printSawBinDialog.modal('hide') }">Bed Is Clear - Print</button>
		<br><br>
		{# <div style="float:right"><input type="checkbox" data-bind="checked: $root.skipConfirm" /> Don't warn me again.</div><br> #}

	</div><br>
</div>

<div id="dialog-preflight" title="Preflight Check" class="modal hide fade medium">
	<div style="width:95%; height:95%; margin:auto; "><p><br>
		<center>You can now begin Quick Check.<br>

		</center><br><br>
		<button style="float: left; width: 35%;" data-bind="click: function() { $root.preflightDialog.modal('hide')}">Cancel Quick Check</button>

		<button style="float: right; width: 45%;" data-bind="visible: !hasProbe(), click: function() { $root.goTo('1'); $root.preflightDialog.modal('hide') }">Begin Quick Check</button>

		<button style="float: right; width: 45%;" data-bind="visible: hasProbe(), click: function() { $root.goTo('17'); $root.preflightDialog.modal('hide') }">Begin Quick Check</button>

		<br><br>
		{# <div style="float:right"><input type="checkbox" data-bind="checked: $root.skipConfirm" /> Don't warn me again.</div><br> #}

	</div><br>
</div>


<div id="dialog-hotend-replacement" title="Hotend Replacement Check" class="modal hide fade medium">
	<div style="width:95%; height:95%; margin:auto; "><p><br>



		Before you can proceed with quick check you must ensure your hot-end is properly installed and calibrated using the option(s) below. 


		<br />
		
		

		<div style="text-align:center;">

			<span style="margin-left:auto;margin-right:auto;display:inline-block;">
				<button style=" width: 40%;" data-bind=" click: function() {  $root.hotendChangeDialog.modal('hide');$root.showMaintenanceStep(0,'#tab_plugin_mgsetup_maintenance-cleanup'); }">T0 Hotend Replacement Instructions</button>
				<button style="width: 40%;" data-bind=" click: function() {  $root.hotendChangeDialog.modal('hide');$root.showMaintenanceStep(0,'#tab_plugin_mgsetup_maintenance-cleanup'); }">T1 Hotend Replacement Instructions</button>
				<br><br>
			</span>
		</div>



		<button style="float: left; width: 35%;" data-bind="click: function() { $root.hotendChangeDialog.modal('hide')}">Cancel</button>
		<br>


	</div><br>
</div>





<div id="dialog-wiggle" title="Zigzag Print Confirmation" class="modal hide fade medium">
	<div style="width:95%; height:95%; margin:auto; "><p><br>
		<center>Please make sure that your Print Bed is clear before printing this Zigzag.<br>

		</center>
		<br><br>
		<button style="float: left; width: 35%;" data-bind="click: function() { $root.printWiggleDialog.modal('hide'); $root.skipConfirm(false); $root.lockButton(false) }">Cancel Pattern</button><button style="float: right; width: 45%;" data-bind="click: function() { $root.printWiggle(); $root.printWiggleDialog.modal('hide') }">Bed Is Clear - Print</button>
		<br><br>
		{# <div style="float:right"><input type="checkbox" data-bind="checked: $root.skipConfirm" /> Don't warn me again.</div><br> #}

	</div><br>
</div>
<div id="dialog-stepOne" title="Prepare Confirmation" class="modal hide fade medium">
	<div style="width:95%; height:95%; margin:auto; "><p><br>
		<center>
			Please make sure that your Print Bed is clear before performing this operation.
			<br>

		</center>
		<br><br>
		<button style="float: left; width: 35%;" data-bind="click: function() { $root.stepOneDialog.modal('hide'); $root.skipConfirm(false) }">Cancel</button><button style="float: right; width: 45%;" data-bind="click: function() { $root.setupCheckLevel(0); $root.stepOneDialog.modal('hide') }">Bed Is Clear - Prepare</button>
		<br><br>
		{# <div style="float:right"><input type="checkbox" data-bind="checked: $root.skipConfirm" /> Don't warn me again.</div><br> #}

	</div>
	<br>
</div>


<div id="dialog-bedConfigDialog" title="Bed Level Issue" class="modal hide fade medium">
	<div style="width:95%; height:95%; margin:auto; "><p><br>
		<center>You have adjusted the bed at least 3 times, however it still requires adjustment.  This could be a sign of the bed being installed or configured incorrectly.  Please go to the Bed Configuration page to confirm the bed installation; you can, however, try leveling again instead.<br>

		</center><br><br>
		<button style="float: left; width: 35%;" data-bind="click: function() { $root.bedConfigDialog.modal('hide'); $root.probeLevelAssist('skipConfig')}">Level Again</button><button style="float: right; width: 45%;" data-bind="visible: hasProbe(), click: function() { $root.goTo('27'); $root.bedConfigDialog.modal('hide') }">Check Bed Configuration</button><br><br>
		{# <div style="float:right"><input type="checkbox" data-bind="checked: $root.skipConfirm" /> Don't warn me again.</div><br> #}

	</div><br>
</div>












<!-- Templates for custom controls -->
<script type="text/html" id="customControls_containerTemplate_nameless">
	<div class="custom_section">
		<!-- ko template: { name: 'customControls_containerTemplate', data: $data } --><!-- /ko -->
	</div>
</script>
{#
	<script src='https://code.responsivevoice.org/responsivevoice.src.js'></script>#}


	<script type="text/html" id="customControls_containerTemplate_collapsable">
		<div class="custom_section">
			<h1 data-bind="toggleContent: { class: 'icon-caret-right icon-caret-down', parent: '.custom_section', container: '> div' }"><i data-bind="css: {'icon-caret-down': !collapsed, 'icon-caret-right': collapsed}"></i> <span data-bind="text: name"></span></h1>
			<!-- ko template: { name: 'customControls_containerTemplate', data: $data } --><!-- /ko -->
		</div>
	</script>
	<script type="text/html" id="customControls_containerTemplate">
		<!-- ko if: layout == 'vertical' -->
		<div class="custom_section_vertical" data-bind="template: { name: $root.displayMode, foreach: children }, css: {hide: collapsed && name}"></div>
		<!-- /ko -->

		<!-- ko if: layout == 'horizontal' -->
		<div class="custom_section_horizontal" data-bind="template: { name: $root.displayMode, foreach: children }, css: {hide: collapsed && name}"></div>
		<!-- /ko -->

		<!-- ko if: layout == 'horizontal_grid' -->
		<div class="row-fluid custom_section_horizontal_grid" data-bind="css: {hide: collapsed && name}">
			<!-- ko foreach: children -->
			<div data-bind="template: { name: $root.displayMode }, css: $root.rowCss($data)"></div>
			<!-- /ko -->
		</div>
		<!-- /ko -->
	</script>
	<script type="text/html" id="customControls_controlTemplate">
		<form class="form-inline custom_control">
			<!-- ko template: { name: 'customControls_controlTemplate_input', data: $data, if: $data.hasOwnProperty('input') } --><!-- /ko -->
			<!-- ko template: { name: 'customControls_controlTemplate_command', data: $data, if: $data.hasOwnProperty('command') || $data.hasOwnProperty('commands') || $data.hasOwnProperty('script') || $data.hasOwnProperty('javascript') } --><!-- /ko -->
			<!-- ko template: { name: 'customControls_controlTemplate_output', data: $data, if: $data.hasOwnProperty('output') } --><!-- /ko -->
		</form>
	</script>
	<script type="text/html" id="customControls_controlTemplate_input">
		<!-- ko foreach: input -->
		<label style="cursor: default" data-bind="text: name"></label>
		<!-- ko if: slider -->
		<input type="number" style="width: 100px" data-bind="slider: {value: value, min: slider.min, max: slider.max, step: slider.step}">
		<!-- /ko -->
		<!-- ko ifnot: slider -->
		<input type="text" class="input-small" data-bind="attr: {placeholder: name}, value: value">
		<!-- /ko -->
		<!-- /ko -->
	</script>
	<script type="text/html" id="customControls_controlTemplate_output">
		<label style="cursor: default" data-bind="text: output"></label>
	</script>
	<script type="text/html" id="customControls_controlTemplate_command">
		<button class="btn" data-bind="text: name, enable: $root.isCustomEnabled($data), click: function() { $root.clickCustom($data) }"></button>
	</script>
	<script src="{{ url_for("static", filename="js/lib/jquery/jquery.min.js") }}"></script>
	<script src="{{ url_for("static", filename="js/lib/lodash.min.js") }}"></script>
	<script src="/plugin/mgsetup/static/video-js/video.min.js"></script>
	<script src="/plugin/mgsetup/static/js/lightbox.js"></script>
	<link href="/plugin/mgsetup/static/video-js/video-js.min.css" rel="stylesheet">
	<link href="/plugin/mgsetup/static/css/lightbox.css" rel="stylesheet">
	<!-- End of templates for custom controls -->

	<!-- Latest compiled and minified plotly.js JavaScript -->
	<script type="text/javascript" src="/plugin/mgsetup/static/js/plotly-v1-31-2.min.js"></script>



	<!-- OR an un-minified version is also available -->
{# <script type="text/javascript" src="https://cdn.plot.ly/plotly-latest.js"></script> #}
